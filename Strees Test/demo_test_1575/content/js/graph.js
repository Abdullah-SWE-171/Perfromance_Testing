/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 14.0, "minX": 0.0, "maxY": 22847.0, "series": [{"data": [[0.0, 14.0], [0.1, 15.0], [0.2, 15.0], [0.3, 15.0], [0.4, 16.0], [0.5, 16.0], [0.6, 16.0], [0.7, 16.0], [0.8, 16.0], [0.9, 16.0], [1.0, 16.0], [1.1, 17.0], [1.2, 17.0], [1.3, 17.0], [1.4, 17.0], [1.5, 17.0], [1.6, 17.0], [1.7, 17.0], [1.8, 17.0], [1.9, 17.0], [2.0, 17.0], [2.1, 17.0], [2.2, 18.0], [2.3, 18.0], [2.4, 18.0], [2.5, 18.0], [2.6, 18.0], [2.7, 18.0], [2.8, 18.0], [2.9, 18.0], [3.0, 18.0], [3.1, 18.0], [3.2, 19.0], [3.3, 19.0], [3.4, 19.0], [3.5, 19.0], [3.6, 19.0], [3.7, 19.0], [3.8, 19.0], [3.9, 19.0], [4.0, 19.0], [4.1, 19.0], [4.2, 19.0], [4.3, 19.0], [4.4, 20.0], [4.5, 20.0], [4.6, 20.0], [4.7, 20.0], [4.8, 20.0], [4.9, 20.0], [5.0, 20.0], [5.1, 20.0], [5.2, 20.0], [5.3, 20.0], [5.4, 20.0], [5.5, 20.0], [5.6, 20.0], [5.7, 21.0], [5.8, 21.0], [5.9, 21.0], [6.0, 21.0], [6.1, 21.0], [6.2, 21.0], [6.3, 21.0], [6.4, 21.0], [6.5, 21.0], [6.6, 21.0], [6.7, 21.0], [6.8, 21.0], [6.9, 21.0], [7.0, 22.0], [7.1, 22.0], [7.2, 22.0], [7.3, 22.0], [7.4, 22.0], [7.5, 22.0], [7.6, 22.0], [7.7, 22.0], [7.8, 22.0], [7.9, 22.0], [8.0, 22.0], [8.1, 22.0], [8.2, 23.0], [8.3, 23.0], [8.4, 23.0], [8.5, 23.0], [8.6, 23.0], [8.7, 23.0], [8.8, 23.0], [8.9, 23.0], [9.0, 23.0], [9.1, 23.0], [9.2, 23.0], [9.3, 24.0], [9.4, 24.0], [9.5, 24.0], [9.6, 24.0], [9.7, 24.0], [9.8, 24.0], [9.9, 24.0], [10.0, 24.0], [10.1, 24.0], [10.2, 25.0], [10.3, 25.0], [10.4, 25.0], [10.5, 25.0], [10.6, 25.0], [10.7, 25.0], [10.8, 25.0], [10.9, 25.0], [11.0, 25.0], [11.1, 25.0], [11.2, 26.0], [11.3, 26.0], [11.4, 26.0], [11.5, 26.0], [11.6, 26.0], [11.7, 26.0], [11.8, 26.0], [11.9, 26.0], [12.0, 26.0], [12.1, 27.0], [12.2, 27.0], [12.3, 27.0], [12.4, 27.0], [12.5, 28.0], [12.6, 28.0], [12.7, 28.0], [12.8, 28.0], [12.9, 28.0], [13.0, 28.0], [13.1, 29.0], [13.2, 29.0], [13.3, 29.0], [13.4, 30.0], [13.5, 30.0], [13.6, 30.0], [13.7, 30.0], [13.8, 30.0], [13.9, 30.0], [14.0, 30.0], [14.1, 31.0], [14.2, 31.0], [14.3, 31.0], [14.4, 31.0], [14.5, 31.0], [14.6, 31.0], [14.7, 31.0], [14.8, 32.0], [14.9, 32.0], [15.0, 32.0], [15.1, 32.0], [15.2, 32.0], [15.3, 32.0], [15.4, 33.0], [15.5, 33.0], [15.6, 33.0], [15.7, 33.0], [15.8, 34.0], [15.9, 34.0], [16.0, 34.0], [16.1, 34.0], [16.2, 34.0], [16.3, 34.0], [16.4, 35.0], [16.5, 35.0], [16.6, 35.0], [16.7, 36.0], [16.8, 36.0], [16.9, 36.0], [17.0, 37.0], [17.1, 37.0], [17.2, 37.0], [17.3, 38.0], [17.4, 38.0], [17.5, 38.0], [17.6, 39.0], [17.7, 39.0], [17.8, 40.0], [17.9, 40.0], [18.0, 41.0], [18.1, 41.0], [18.2, 41.0], [18.3, 42.0], [18.4, 42.0], [18.5, 45.0], [18.6, 45.0], [18.7, 47.0], [18.8, 50.0], [18.9, 50.0], [19.0, 52.0], [19.1, 53.0], [19.2, 56.0], [19.3, 57.0], [19.4, 57.0], [19.5, 60.0], [19.6, 60.0], [19.7, 61.0], [19.8, 62.0], [19.9, 64.0], [20.0, 64.0], [20.1, 65.0], [20.2, 65.0], [20.3, 66.0], [20.4, 66.0], [20.5, 66.0], [20.6, 66.0], [20.7, 67.0], [20.8, 67.0], [20.9, 67.0], [21.0, 67.0], [21.1, 68.0], [21.2, 68.0], [21.3, 68.0], [21.4, 68.0], [21.5, 68.0], [21.6, 68.0], [21.7, 68.0], [21.8, 68.0], [21.9, 68.0], [22.0, 68.0], [22.1, 68.0], [22.2, 68.0], [22.3, 68.0], [22.4, 68.0], [22.5, 69.0], [22.6, 69.0], [22.7, 69.0], [22.8, 69.0], [22.9, 69.0], [23.0, 69.0], [23.1, 69.0], [23.2, 69.0], [23.3, 69.0], [23.4, 69.0], [23.5, 69.0], [23.6, 69.0], [23.7, 69.0], [23.8, 69.0], [23.9, 69.0], [24.0, 69.0], [24.1, 70.0], [24.2, 70.0], [24.3, 70.0], [24.4, 70.0], [24.5, 70.0], [24.6, 70.0], [24.7, 70.0], [24.8, 70.0], [24.9, 70.0], [25.0, 71.0], [25.1, 71.0], [25.2, 71.0], [25.3, 71.0], [25.4, 71.0], [25.5, 71.0], [25.6, 71.0], [25.7, 71.0], [25.8, 71.0], [25.9, 72.0], [26.0, 72.0], [26.1, 72.0], [26.2, 72.0], [26.3, 72.0], [26.4, 72.0], [26.5, 72.0], [26.6, 72.0], [26.7, 73.0], [26.8, 73.0], [26.9, 73.0], [27.0, 73.0], [27.1, 73.0], [27.2, 73.0], [27.3, 73.0], [27.4, 73.0], [27.5, 73.0], [27.6, 73.0], [27.7, 73.0], [27.8, 74.0], [27.9, 74.0], [28.0, 74.0], [28.1, 74.0], [28.2, 74.0], [28.3, 74.0], [28.4, 75.0], [28.5, 75.0], [28.6, 75.0], [28.7, 75.0], [28.8, 75.0], [28.9, 76.0], [29.0, 76.0], [29.1, 76.0], [29.2, 76.0], [29.3, 76.0], [29.4, 76.0], [29.5, 76.0], [29.6, 77.0], [29.7, 77.0], [29.8, 78.0], [29.9, 78.0], [30.0, 78.0], [30.1, 78.0], [30.2, 78.0], [30.3, 78.0], [30.4, 79.0], [30.5, 79.0], [30.6, 79.0], [30.7, 79.0], [30.8, 80.0], [30.9, 80.0], [31.0, 80.0], [31.1, 80.0], [31.2, 81.0], [31.3, 81.0], [31.4, 81.0], [31.5, 81.0], [31.6, 82.0], [31.7, 82.0], [31.8, 83.0], [31.9, 84.0], [32.0, 87.0], [32.1, 87.0], [32.2, 89.0], [32.3, 89.0], [32.4, 90.0], [32.5, 94.0], [32.6, 97.0], [32.7, 99.0], [32.8, 100.0], [32.9, 103.0], [33.0, 104.0], [33.1, 105.0], [33.2, 107.0], [33.3, 131.0], [33.4, 141.0], [33.5, 144.0], [33.6, 153.0], [33.7, 158.0], [33.8, 197.0], [33.9, 226.0], [34.0, 230.0], [34.1, 232.0], [34.2, 243.0], [34.3, 248.0], [34.4, 284.0], [34.5, 286.0], [34.6, 288.0], [34.7, 292.0], [34.8, 293.0], [34.9, 294.0], [35.0, 295.0], [35.1, 295.0], [35.2, 295.0], [35.3, 295.0], [35.4, 297.0], [35.5, 298.0], [35.6, 298.0], [35.7, 298.0], [35.8, 298.0], [35.9, 299.0], [36.0, 300.0], [36.1, 300.0], [36.2, 300.0], [36.3, 301.0], [36.4, 301.0], [36.5, 301.0], [36.6, 301.0], [36.7, 302.0], [36.8, 302.0], [36.9, 303.0], [37.0, 303.0], [37.1, 303.0], [37.2, 304.0], [37.3, 304.0], [37.4, 304.0], [37.5, 305.0], [37.6, 305.0], [37.7, 305.0], [37.8, 305.0], [37.9, 305.0], [38.0, 306.0], [38.1, 306.0], [38.2, 306.0], [38.3, 307.0], [38.4, 307.0], [38.5, 308.0], [38.6, 308.0], [38.7, 309.0], [38.8, 309.0], [38.9, 309.0], [39.0, 309.0], [39.1, 310.0], [39.2, 310.0], [39.3, 311.0], [39.4, 311.0], [39.5, 312.0], [39.6, 312.0], [39.7, 313.0], [39.8, 313.0], [39.9, 314.0], [40.0, 315.0], [40.1, 316.0], [40.2, 317.0], [40.3, 318.0], [40.4, 319.0], [40.5, 319.0], [40.6, 320.0], [40.7, 321.0], [40.8, 321.0], [40.9, 322.0], [41.0, 324.0], [41.1, 324.0], [41.2, 324.0], [41.3, 328.0], [41.4, 330.0], [41.5, 331.0], [41.6, 332.0], [41.7, 333.0], [41.8, 336.0], [41.9, 336.0], [42.0, 337.0], [42.1, 337.0], [42.2, 338.0], [42.3, 342.0], [42.4, 344.0], [42.5, 352.0], [42.6, 353.0], [42.7, 355.0], [42.8, 364.0], [42.9, 365.0], [43.0, 369.0], [43.1, 369.0], [43.2, 371.0], [43.3, 375.0], [43.4, 380.0], [43.5, 384.0], [43.6, 388.0], [43.7, 394.0], [43.8, 404.0], [43.9, 407.0], [44.0, 502.0], [44.1, 503.0], [44.2, 507.0], [44.3, 510.0], [44.4, 516.0], [44.5, 521.0], [44.6, 526.0], [44.7, 530.0], [44.8, 531.0], [44.9, 532.0], [45.0, 532.0], [45.1, 534.0], [45.2, 534.0], [45.3, 535.0], [45.4, 536.0], [45.5, 536.0], [45.6, 538.0], [45.7, 540.0], [45.8, 540.0], [45.9, 541.0], [46.0, 542.0], [46.1, 543.0], [46.2, 543.0], [46.3, 543.0], [46.4, 543.0], [46.5, 544.0], [46.6, 544.0], [46.7, 545.0], [46.8, 545.0], [46.9, 546.0], [47.0, 546.0], [47.1, 546.0], [47.2, 548.0], [47.3, 548.0], [47.4, 549.0], [47.5, 549.0], [47.6, 550.0], [47.7, 550.0], [47.8, 550.0], [47.9, 552.0], [48.0, 553.0], [48.1, 553.0], [48.2, 553.0], [48.3, 553.0], [48.4, 554.0], [48.5, 555.0], [48.6, 556.0], [48.7, 557.0], [48.8, 558.0], [48.9, 558.0], [49.0, 558.0], [49.1, 559.0], [49.2, 559.0], [49.3, 560.0], [49.4, 561.0], [49.5, 561.0], [49.6, 564.0], [49.7, 564.0], [49.8, 565.0], [49.9, 565.0], [50.0, 565.0], [50.1, 566.0], [50.2, 567.0], [50.3, 567.0], [50.4, 567.0], [50.5, 568.0], [50.6, 569.0], [50.7, 570.0], [50.8, 576.0], [50.9, 576.0], [51.0, 579.0], [51.1, 579.0], [51.2, 581.0], [51.3, 584.0], [51.4, 597.0], [51.5, 600.0], [51.6, 613.0], [51.7, 624.0], [51.8, 625.0], [51.9, 659.0], [52.0, 670.0], [52.1, 672.0], [52.2, 702.0], [52.3, 707.0], [52.4, 709.0], [52.5, 713.0], [52.6, 718.0], [52.7, 726.0], [52.8, 734.0], [52.9, 748.0], [53.0, 753.0], [53.1, 772.0], [53.2, 789.0], [53.3, 833.0], [53.4, 879.0], [53.5, 924.0], [53.6, 933.0], [53.7, 936.0], [53.8, 937.0], [53.9, 939.0], [54.0, 942.0], [54.1, 943.0], [54.2, 945.0], [54.3, 949.0], [54.4, 951.0], [54.5, 954.0], [54.6, 954.0], [54.7, 958.0], [54.8, 962.0], [54.9, 962.0], [55.0, 964.0], [55.1, 964.0], [55.2, 965.0], [55.3, 967.0], [55.4, 972.0], [55.5, 974.0], [55.6, 974.0], [55.7, 976.0], [55.8, 980.0], [55.9, 982.0], [56.0, 983.0], [56.1, 985.0], [56.2, 986.0], [56.3, 987.0], [56.4, 988.0], [56.5, 988.0], [56.6, 988.0], [56.7, 991.0], [56.8, 991.0], [56.9, 995.0], [57.0, 995.0], [57.1, 996.0], [57.2, 996.0], [57.3, 997.0], [57.4, 999.0], [57.5, 999.0], [57.6, 999.0], [57.7, 1000.0], [57.8, 1003.0], [57.9, 1004.0], [58.0, 1004.0], [58.1, 1007.0], [58.2, 1008.0], [58.3, 1011.0], [58.4, 1013.0], [58.5, 1016.0], [58.6, 1016.0], [58.7, 1017.0], [58.8, 1018.0], [58.9, 1018.0], [59.0, 1020.0], [59.1, 1020.0], [59.2, 1025.0], [59.3, 1025.0], [59.4, 1027.0], [59.5, 1028.0], [59.6, 1029.0], [59.7, 1029.0], [59.8, 1031.0], [59.9, 1032.0], [60.0, 1033.0], [60.1, 1034.0], [60.2, 1035.0], [60.3, 1035.0], [60.4, 1038.0], [60.5, 1039.0], [60.6, 1040.0], [60.7, 1043.0], [60.8, 1044.0], [60.9, 1045.0], [61.0, 1046.0], [61.1, 1047.0], [61.2, 1048.0], [61.3, 1050.0], [61.4, 1051.0], [61.5, 1054.0], [61.6, 1060.0], [61.7, 1060.0], [61.8, 1069.0], [61.9, 1073.0], [62.0, 1087.0], [62.1, 1094.0], [62.2, 1098.0], [62.3, 1105.0], [62.4, 1111.0], [62.5, 1119.0], [62.6, 1122.0], [62.7, 1127.0], [62.8, 1132.0], [62.9, 1133.0], [63.0, 1140.0], [63.1, 1147.0], [63.2, 1166.0], [63.3, 1168.0], [63.4, 1198.0], [63.5, 1215.0], [63.6, 1232.0], [63.7, 1282.0], [63.8, 1345.0], [63.9, 1586.0], [64.0, 1651.0], [64.1, 1673.0], [64.2, 1837.0], [64.3, 1842.0], [64.4, 1848.0], [64.5, 1850.0], [64.6, 1852.0], [64.7, 1870.0], [64.8, 1881.0], [64.9, 1882.0], [65.0, 1886.0], [65.1, 1893.0], [65.2, 1894.0], [65.3, 1901.0], [65.4, 1906.0], [65.5, 1912.0], [65.6, 1915.0], [65.7, 1920.0], [65.8, 1935.0], [65.9, 1942.0], [66.0, 1957.0], [66.1, 1958.0], [66.2, 1958.0], [66.3, 1966.0], [66.4, 1969.0], [66.5, 1972.0], [66.6, 1972.0], [66.7, 1976.0], [66.8, 1978.0], [66.9, 1980.0], [67.0, 1983.0], [67.1, 1985.0], [67.2, 1987.0], [67.3, 1989.0], [67.4, 1992.0], [67.5, 1994.0], [67.6, 1997.0], [67.7, 1997.0], [67.8, 2000.0], [67.9, 2002.0], [68.0, 2006.0], [68.1, 2006.0], [68.2, 2010.0], [68.3, 2016.0], [68.4, 2019.0], [68.5, 2022.0], [68.6, 2025.0], [68.7, 2033.0], [68.8, 2034.0], [68.9, 2048.0], [69.0, 2049.0], [69.1, 2051.0], [69.2, 2053.0], [69.3, 2056.0], [69.4, 2059.0], [69.5, 2064.0], [69.6, 2075.0], [69.7, 2077.0], [69.8, 2090.0], [69.9, 2092.0], [70.0, 2113.0], [70.1, 2138.0], [70.2, 2160.0], [70.3, 2215.0], [70.4, 2231.0], [70.5, 2236.0], [70.6, 2238.0], [70.7, 2255.0], [70.8, 2265.0], [70.9, 2268.0], [71.0, 2275.0], [71.1, 2281.0], [71.2, 2299.0], [71.3, 2340.0], [71.4, 2342.0], [71.5, 2383.0], [71.6, 2388.0], [71.7, 2445.0], [71.8, 2514.0], [71.9, 2564.0], [72.0, 2732.0], [72.1, 2857.0], [72.2, 3153.0], [72.3, 3158.0], [72.4, 3167.0], [72.5, 3169.0], [72.6, 3178.0], [72.7, 3220.0], [72.8, 3250.0], [72.9, 3277.0], [73.0, 3281.0], [73.1, 3287.0], [73.2, 3287.0], [73.3, 3293.0], [73.4, 3302.0], [73.5, 3304.0], [73.6, 3317.0], [73.7, 3324.0], [73.8, 3360.0], [73.9, 3370.0], [74.0, 3378.0], [74.1, 3411.0], [74.2, 3421.0], [74.3, 3463.0], [74.4, 3480.0], [74.5, 3495.0], [74.6, 3497.0], [74.7, 3500.0], [74.8, 3501.0], [74.9, 3512.0], [75.0, 3519.0], [75.1, 3522.0], [75.2, 3533.0], [75.3, 3536.0], [75.4, 3543.0], [75.5, 3580.0], [75.6, 3587.0], [75.7, 3603.0], [75.8, 3604.0], [75.9, 3612.0], [76.0, 3615.0], [76.1, 3618.0], [76.2, 3619.0], [76.3, 3621.0], [76.4, 3623.0], [76.5, 3624.0], [76.6, 3629.0], [76.7, 3632.0], [76.8, 3632.0], [76.9, 3634.0], [77.0, 3635.0], [77.1, 3639.0], [77.2, 3640.0], [77.3, 3646.0], [77.4, 3652.0], [77.5, 3652.0], [77.6, 3655.0], [77.7, 3656.0], [77.8, 3660.0], [77.9, 3661.0], [78.0, 3663.0], [78.1, 3668.0], [78.2, 3673.0], [78.3, 3681.0], [78.4, 3681.0], [78.5, 3690.0], [78.6, 3703.0], [78.7, 3722.0], [78.8, 3727.0], [78.9, 3730.0], [79.0, 3737.0], [79.1, 3739.0], [79.2, 3742.0], [79.3, 3743.0], [79.4, 3747.0], [79.5, 3748.0], [79.6, 3748.0], [79.7, 3751.0], [79.8, 3752.0], [79.9, 3755.0], [80.0, 3756.0], [80.1, 3757.0], [80.2, 3762.0], [80.3, 3763.0], [80.4, 3765.0], [80.5, 3766.0], [80.6, 3775.0], [80.7, 3783.0], [80.8, 3783.0], [80.9, 3786.0], [81.0, 3789.0], [81.1, 3793.0], [81.2, 3794.0], [81.3, 3798.0], [81.4, 3800.0], [81.5, 3804.0], [81.6, 3812.0], [81.7, 3813.0], [81.8, 3814.0], [81.9, 3823.0], [82.0, 3843.0], [82.1, 3847.0], [82.2, 3854.0], [82.3, 3856.0], [82.4, 3868.0], [82.5, 3877.0], [82.6, 3878.0], [82.7, 3879.0], [82.8, 3884.0], [82.9, 3885.0], [83.0, 3889.0], [83.1, 3889.0], [83.2, 3891.0], [83.3, 3893.0], [83.4, 3900.0], [83.5, 3901.0], [83.6, 3904.0], [83.7, 3912.0], [83.8, 3912.0], [83.9, 3915.0], [84.0, 3917.0], [84.1, 3921.0], [84.2, 3928.0], [84.3, 3928.0], [84.4, 3934.0], [84.5, 3936.0], [84.6, 3940.0], [84.7, 3948.0], [84.8, 3952.0], [84.9, 3962.0], [85.0, 3964.0], [85.1, 3970.0], [85.2, 3981.0], [85.3, 3996.0], [85.4, 4012.0], [85.5, 4019.0], [85.6, 4027.0], [85.7, 4034.0], [85.8, 4035.0], [85.9, 4041.0], [86.0, 4044.0], [86.1, 4054.0], [86.2, 4073.0], [86.3, 4075.0], [86.4, 4077.0], [86.5, 4081.0], [86.6, 4082.0], [86.7, 4099.0], [86.8, 4126.0], [86.9, 4131.0], [87.0, 4147.0], [87.1, 4147.0], [87.2, 4157.0], [87.3, 4178.0], [87.4, 4193.0], [87.5, 4276.0], [87.6, 4276.0], [87.7, 4311.0], [87.8, 4325.0], [87.9, 4342.0], [88.0, 4372.0], [88.1, 4375.0], [88.2, 4547.0], [88.3, 4578.0], [88.4, 5373.0], [88.5, 6502.0], [88.6, 6707.0], [88.7, 6894.0], [88.8, 7013.0], [88.9, 7103.0], [89.0, 7103.0], [89.1, 7171.0], [89.2, 7190.0], [89.3, 7204.0], [89.4, 7213.0], [89.5, 7227.0], [89.6, 7232.0], [89.7, 7233.0], [89.8, 7246.0], [89.9, 7256.0], [90.0, 7356.0], [90.1, 7371.0], [90.2, 7372.0], [90.3, 7374.0], [90.4, 7377.0], [90.5, 7378.0], [90.6, 7379.0], [90.7, 7380.0], [90.8, 7384.0], [90.9, 7385.0], [91.0, 7392.0], [91.1, 7396.0], [91.2, 7400.0], [91.3, 7404.0], [91.4, 7408.0], [91.5, 7409.0], [91.6, 7417.0], [91.7, 7427.0], [91.8, 7432.0], [91.9, 7451.0], [92.0, 7461.0], [92.1, 7461.0], [92.2, 7470.0], [92.3, 7474.0], [92.4, 7475.0], [92.5, 7475.0], [92.6, 7482.0], [92.7, 7485.0], [92.8, 7486.0], [92.9, 7488.0], [93.0, 7488.0], [93.1, 7491.0], [93.2, 7491.0], [93.3, 7496.0], [93.4, 7500.0], [93.5, 7503.0], [93.6, 7513.0], [93.7, 7518.0], [93.8, 7529.0], [93.9, 7532.0], [94.0, 7540.0], [94.1, 7603.0], [94.2, 7619.0], [94.3, 7632.0], [94.4, 7632.0], [94.5, 7633.0], [94.6, 7633.0], [94.7, 7635.0], [94.8, 7639.0], [94.9, 7640.0], [95.0, 7644.0], [95.1, 7645.0], [95.2, 7652.0], [95.3, 7652.0], [95.4, 7657.0], [95.5, 7657.0], [95.6, 7658.0], [95.7, 7662.0], [95.8, 7664.0], [95.9, 7666.0], [96.0, 7671.0], [96.1, 7674.0], [96.2, 7677.0], [96.3, 7679.0], [96.4, 7683.0], [96.5, 7689.0], [96.6, 7691.0], [96.7, 7694.0], [96.8, 7694.0], [96.9, 7705.0], [97.0, 7709.0], [97.1, 7720.0], [97.2, 7720.0], [97.3, 7723.0], [97.4, 7727.0], [97.5, 7727.0], [97.6, 7729.0], [97.7, 7736.0], [97.8, 7739.0], [97.9, 7742.0], [98.0, 7758.0], [98.1, 7762.0], [98.2, 7765.0], [98.3, 7777.0], [98.4, 7786.0], [98.5, 7793.0], [98.6, 7796.0], [98.7, 7851.0], [98.8, 7875.0], [98.9, 7876.0], [99.0, 7889.0], [99.1, 7891.0], [99.2, 7914.0], [99.3, 7927.0], [99.4, 7930.0], [99.5, 7959.0], [99.6, 7961.0], [99.7, 7980.0], [99.8, 7992.0], [99.9, 8040.0]], "isOverall": false, "label": "getUser", "isController": false}, {"data": [[0.0, 15.0], [0.1, 15.0], [0.2, 16.0], [0.3, 16.0], [0.4, 16.0], [0.5, 17.0], [0.6, 18.0], [0.7, 18.0], [0.8, 18.0], [0.9, 19.0], [1.0, 19.0], [1.1, 19.0], [1.2, 19.0], [1.3, 19.0], [1.4, 20.0], [1.5, 20.0], [1.6, 20.0], [1.7, 20.0], [1.8, 20.0], [1.9, 20.0], [2.0, 20.0], [2.1, 21.0], [2.2, 21.0], [2.3, 21.0], [2.4, 21.0], [2.5, 22.0], [2.6, 22.0], [2.7, 22.0], [2.8, 22.0], [2.9, 22.0], [3.0, 22.0], [3.1, 23.0], [3.2, 23.0], [3.3, 23.0], [3.4, 23.0], [3.5, 23.0], [3.6, 23.0], [3.7, 23.0], [3.8, 23.0], [3.9, 24.0], [4.0, 24.0], [4.1, 24.0], [4.2, 24.0], [4.3, 24.0], [4.4, 24.0], [4.5, 24.0], [4.6, 24.0], [4.7, 25.0], [4.8, 25.0], [4.9, 25.0], [5.0, 25.0], [5.1, 25.0], [5.2, 25.0], [5.3, 25.0], [5.4, 25.0], [5.5, 25.0], [5.6, 25.0], [5.7, 25.0], [5.8, 26.0], [5.9, 26.0], [6.0, 26.0], [6.1, 26.0], [6.2, 26.0], [6.3, 26.0], [6.4, 27.0], [6.5, 27.0], [6.6, 27.0], [6.7, 27.0], [6.8, 27.0], [6.9, 27.0], [7.0, 27.0], [7.1, 27.0], [7.2, 28.0], [7.3, 28.0], [7.4, 28.0], [7.5, 28.0], [7.6, 28.0], [7.7, 28.0], [7.8, 28.0], [7.9, 28.0], [8.0, 28.0], [8.1, 28.0], [8.2, 29.0], [8.3, 29.0], [8.4, 29.0], [8.5, 29.0], [8.6, 29.0], [8.7, 29.0], [8.8, 29.0], [8.9, 29.0], [9.0, 29.0], [9.1, 30.0], [9.2, 30.0], [9.3, 30.0], [9.4, 30.0], [9.5, 30.0], [9.6, 30.0], [9.7, 30.0], [9.8, 30.0], [9.9, 30.0], [10.0, 30.0], [10.1, 30.0], [10.2, 31.0], [10.3, 31.0], [10.4, 31.0], [10.5, 31.0], [10.6, 31.0], [10.7, 31.0], [10.8, 31.0], [10.9, 31.0], [11.0, 31.0], [11.1, 31.0], [11.2, 31.0], [11.3, 31.0], [11.4, 32.0], [11.5, 32.0], [11.6, 32.0], [11.7, 32.0], [11.8, 32.0], [11.9, 32.0], [12.0, 32.0], [12.1, 32.0], [12.2, 32.0], [12.3, 32.0], [12.4, 32.0], [12.5, 32.0], [12.6, 33.0], [12.7, 33.0], [12.8, 33.0], [12.9, 33.0], [13.0, 33.0], [13.1, 33.0], [13.2, 33.0], [13.3, 33.0], [13.4, 33.0], [13.5, 33.0], [13.6, 34.0], [13.7, 34.0], [13.8, 34.0], [13.9, 34.0], [14.0, 34.0], [14.1, 34.0], [14.2, 34.0], [14.3, 34.0], [14.4, 34.0], [14.5, 34.0], [14.6, 34.0], [14.7, 35.0], [14.8, 35.0], [14.9, 35.0], [15.0, 35.0], [15.1, 35.0], [15.2, 35.0], [15.3, 35.0], [15.4, 35.0], [15.5, 35.0], [15.6, 35.0], [15.7, 36.0], [15.8, 36.0], [15.9, 36.0], [16.0, 36.0], [16.1, 36.0], [16.2, 36.0], [16.3, 36.0], [16.4, 36.0], [16.5, 36.0], [16.6, 36.0], [16.7, 36.0], [16.8, 37.0], [16.9, 37.0], [17.0, 37.0], [17.1, 37.0], [17.2, 37.0], [17.3, 37.0], [17.4, 37.0], [17.5, 37.0], [17.6, 37.0], [17.7, 37.0], [17.8, 38.0], [17.9, 38.0], [18.0, 38.0], [18.1, 38.0], [18.2, 38.0], [18.3, 38.0], [18.4, 38.0], [18.5, 38.0], [18.6, 38.0], [18.7, 38.0], [18.8, 38.0], [18.9, 38.0], [19.0, 38.0], [19.1, 38.0], [19.2, 39.0], [19.3, 39.0], [19.4, 39.0], [19.5, 39.0], [19.6, 39.0], [19.7, 39.0], [19.8, 39.0], [19.9, 40.0], [20.0, 40.0], [20.1, 41.0], [20.2, 42.0], [20.3, 42.0], [20.4, 42.0], [20.5, 42.0], [20.6, 42.0], [20.7, 42.0], [20.8, 43.0], [20.9, 43.0], [21.0, 43.0], [21.1, 44.0], [21.2, 44.0], [21.3, 44.0], [21.4, 45.0], [21.5, 45.0], [21.6, 45.0], [21.7, 45.0], [21.8, 46.0], [21.9, 46.0], [22.0, 46.0], [22.1, 46.0], [22.2, 47.0], [22.3, 47.0], [22.4, 47.0], [22.5, 48.0], [22.6, 49.0], [22.7, 49.0], [22.8, 49.0], [22.9, 50.0], [23.0, 51.0], [23.1, 51.0], [23.2, 52.0], [23.3, 52.0], [23.4, 52.0], [23.5, 52.0], [23.6, 53.0], [23.7, 53.0], [23.8, 53.0], [23.9, 53.0], [24.0, 53.0], [24.1, 54.0], [24.2, 54.0], [24.3, 54.0], [24.4, 54.0], [24.5, 54.0], [24.6, 55.0], [24.7, 56.0], [24.8, 56.0], [24.9, 56.0], [25.0, 56.0], [25.1, 56.0], [25.2, 57.0], [25.3, 57.0], [25.4, 57.0], [25.5, 58.0], [25.6, 59.0], [25.7, 59.0], [25.8, 60.0], [25.9, 60.0], [26.0, 60.0], [26.1, 61.0], [26.2, 61.0], [26.3, 61.0], [26.4, 61.0], [26.5, 61.0], [26.6, 61.0], [26.7, 62.0], [26.8, 62.0], [26.9, 62.0], [27.0, 63.0], [27.1, 63.0], [27.2, 64.0], [27.3, 64.0], [27.4, 65.0], [27.5, 66.0], [27.6, 66.0], [27.7, 66.0], [27.8, 66.0], [27.9, 66.0], [28.0, 67.0], [28.1, 67.0], [28.2, 67.0], [28.3, 67.0], [28.4, 68.0], [28.5, 68.0], [28.6, 68.0], [28.7, 68.0], [28.8, 69.0], [28.9, 69.0], [29.0, 69.0], [29.1, 69.0], [29.2, 69.0], [29.3, 69.0], [29.4, 69.0], [29.5, 69.0], [29.6, 70.0], [29.7, 70.0], [29.8, 70.0], [29.9, 70.0], [30.0, 70.0], [30.1, 70.0], [30.2, 70.0], [30.3, 72.0], [30.4, 72.0], [30.5, 72.0], [30.6, 72.0], [30.7, 72.0], [30.8, 72.0], [30.9, 73.0], [31.0, 74.0], [31.1, 74.0], [31.2, 75.0], [31.3, 75.0], [31.4, 75.0], [31.5, 76.0], [31.6, 76.0], [31.7, 76.0], [31.8, 76.0], [31.9, 77.0], [32.0, 77.0], [32.1, 77.0], [32.2, 77.0], [32.3, 78.0], [32.4, 78.0], [32.5, 78.0], [32.6, 78.0], [32.7, 79.0], [32.8, 79.0], [32.9, 79.0], [33.0, 79.0], [33.1, 80.0], [33.2, 80.0], [33.3, 80.0], [33.4, 80.0], [33.5, 80.0], [33.6, 80.0], [33.7, 81.0], [33.8, 81.0], [33.9, 81.0], [34.0, 81.0], [34.1, 81.0], [34.2, 81.0], [34.3, 81.0], [34.4, 81.0], [34.5, 82.0], [34.6, 82.0], [34.7, 82.0], [34.8, 82.0], [34.9, 82.0], [35.0, 82.0], [35.1, 83.0], [35.2, 83.0], [35.3, 83.0], [35.4, 83.0], [35.5, 83.0], [35.6, 83.0], [35.7, 85.0], [35.8, 85.0], [35.9, 85.0], [36.0, 85.0], [36.1, 85.0], [36.2, 85.0], [36.3, 85.0], [36.4, 86.0], [36.5, 86.0], [36.6, 86.0], [36.7, 87.0], [36.8, 88.0], [36.9, 89.0], [37.0, 89.0], [37.1, 90.0], [37.2, 90.0], [37.3, 92.0], [37.4, 93.0], [37.5, 93.0], [37.6, 94.0], [37.7, 95.0], [37.8, 96.0], [37.9, 96.0], [38.0, 97.0], [38.1, 97.0], [38.2, 99.0], [38.3, 103.0], [38.4, 103.0], [38.5, 104.0], [38.6, 104.0], [38.7, 105.0], [38.8, 106.0], [38.9, 110.0], [39.0, 113.0], [39.1, 115.0], [39.2, 117.0], [39.3, 117.0], [39.4, 117.0], [39.5, 118.0], [39.6, 118.0], [39.7, 120.0], [39.8, 120.0], [39.9, 125.0], [40.0, 126.0], [40.1, 127.0], [40.2, 130.0], [40.3, 131.0], [40.4, 134.0], [40.5, 135.0], [40.6, 136.0], [40.7, 138.0], [40.8, 138.0], [40.9, 138.0], [41.0, 142.0], [41.1, 143.0], [41.2, 144.0], [41.3, 145.0], [41.4, 146.0], [41.5, 147.0], [41.6, 149.0], [41.7, 149.0], [41.8, 150.0], [41.9, 150.0], [42.0, 151.0], [42.1, 152.0], [42.2, 154.0], [42.3, 157.0], [42.4, 158.0], [42.5, 160.0], [42.6, 160.0], [42.7, 160.0], [42.8, 160.0], [42.9, 161.0], [43.0, 161.0], [43.1, 162.0], [43.2, 163.0], [43.3, 163.0], [43.4, 164.0], [43.5, 165.0], [43.6, 165.0], [43.7, 169.0], [43.8, 169.0], [43.9, 171.0], [44.0, 176.0], [44.1, 178.0], [44.2, 180.0], [44.3, 180.0], [44.4, 184.0], [44.5, 185.0], [44.6, 186.0], [44.7, 188.0], [44.8, 189.0], [44.9, 189.0], [45.0, 190.0], [45.1, 192.0], [45.2, 192.0], [45.3, 194.0], [45.4, 195.0], [45.5, 197.0], [45.6, 198.0], [45.7, 200.0], [45.8, 201.0], [45.9, 202.0], [46.0, 209.0], [46.1, 211.0], [46.2, 212.0], [46.3, 213.0], [46.4, 213.0], [46.5, 215.0], [46.6, 219.0], [46.7, 223.0], [46.8, 226.0], [46.9, 226.0], [47.0, 228.0], [47.1, 229.0], [47.2, 232.0], [47.3, 233.0], [47.4, 234.0], [47.5, 236.0], [47.6, 237.0], [47.7, 239.0], [47.8, 240.0], [47.9, 243.0], [48.0, 246.0], [48.1, 246.0], [48.2, 261.0], [48.3, 280.0], [48.4, 290.0], [48.5, 299.0], [48.6, 304.0], [48.7, 313.0], [48.8, 316.0], [48.9, 317.0], [49.0, 317.0], [49.1, 321.0], [49.2, 322.0], [49.3, 328.0], [49.4, 340.0], [49.5, 342.0], [49.6, 353.0], [49.7, 355.0], [49.8, 367.0], [49.9, 373.0], [50.0, 378.0], [50.1, 404.0], [50.2, 415.0], [50.3, 421.0], [50.4, 434.0], [50.5, 437.0], [50.6, 438.0], [50.7, 445.0], [50.8, 455.0], [50.9, 455.0], [51.0, 459.0], [51.1, 460.0], [51.2, 461.0], [51.3, 466.0], [51.4, 480.0], [51.5, 482.0], [51.6, 482.0], [51.7, 486.0], [51.8, 488.0], [51.9, 501.0], [52.0, 508.0], [52.1, 511.0], [52.2, 515.0], [52.3, 516.0], [52.4, 541.0], [52.5, 545.0], [52.6, 548.0], [52.7, 555.0], [52.8, 555.0], [52.9, 563.0], [53.0, 566.0], [53.1, 574.0], [53.2, 577.0], [53.3, 583.0], [53.4, 589.0], [53.5, 589.0], [53.6, 591.0], [53.7, 591.0], [53.8, 599.0], [53.9, 600.0], [54.0, 614.0], [54.1, 620.0], [54.2, 622.0], [54.3, 628.0], [54.4, 628.0], [54.5, 629.0], [54.6, 639.0], [54.7, 640.0], [54.8, 649.0], [54.9, 652.0], [55.0, 656.0], [55.1, 660.0], [55.2, 662.0], [55.3, 662.0], [55.4, 677.0], [55.5, 689.0], [55.6, 689.0], [55.7, 698.0], [55.8, 699.0], [55.9, 712.0], [56.0, 716.0], [56.1, 719.0], [56.2, 726.0], [56.3, 726.0], [56.4, 738.0], [56.5, 742.0], [56.6, 751.0], [56.7, 755.0], [56.8, 756.0], [56.9, 771.0], [57.0, 784.0], [57.1, 815.0], [57.2, 815.0], [57.3, 844.0], [57.4, 857.0], [57.5, 872.0], [57.6, 889.0], [57.7, 890.0], [57.8, 895.0], [57.9, 897.0], [58.0, 909.0], [58.1, 913.0], [58.2, 923.0], [58.3, 937.0], [58.4, 937.0], [58.5, 941.0], [58.6, 942.0], [58.7, 945.0], [58.8, 956.0], [58.9, 960.0], [59.0, 976.0], [59.1, 977.0], [59.2, 995.0], [59.3, 996.0], [59.4, 999.0], [59.5, 1013.0], [59.6, 1015.0], [59.7, 1028.0], [59.8, 1029.0], [59.9, 1039.0], [60.0, 1052.0], [60.1, 1056.0], [60.2, 1066.0], [60.3, 1066.0], [60.4, 1069.0], [60.5, 1071.0], [60.6, 1074.0], [60.7, 1081.0], [60.8, 1091.0], [60.9, 1097.0], [61.0, 1106.0], [61.1, 1126.0], [61.2, 1133.0], [61.3, 1140.0], [61.4, 1145.0], [61.5, 1160.0], [61.6, 1165.0], [61.7, 1166.0], [61.8, 1173.0], [61.9, 1179.0], [62.0, 1192.0], [62.1, 1204.0], [62.2, 1206.0], [62.3, 1208.0], [62.4, 1213.0], [62.5, 1222.0], [62.6, 1229.0], [62.7, 1231.0], [62.8, 1241.0], [62.9, 1242.0], [63.0, 1243.0], [63.1, 1252.0], [63.2, 1265.0], [63.3, 1268.0], [63.4, 1282.0], [63.5, 1292.0], [63.6, 1297.0], [63.7, 1307.0], [63.8, 1339.0], [63.9, 1361.0], [64.0, 1370.0], [64.1, 1379.0], [64.2, 1395.0], [64.3, 1395.0], [64.4, 1426.0], [64.5, 1427.0], [64.6, 1522.0], [64.7, 1536.0], [64.8, 1537.0], [64.9, 1549.0], [65.0, 1552.0], [65.1, 1600.0], [65.2, 1617.0], [65.3, 1656.0], [65.4, 1663.0], [65.5, 1670.0], [65.6, 1679.0], [65.7, 1705.0], [65.8, 1713.0], [65.9, 1721.0], [66.0, 1726.0], [66.1, 1742.0], [66.2, 1752.0], [66.3, 1770.0], [66.4, 1771.0], [66.5, 1779.0], [66.6, 1789.0], [66.7, 1794.0], [66.8, 1822.0], [66.9, 1823.0], [67.0, 1839.0], [67.1, 1840.0], [67.2, 1850.0], [67.3, 1853.0], [67.4, 1860.0], [67.5, 1870.0], [67.6, 1871.0], [67.7, 1882.0], [67.8, 1890.0], [67.9, 1892.0], [68.0, 1902.0], [68.1, 1902.0], [68.2, 1922.0], [68.3, 1924.0], [68.4, 1929.0], [68.5, 1939.0], [68.6, 1951.0], [68.7, 1964.0], [68.8, 1965.0], [68.9, 1966.0], [69.0, 1973.0], [69.1, 1975.0], [69.2, 1975.0], [69.3, 1981.0], [69.4, 1984.0], [69.5, 1985.0], [69.6, 2004.0], [69.7, 2009.0], [69.8, 2018.0], [69.9, 2020.0], [70.0, 2039.0], [70.1, 2046.0], [70.2, 2056.0], [70.3, 2069.0], [70.4, 2078.0], [70.5, 2095.0], [70.6, 2097.0], [70.7, 2114.0], [70.8, 2126.0], [70.9, 2129.0], [71.0, 2149.0], [71.1, 2151.0], [71.2, 2156.0], [71.3, 2165.0], [71.4, 2178.0], [71.5, 2213.0], [71.6, 2216.0], [71.7, 2252.0], [71.8, 2254.0], [71.9, 2296.0], [72.0, 2327.0], [72.1, 2344.0], [72.2, 2382.0], [72.3, 2395.0], [72.4, 2410.0], [72.5, 2414.0], [72.6, 2415.0], [72.7, 2437.0], [72.8, 2443.0], [72.9, 2458.0], [73.0, 2468.0], [73.1, 2505.0], [73.2, 2520.0], [73.3, 2527.0], [73.4, 2609.0], [73.5, 2642.0], [73.6, 2675.0], [73.7, 2690.0], [73.8, 2726.0], [73.9, 2728.0], [74.0, 2745.0], [74.1, 2756.0], [74.2, 2760.0], [74.3, 2791.0], [74.4, 2797.0], [74.5, 2817.0], [74.6, 2828.0], [74.7, 2840.0], [74.8, 2849.0], [74.9, 2850.0], [75.0, 2855.0], [75.1, 2868.0], [75.2, 2902.0], [75.3, 2907.0], [75.4, 2922.0], [75.5, 2930.0], [75.6, 2931.0], [75.7, 2936.0], [75.8, 2944.0], [75.9, 2962.0], [76.0, 3072.0], [76.1, 3093.0], [76.2, 3119.0], [76.3, 3126.0], [76.4, 3134.0], [76.5, 3134.0], [76.6, 3140.0], [76.7, 3175.0], [76.8, 3208.0], [76.9, 3210.0], [77.0, 3218.0], [77.1, 3250.0], [77.2, 3260.0], [77.3, 3289.0], [77.4, 3324.0], [77.5, 3348.0], [77.6, 3377.0], [77.7, 3425.0], [77.8, 3445.0], [77.9, 3450.0], [78.0, 3477.0], [78.1, 3507.0], [78.2, 3512.0], [78.3, 3518.0], [78.4, 3523.0], [78.5, 3538.0], [78.6, 3539.0], [78.7, 3551.0], [78.8, 3554.0], [78.9, 3554.0], [79.0, 3573.0], [79.1, 3579.0], [79.2, 3603.0], [79.3, 3608.0], [79.4, 3615.0], [79.5, 3656.0], [79.6, 3657.0], [79.7, 3682.0], [79.8, 3682.0], [79.9, 3693.0], [80.0, 3703.0], [80.1, 3712.0], [80.2, 3717.0], [80.3, 3720.0], [80.4, 3732.0], [80.5, 3732.0], [80.6, 3742.0], [80.7, 3750.0], [80.8, 3751.0], [80.9, 3764.0], [81.0, 3767.0], [81.1, 3772.0], [81.2, 3773.0], [81.3, 3795.0], [81.4, 3802.0], [81.5, 3804.0], [81.6, 3806.0], [81.7, 3807.0], [81.8, 3815.0], [81.9, 3815.0], [82.0, 3838.0], [82.1, 3873.0], [82.2, 3876.0], [82.3, 3878.0], [82.4, 3880.0], [82.5, 3892.0], [82.6, 3899.0], [82.7, 3916.0], [82.8, 3919.0], [82.9, 3933.0], [83.0, 3949.0], [83.1, 3951.0], [83.2, 3964.0], [83.3, 3975.0], [83.4, 3990.0], [83.5, 3995.0], [83.6, 3996.0], [83.7, 4004.0], [83.8, 4017.0], [83.9, 4022.0], [84.0, 4042.0], [84.1, 4048.0], [84.2, 4071.0], [84.3, 4072.0], [84.4, 4077.0], [84.5, 4086.0], [84.6, 4126.0], [84.7, 4151.0], [84.8, 4152.0], [84.9, 4154.0], [85.0, 4184.0], [85.1, 4227.0], [85.2, 4231.0], [85.3, 4234.0], [85.4, 4260.0], [85.5, 4260.0], [85.6, 4269.0], [85.7, 4278.0], [85.8, 4290.0], [85.9, 4308.0], [86.0, 4323.0], [86.1, 4352.0], [86.2, 4367.0], [86.3, 4392.0], [86.4, 4402.0], [86.5, 4462.0], [86.6, 4490.0], [86.7, 4497.0], [86.8, 4521.0], [86.9, 4555.0], [87.0, 4574.0], [87.1, 4577.0], [87.2, 4584.0], [87.3, 4611.0], [87.4, 4709.0], [87.5, 4748.0], [87.6, 4803.0], [87.7, 4847.0], [87.8, 4873.0], [87.9, 5025.0], [88.0, 5084.0], [88.1, 5121.0], [88.2, 5158.0], [88.3, 5250.0], [88.4, 5341.0], [88.5, 5372.0], [88.6, 5543.0], [88.7, 5886.0], [88.8, 6165.0], [88.9, 6316.0], [89.0, 6421.0], [89.1, 6426.0], [89.2, 6432.0], [89.3, 6532.0], [89.4, 6615.0], [89.5, 6657.0], [89.6, 6724.0], [89.7, 6731.0], [89.8, 6806.0], [89.9, 6823.0], [90.0, 6844.0], [90.1, 6862.0], [90.2, 6892.0], [90.3, 6897.0], [90.4, 6928.0], [90.5, 7019.0], [90.6, 7037.0], [90.7, 7043.0], [90.8, 7058.0], [90.9, 7062.0], [91.0, 7071.0], [91.1, 7083.0], [91.2, 7184.0], [91.3, 7247.0], [91.4, 7276.0], [91.5, 7305.0], [91.6, 7306.0], [91.7, 7317.0], [91.8, 7325.0], [91.9, 7367.0], [92.0, 7383.0], [92.1, 7404.0], [92.2, 7414.0], [92.3, 7422.0], [92.4, 7444.0], [92.5, 7448.0], [92.6, 7469.0], [92.7, 7478.0], [92.8, 7481.0], [92.9, 7493.0], [93.0, 7506.0], [93.1, 7516.0], [93.2, 7516.0], [93.3, 7531.0], [93.4, 7533.0], [93.5, 7538.0], [93.6, 7553.0], [93.7, 7554.0], [93.8, 7563.0], [93.9, 7565.0], [94.0, 7573.0], [94.1, 7580.0], [94.2, 7580.0], [94.3, 7589.0], [94.4, 7617.0], [94.5, 7625.0], [94.6, 7633.0], [94.7, 7644.0], [94.8, 7653.0], [94.9, 7654.0], [95.0, 7685.0], [95.1, 7701.0], [95.2, 7708.0], [95.3, 7709.0], [95.4, 7739.0], [95.5, 7756.0], [95.6, 7766.0], [95.7, 7778.0], [95.8, 7779.0], [95.9, 7788.0], [96.0, 7807.0], [96.1, 7807.0], [96.2, 7814.0], [96.3, 7822.0], [96.4, 7839.0], [96.5, 7866.0], [96.6, 7875.0], [96.7, 7909.0], [96.8, 7917.0], [96.9, 7920.0], [97.0, 7943.0], [97.1, 7947.0], [97.2, 7963.0], [97.3, 7986.0], [97.4, 7999.0], [97.5, 8004.0], [97.6, 8005.0], [97.7, 8010.0], [97.8, 8019.0], [97.9, 8025.0], [98.0, 8058.0], [98.1, 8064.0], [98.2, 8068.0], [98.3, 8075.0], [98.4, 8094.0], [98.5, 8099.0], [98.6, 8109.0], [98.7, 8121.0], [98.8, 8134.0], [98.9, 8134.0], [99.0, 8164.0], [99.1, 8188.0], [99.2, 8199.0], [99.3, 8213.0], [99.4, 8292.0], [99.5, 8340.0], [99.6, 8372.0], [99.7, 8394.0], [99.8, 8425.0], [99.9, 8455.0]], "isOverall": false, "label": "getListOfUser", "isController": false}, {"data": [[0.0, 386.0], [0.1, 387.0], [0.2, 390.0], [0.3, 390.0], [0.4, 391.0], [0.5, 394.0], [0.6, 396.0], [0.7, 397.0], [0.8, 398.0], [0.9, 400.0], [1.0, 400.0], [1.1, 401.0], [1.2, 403.0], [1.3, 403.0], [1.4, 406.0], [1.5, 406.0], [1.6, 408.0], [1.7, 408.0], [1.8, 409.0], [1.9, 410.0], [2.0, 411.0], [2.1, 414.0], [2.2, 417.0], [2.3, 424.0], [2.4, 425.0], [2.5, 426.0], [2.6, 427.0], [2.7, 432.0], [2.8, 446.0], [2.9, 458.0], [3.0, 476.0], [3.1, 478.0], [3.2, 657.0], [3.3, 683.0], [3.4, 726.0], [3.5, 950.0], [3.6, 960.0], [3.7, 985.0], [3.8, 1039.0], [3.9, 1084.0], [4.0, 1175.0], [4.1, 1185.0], [4.2, 1191.0], [4.3, 1192.0], [4.4, 1221.0], [4.5, 1221.0], [4.6, 1230.0], [4.7, 1241.0], [4.8, 1257.0], [4.9, 1303.0], [5.0, 1386.0], [5.1, 1428.0], [5.2, 1430.0], [5.3, 1500.0], [5.4, 1524.0], [5.5, 1561.0], [5.6, 1587.0], [5.7, 1594.0], [5.8, 1610.0], [5.9, 1620.0], [6.0, 1654.0], [6.1, 1656.0], [6.2, 1657.0], [6.3, 1662.0], [6.4, 1713.0], [6.5, 1726.0], [6.6, 1732.0], [6.7, 1775.0], [6.8, 1814.0], [6.9, 1816.0], [7.0, 1832.0], [7.1, 1834.0], [7.2, 1894.0], [7.3, 1906.0], [7.4, 1929.0], [7.5, 1956.0], [7.6, 1976.0], [7.7, 2053.0], [7.8, 2053.0], [7.9, 2141.0], [8.0, 2148.0], [8.1, 2150.0], [8.2, 2160.0], [8.3, 2209.0], [8.4, 2246.0], [8.5, 2247.0], [8.6, 2288.0], [8.7, 2312.0], [8.8, 2332.0], [8.9, 2421.0], [9.0, 2433.0], [9.1, 2445.0], [9.2, 2460.0], [9.3, 2487.0], [9.4, 2768.0], [9.5, 2794.0], [9.6, 2826.0], [9.7, 2826.0], [9.8, 2833.0], [9.9, 2835.0], [10.0, 2993.0], [10.1, 3047.0], [10.2, 3070.0], [10.3, 3191.0], [10.4, 3210.0], [10.5, 3233.0], [10.6, 3303.0], [10.7, 3310.0], [10.8, 3385.0], [10.9, 3404.0], [11.0, 3458.0], [11.1, 3459.0], [11.2, 3498.0], [11.3, 3508.0], [11.4, 3537.0], [11.5, 3584.0], [11.6, 3747.0], [11.7, 3791.0], [11.8, 3795.0], [11.9, 3851.0], [12.0, 3860.0], [12.1, 3922.0], [12.2, 3956.0], [12.3, 3969.0], [12.4, 4042.0], [12.5, 4053.0], [12.6, 4106.0], [12.7, 4115.0], [12.8, 4116.0], [12.9, 4124.0], [13.0, 4139.0], [13.1, 4147.0], [13.2, 4161.0], [13.3, 4168.0], [13.4, 4182.0], [13.5, 4202.0], [13.6, 4235.0], [13.7, 4249.0], [13.8, 4258.0], [13.9, 4260.0], [14.0, 4272.0], [14.1, 4299.0], [14.2, 4307.0], [14.3, 4314.0], [14.4, 4314.0], [14.5, 4321.0], [14.6, 4325.0], [14.7, 4329.0], [14.8, 4345.0], [14.9, 4348.0], [15.0, 4352.0], [15.1, 4352.0], [15.2, 4354.0], [15.3, 4355.0], [15.4, 4360.0], [15.5, 4364.0], [15.6, 4366.0], [15.7, 4372.0], [15.8, 4373.0], [15.9, 4376.0], [16.0, 4380.0], [16.1, 4382.0], [16.2, 4383.0], [16.3, 4384.0], [16.4, 4387.0], [16.5, 4388.0], [16.6, 4389.0], [16.7, 4391.0], [16.8, 4392.0], [16.9, 4394.0], [17.0, 4394.0], [17.1, 4396.0], [17.2, 4397.0], [17.3, 4400.0], [17.4, 4405.0], [17.5, 4409.0], [17.6, 4415.0], [17.7, 4426.0], [17.8, 4434.0], [17.9, 4453.0], [18.0, 4468.0], [18.1, 4495.0], [18.2, 4519.0], [18.3, 4539.0], [18.4, 4540.0], [18.5, 4552.0], [18.6, 4554.0], [18.7, 4558.0], [18.8, 4582.0], [18.9, 4597.0], [19.0, 4609.0], [19.1, 4613.0], [19.2, 4620.0], [19.3, 4628.0], [19.4, 4633.0], [19.5, 4648.0], [19.6, 4648.0], [19.7, 4665.0], [19.8, 4670.0], [19.9, 4721.0], [20.0, 4731.0], [20.1, 4769.0], [20.2, 4780.0], [20.3, 4792.0], [20.4, 4803.0], [20.5, 4808.0], [20.6, 4813.0], [20.7, 4826.0], [20.8, 4831.0], [20.9, 4843.0], [21.0, 4854.0], [21.1, 4856.0], [21.2, 4857.0], [21.3, 4862.0], [21.4, 4871.0], [21.5, 4882.0], [21.6, 4905.0], [21.7, 4906.0], [21.8, 4912.0], [21.9, 4914.0], [22.0, 4956.0], [22.1, 4962.0], [22.2, 4963.0], [22.3, 4975.0], [22.4, 5013.0], [22.5, 5028.0], [22.6, 5033.0], [22.7, 5054.0], [22.8, 5060.0], [22.9, 5061.0], [23.0, 5067.0], [23.1, 5099.0], [23.2, 5119.0], [23.3, 5123.0], [23.4, 5134.0], [23.5, 5149.0], [23.6, 5157.0], [23.7, 5183.0], [23.8, 5184.0], [23.9, 5194.0], [24.0, 5203.0], [24.1, 5207.0], [24.2, 5213.0], [24.3, 5229.0], [24.4, 5267.0], [24.5, 5270.0], [24.6, 5277.0], [24.7, 5287.0], [24.8, 5302.0], [24.9, 5327.0], [25.0, 5349.0], [25.1, 5365.0], [25.2, 5366.0], [25.3, 5390.0], [25.4, 5397.0], [25.5, 5398.0], [25.6, 5412.0], [25.7, 5414.0], [25.8, 5419.0], [25.9, 5445.0], [26.0, 5468.0], [26.1, 5473.0], [26.2, 5480.0], [26.3, 5483.0], [26.4, 5487.0], [26.5, 5493.0], [26.6, 5502.0], [26.7, 5525.0], [26.8, 5538.0], [26.9, 5562.0], [27.0, 5607.0], [27.1, 5612.0], [27.2, 5630.0], [27.3, 5637.0], [27.4, 5642.0], [27.5, 5670.0], [27.6, 5684.0], [27.7, 5706.0], [27.8, 5724.0], [27.9, 5742.0], [28.0, 5754.0], [28.1, 5765.0], [28.2, 5786.0], [28.3, 5800.0], [28.4, 5814.0], [28.5, 5814.0], [28.6, 5835.0], [28.7, 5841.0], [28.8, 5853.0], [28.9, 5869.0], [29.0, 5872.0], [29.1, 5884.0], [29.2, 5888.0], [29.3, 5890.0], [29.4, 5897.0], [29.5, 5901.0], [29.6, 5905.0], [29.7, 5908.0], [29.8, 5916.0], [29.9, 5929.0], [30.0, 5937.0], [30.1, 5945.0], [30.2, 5960.0], [30.3, 5971.0], [30.4, 5992.0], [30.5, 6027.0], [30.6, 6035.0], [30.7, 6038.0], [30.8, 6064.0], [30.9, 6068.0], [31.0, 6105.0], [31.1, 6107.0], [31.2, 6116.0], [31.3, 6117.0], [31.4, 6140.0], [31.5, 6154.0], [31.6, 6156.0], [31.7, 6205.0], [31.8, 6207.0], [31.9, 6222.0], [32.0, 6232.0], [32.1, 6247.0], [32.2, 6258.0], [32.3, 6268.0], [32.4, 6271.0], [32.5, 6271.0], [32.6, 6282.0], [32.7, 6292.0], [32.8, 6302.0], [32.9, 6322.0], [33.0, 6328.0], [33.1, 6342.0], [33.2, 6346.0], [33.3, 6350.0], [33.4, 6362.0], [33.5, 6363.0], [33.6, 6364.0], [33.7, 6365.0], [33.8, 6386.0], [33.9, 6393.0], [34.0, 6398.0], [34.1, 6408.0], [34.2, 6411.0], [34.3, 6418.0], [34.4, 6433.0], [34.5, 6448.0], [34.6, 6454.0], [34.7, 6464.0], [34.8, 6473.0], [34.9, 6496.0], [35.0, 6504.0], [35.1, 6510.0], [35.2, 6534.0], [35.3, 6536.0], [35.4, 6560.0], [35.5, 6571.0], [35.6, 6589.0], [35.7, 6601.0], [35.8, 6607.0], [35.9, 6668.0], [36.0, 6674.0], [36.1, 6676.0], [36.2, 6704.0], [36.3, 6705.0], [36.4, 6727.0], [36.5, 6742.0], [36.6, 6764.0], [36.7, 6769.0], [36.8, 6774.0], [36.9, 6780.0], [37.0, 6781.0], [37.1, 6783.0], [37.2, 6826.0], [37.3, 6851.0], [37.4, 6867.0], [37.5, 6868.0], [37.6, 6873.0], [37.7, 6882.0], [37.8, 6917.0], [37.9, 6919.0], [38.0, 6929.0], [38.1, 6953.0], [38.2, 6965.0], [38.3, 6978.0], [38.4, 6979.0], [38.5, 6980.0], [38.6, 6980.0], [38.7, 7005.0], [38.8, 7039.0], [38.9, 7050.0], [39.0, 7055.0], [39.1, 7061.0], [39.2, 7065.0], [39.3, 7073.0], [39.4, 7075.0], [39.5, 7084.0], [39.6, 7088.0], [39.7, 7095.0], [39.8, 7095.0], [39.9, 7131.0], [40.0, 7141.0], [40.1, 7141.0], [40.2, 7163.0], [40.3, 7175.0], [40.4, 7182.0], [40.5, 7187.0], [40.6, 7204.0], [40.7, 7218.0], [40.8, 7224.0], [40.9, 7229.0], [41.0, 7229.0], [41.1, 7247.0], [41.2, 7255.0], [41.3, 7260.0], [41.4, 7284.0], [41.5, 7288.0], [41.6, 7312.0], [41.7, 7317.0], [41.8, 7343.0], [41.9, 7347.0], [42.0, 7366.0], [42.1, 7378.0], [42.2, 7381.0], [42.3, 7386.0], [42.4, 7390.0], [42.5, 7400.0], [42.6, 7425.0], [42.7, 7428.0], [42.8, 7467.0], [42.9, 7478.0], [43.0, 7479.0], [43.1, 7486.0], [43.2, 7495.0], [43.3, 7500.0], [43.4, 7507.0], [43.5, 7512.0], [43.6, 7529.0], [43.7, 7536.0], [43.8, 7538.0], [43.9, 7550.0], [44.0, 7552.0], [44.1, 7561.0], [44.2, 7581.0], [44.3, 7581.0], [44.4, 7600.0], [44.5, 7602.0], [44.6, 7647.0], [44.7, 7697.0], [44.8, 7710.0], [44.9, 7720.0], [45.0, 7728.0], [45.1, 7790.0], [45.2, 7807.0], [45.3, 7815.0], [45.4, 7826.0], [45.5, 7826.0], [45.6, 7836.0], [45.7, 7851.0], [45.8, 7887.0], [45.9, 7936.0], [46.0, 7976.0], [46.1, 7982.0], [46.2, 7986.0], [46.3, 8024.0], [46.4, 8066.0], [46.5, 8095.0], [46.6, 8097.0], [46.7, 8208.0], [46.8, 8236.0], [46.9, 8239.0], [47.0, 8297.0], [47.1, 8300.0], [47.2, 8307.0], [47.3, 8342.0], [47.4, 8422.0], [47.5, 8526.0], [47.6, 8568.0], [47.7, 8599.0], [47.8, 8603.0], [47.9, 8610.0], [48.0, 8618.0], [48.1, 8641.0], [48.2, 8649.0], [48.3, 8671.0], [48.4, 8692.0], [48.5, 8694.0], [48.6, 8701.0], [48.7, 8746.0], [48.8, 8764.0], [48.9, 8785.0], [49.0, 8786.0], [49.1, 8805.0], [49.2, 8806.0], [49.3, 8866.0], [49.4, 8878.0], [49.5, 8883.0], [49.6, 8964.0], [49.7, 8985.0], [49.8, 9040.0], [49.9, 9055.0], [50.0, 9107.0], [50.1, 9118.0], [50.2, 9121.0], [50.3, 9228.0], [50.4, 9268.0], [50.5, 9289.0], [50.6, 9361.0], [50.7, 9410.0], [50.8, 9548.0], [50.9, 9559.0], [51.0, 9577.0], [51.1, 9578.0], [51.2, 9593.0], [51.3, 9638.0], [51.4, 9692.0], [51.5, 9727.0], [51.6, 9728.0], [51.7, 9729.0], [51.8, 9731.0], [51.9, 9733.0], [52.0, 9734.0], [52.1, 9736.0], [52.2, 9739.0], [52.3, 9741.0], [52.4, 9743.0], [52.5, 9774.0], [52.6, 9867.0], [52.7, 10013.0], [52.8, 10050.0], [52.9, 10064.0], [53.0, 10071.0], [53.1, 10085.0], [53.2, 10090.0], [53.3, 10159.0], [53.4, 10233.0], [53.5, 10247.0], [53.6, 10263.0], [53.7, 10274.0], [53.8, 10300.0], [53.9, 10304.0], [54.0, 10307.0], [54.1, 10325.0], [54.2, 10327.0], [54.3, 10341.0], [54.4, 10342.0], [54.5, 10356.0], [54.6, 10376.0], [54.7, 10383.0], [54.8, 10405.0], [54.9, 10409.0], [55.0, 10423.0], [55.1, 10424.0], [55.2, 10439.0], [55.3, 10455.0], [55.4, 10458.0], [55.5, 10472.0], [55.6, 10475.0], [55.7, 10480.0], [55.8, 10480.0], [55.9, 10496.0], [56.0, 10507.0], [56.1, 10508.0], [56.2, 10510.0], [56.3, 10515.0], [56.4, 10519.0], [56.5, 10521.0], [56.6, 10523.0], [56.7, 10529.0], [56.8, 10529.0], [56.9, 10549.0], [57.0, 10568.0], [57.1, 10580.0], [57.2, 10585.0], [57.3, 10601.0], [57.4, 10683.0], [57.5, 10684.0], [57.6, 10780.0], [57.7, 10792.0], [57.8, 10812.0], [57.9, 10833.0], [58.0, 10843.0], [58.1, 10868.0], [58.2, 10873.0], [58.3, 10895.0], [58.4, 10909.0], [58.5, 10915.0], [58.6, 10916.0], [58.7, 10926.0], [58.8, 10930.0], [58.9, 10931.0], [59.0, 10934.0], [59.1, 10934.0], [59.2, 10937.0], [59.3, 10938.0], [59.4, 10940.0], [59.5, 10940.0], [59.6, 10941.0], [59.7, 10943.0], [59.8, 10945.0], [59.9, 10951.0], [60.0, 10953.0], [60.1, 10956.0], [60.2, 10960.0], [60.3, 10960.0], [60.4, 10964.0], [60.5, 10969.0], [60.6, 10971.0], [60.7, 10972.0], [60.8, 10973.0], [60.9, 10974.0], [61.0, 10975.0], [61.1, 10978.0], [61.2, 10979.0], [61.3, 10980.0], [61.4, 10983.0], [61.5, 10990.0], [61.6, 10998.0], [61.7, 11005.0], [61.8, 11008.0], [61.9, 11009.0], [62.0, 11048.0], [62.1, 11076.0], [62.2, 11088.0], [62.3, 11175.0], [62.4, 11193.0], [62.5, 11205.0], [62.6, 11218.0], [62.7, 11229.0], [62.8, 11237.0], [62.9, 11251.0], [63.0, 11254.0], [63.1, 11265.0], [63.2, 11281.0], [63.3, 11286.0], [63.4, 11290.0], [63.5, 11299.0], [63.6, 11302.0], [63.7, 11307.0], [63.8, 11307.0], [63.9, 11315.0], [64.0, 11321.0], [64.1, 11326.0], [64.2, 11339.0], [64.3, 11342.0], [64.4, 11350.0], [64.5, 11351.0], [64.6, 11356.0], [64.7, 11385.0], [64.8, 11386.0], [64.9, 11399.0], [65.0, 11420.0], [65.1, 11427.0], [65.2, 11427.0], [65.3, 11432.0], [65.4, 11437.0], [65.5, 11438.0], [65.6, 11458.0], [65.7, 11510.0], [65.8, 11544.0], [65.9, 11548.0], [66.0, 11564.0], [66.1, 11570.0], [66.2, 11575.0], [66.3, 11607.0], [66.4, 11617.0], [66.5, 11632.0], [66.6, 11652.0], [66.7, 11678.0], [66.8, 11707.0], [66.9, 11713.0], [67.0, 11720.0], [67.1, 11735.0], [67.2, 11789.0], [67.3, 11798.0], [67.4, 11820.0], [67.5, 11831.0], [67.6, 11835.0], [67.7, 11858.0], [67.8, 11866.0], [67.9, 11882.0], [68.0, 11888.0], [68.1, 11890.0], [68.2, 11915.0], [68.3, 11917.0], [68.4, 11930.0], [68.5, 11932.0], [68.6, 11943.0], [68.7, 11960.0], [68.8, 11971.0], [68.9, 11980.0], [69.0, 11980.0], [69.1, 11993.0], [69.2, 11999.0], [69.3, 12014.0], [69.4, 12017.0], [69.5, 12018.0], [69.6, 12028.0], [69.7, 12029.0], [69.8, 12057.0], [69.9, 12064.0], [70.0, 12087.0], [70.1, 12106.0], [70.2, 12119.0], [70.3, 12124.0], [70.4, 12125.0], [70.5, 12130.0], [70.6, 12130.0], [70.7, 12135.0], [70.8, 12150.0], [70.9, 12159.0], [71.0, 12204.0], [71.1, 12212.0], [71.2, 12236.0], [71.3, 12236.0], [71.4, 12250.0], [71.5, 12270.0], [71.6, 12285.0], [71.7, 12374.0], [71.8, 12375.0], [71.9, 12392.0], [72.0, 12396.0], [72.1, 12397.0], [72.2, 12436.0], [72.3, 12448.0], [72.4, 12483.0], [72.5, 12484.0], [72.6, 12509.0], [72.7, 12579.0], [72.8, 12580.0], [72.9, 12587.0], [73.0, 12595.0], [73.1, 12600.0], [73.2, 12606.0], [73.3, 12623.0], [73.4, 12627.0], [73.5, 12629.0], [73.6, 12655.0], [73.7, 12658.0], [73.8, 12706.0], [73.9, 12706.0], [74.0, 12715.0], [74.1, 12723.0], [74.2, 12725.0], [74.3, 12726.0], [74.4, 12728.0], [74.5, 12745.0], [74.6, 12754.0], [74.7, 12772.0], [74.8, 12815.0], [74.9, 12820.0], [75.0, 12838.0], [75.1, 12843.0], [75.2, 12845.0], [75.3, 12848.0], [75.4, 12873.0], [75.5, 12892.0], [75.6, 12914.0], [75.7, 12917.0], [75.8, 12918.0], [75.9, 12945.0], [76.0, 12974.0], [76.1, 12974.0], [76.2, 12992.0], [76.3, 13029.0], [76.4, 13033.0], [76.5, 13051.0], [76.6, 13086.0], [76.7, 13098.0], [76.8, 13098.0], [76.9, 13119.0], [77.0, 13124.0], [77.1, 13142.0], [77.2, 13143.0], [77.3, 13174.0], [77.4, 13197.0], [77.5, 13198.0], [77.6, 13203.0], [77.7, 13218.0], [77.8, 13223.0], [77.9, 13223.0], [78.0, 13248.0], [78.1, 13261.0], [78.2, 13265.0], [78.3, 13273.0], [78.4, 13275.0], [78.5, 13313.0], [78.6, 13314.0], [78.7, 13378.0], [78.8, 13380.0], [78.9, 13385.0], [79.0, 13395.0], [79.1, 13398.0], [79.2, 13409.0], [79.3, 13415.0], [79.4, 13426.0], [79.5, 13453.0], [79.6, 13455.0], [79.7, 13461.0], [79.8, 13490.0], [79.9, 13499.0], [80.0, 13548.0], [80.1, 13559.0], [80.2, 13611.0], [80.3, 13614.0], [80.4, 13636.0], [80.5, 13660.0], [80.6, 13674.0], [80.7, 13687.0], [80.8, 13688.0], [80.9, 13707.0], [81.0, 13722.0], [81.1, 13730.0], [81.2, 13740.0], [81.3, 13784.0], [81.4, 13795.0], [81.5, 13796.0], [81.6, 13854.0], [81.7, 13863.0], [81.8, 13866.0], [81.9, 13883.0], [82.0, 13929.0], [82.1, 13934.0], [82.2, 13947.0], [82.3, 13973.0], [82.4, 13992.0], [82.5, 14017.0], [82.6, 14026.0], [82.7, 14045.0], [82.8, 14085.0], [82.9, 14087.0], [83.0, 14120.0], [83.1, 14153.0], [83.2, 14169.0], [83.3, 14214.0], [83.4, 14223.0], [83.5, 14227.0], [83.6, 14228.0], [83.7, 14233.0], [83.8, 14233.0], [83.9, 14269.0], [84.0, 14280.0], [84.1, 14285.0], [84.2, 14307.0], [84.3, 14311.0], [84.4, 14313.0], [84.5, 14326.0], [84.6, 14353.0], [84.7, 14381.0], [84.8, 14385.0], [84.9, 14399.0], [85.0, 14437.0], [85.1, 14458.0], [85.2, 14459.0], [85.3, 14479.0], [85.4, 14490.0], [85.5, 14508.0], [85.6, 14518.0], [85.7, 14543.0], [85.8, 14562.0], [85.9, 14568.0], [86.0, 14589.0], [86.1, 14609.0], [86.2, 14612.0], [86.3, 14620.0], [86.4, 14621.0], [86.5, 14649.0], [86.6, 14674.0], [86.7, 14697.0], [86.8, 14705.0], [86.9, 14721.0], [87.0, 14728.0], [87.1, 14734.0], [87.2, 14771.0], [87.3, 14772.0], [87.4, 14794.0], [87.5, 14798.0], [87.6, 14799.0], [87.7, 14811.0], [87.8, 14816.0], [87.9, 14830.0], [88.0, 14841.0], [88.1, 14841.0], [88.2, 14852.0], [88.3, 14855.0], [88.4, 14865.0], [88.5, 14874.0], [88.6, 14896.0], [88.7, 14901.0], [88.8, 14903.0], [88.9, 14915.0], [89.0, 14918.0], [89.1, 14976.0], [89.2, 14977.0], [89.3, 14988.0], [89.4, 14996.0], [89.5, 15023.0], [89.6, 15026.0], [89.7, 15026.0], [89.8, 15033.0], [89.9, 15045.0], [90.0, 15049.0], [90.1, 15053.0], [90.2, 15058.0], [90.3, 15071.0], [90.4, 15076.0], [90.5, 15088.0], [90.6, 15090.0], [90.7, 15114.0], [90.8, 15133.0], [90.9, 15133.0], [91.0, 15177.0], [91.1, 15188.0], [91.2, 15212.0], [91.3, 15221.0], [91.4, 15229.0], [91.5, 15246.0], [91.6, 15284.0], [91.7, 15287.0], [91.8, 15290.0], [91.9, 15293.0], [92.0, 15315.0], [92.1, 15322.0], [92.2, 15329.0], [92.3, 15337.0], [92.4, 15352.0], [92.5, 15355.0], [92.6, 15367.0], [92.7, 15385.0], [92.8, 15387.0], [92.9, 15399.0], [93.0, 15408.0], [93.1, 15426.0], [93.2, 15427.0], [93.3, 15488.0], [93.4, 15559.0], [93.5, 15584.0], [93.6, 15593.0], [93.7, 15611.0], [93.8, 15626.0], [93.9, 15636.0], [94.0, 15655.0], [94.1, 15682.0], [94.2, 15688.0], [94.3, 15707.0], [94.4, 15730.0], [94.5, 15775.0], [94.6, 15778.0], [94.7, 15799.0], [94.8, 15811.0], [94.9, 15823.0], [95.0, 15831.0], [95.1, 15833.0], [95.2, 15843.0], [95.3, 15844.0], [95.4, 15846.0], [95.5, 15862.0], [95.6, 15874.0], [95.7, 15929.0], [95.8, 15934.0], [95.9, 15963.0], [96.0, 15972.0], [96.1, 15972.0], [96.2, 15978.0], [96.3, 15985.0], [96.4, 16008.0], [96.5, 16009.0], [96.6, 16026.0], [96.7, 16054.0], [96.8, 16057.0], [96.9, 16073.0], [97.0, 16074.0], [97.1, 16074.0], [97.2, 16086.0], [97.3, 16088.0], [97.4, 16091.0], [97.5, 16092.0], [97.6, 16105.0], [97.7, 16107.0], [97.8, 16124.0], [97.9, 16125.0], [98.0, 16133.0], [98.1, 16187.0], [98.2, 16193.0], [98.3, 16287.0], [98.4, 16291.0], [98.5, 16401.0], [98.6, 16417.0], [98.7, 16595.0], [98.8, 16748.0], [98.9, 18129.0], [99.0, 18492.0], [99.1, 18529.0], [99.2, 18839.0], [99.3, 18942.0], [99.4, 19141.0], [99.5, 19260.0], [99.6, 19687.0], [99.7, 20049.0], [99.8, 22181.0], [99.9, 22506.0]], "isOverall": false, "label": "register", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 602.0, "series": [{"data": [[0.0, 516.0], [600.0, 11.0], [700.0, 16.0], [800.0, 4.0], [900.0, 66.0], [1000.0, 73.0], [1100.0, 19.0], [1200.0, 4.0], [1300.0, 1.0], [1500.0, 2.0], [1600.0, 3.0], [1800.0, 18.0], [1900.0, 39.0], [2000.0, 35.0], [2100.0, 4.0], [2300.0, 6.0], [2200.0, 16.0], [2400.0, 2.0], [2500.0, 4.0], [2800.0, 1.0], [2700.0, 1.0], [3100.0, 9.0], [3300.0, 11.0], [3200.0, 11.0], [3400.0, 9.0], [3500.0, 16.0], [3600.0, 45.0], [3700.0, 45.0], [3800.0, 30.0], [3900.0, 32.0], [4000.0, 22.0], [4100.0, 11.0], [4300.0, 8.0], [4200.0, 3.0], [4400.0, 1.0], [4500.0, 2.0], [4600.0, 1.0], [5300.0, 1.0], [6500.0, 2.0], [6700.0, 2.0], [6800.0, 1.0], [7100.0, 6.0], [7000.0, 2.0], [7200.0, 10.0], [7300.0, 20.0], [7400.0, 35.0], [7500.0, 11.0], [7600.0, 43.0], [7700.0, 28.0], [7800.0, 9.0], [7900.0, 10.0], [8000.0, 2.0], [8100.0, 1.0], [100.0, 17.0], [200.0, 33.0], [300.0, 123.0], [400.0, 4.0], [500.0, 118.0]], "isOverall": false, "label": "getUser", "isController": false}, {"data": [[0.0, 602.0], [600.0, 31.0], [700.0, 19.0], [800.0, 14.0], [900.0, 24.0], [1000.0, 24.0], [1100.0, 17.0], [1200.0, 25.0], [1300.0, 12.0], [1400.0, 2.0], [1500.0, 9.0], [1600.0, 9.0], [1700.0, 17.0], [1800.0, 20.0], [1900.0, 25.0], [2000.0, 16.0], [2100.0, 14.0], [2300.0, 6.0], [2200.0, 7.0], [2400.0, 12.0], [2500.0, 5.0], [2600.0, 5.0], [2700.0, 11.0], [2800.0, 12.0], [2900.0, 12.0], [3000.0, 3.0], [3100.0, 10.0], [3200.0, 10.0], [3300.0, 4.0], [3400.0, 6.0], [3500.0, 18.0], [3600.0, 12.0], [3700.0, 23.0], [3800.0, 19.0], [3900.0, 16.0], [4000.0, 15.0], [4100.0, 7.0], [4300.0, 8.0], [4200.0, 13.0], [4400.0, 6.0], [4500.0, 8.0], [4600.0, 2.0], [4700.0, 3.0], [4800.0, 4.0], [5000.0, 3.0], [4900.0, 1.0], [5100.0, 3.0], [5200.0, 1.0], [5300.0, 3.0], [5500.0, 3.0], [5800.0, 1.0], [6100.0, 1.0], [6200.0, 1.0], [6300.0, 1.0], [6400.0, 5.0], [6500.0, 1.0], [6600.0, 4.0], [6700.0, 3.0], [6800.0, 9.0], [6900.0, 2.0], [7000.0, 10.0], [7100.0, 2.0], [7200.0, 4.0], [7400.0, 14.0], [7300.0, 9.0], [7500.0, 22.0], [7600.0, 11.0], [7700.0, 14.0], [7900.0, 13.0], [7800.0, 11.0], [8000.0, 17.0], [8100.0, 11.0], [8200.0, 3.0], [8300.0, 5.0], [8400.0, 4.0], [100.0, 117.0], [200.0, 45.0], [300.0, 25.0], [400.0, 27.0], [500.0, 32.0]], "isOverall": false, "label": "getListOfUser", "isController": false}, {"data": [[300.0, 13.0], [400.0, 36.0], [500.0, 1.0], [600.0, 3.0], [700.0, 1.0], [900.0, 5.0], [1000.0, 3.0], [1100.0, 6.0], [1200.0, 9.0], [1300.0, 2.0], [1400.0, 4.0], [1500.0, 8.0], [1600.0, 9.0], [1700.0, 6.0], [1800.0, 8.0], [1900.0, 7.0], [2000.0, 3.0], [2100.0, 6.0], [2200.0, 7.0], [2300.0, 3.0], [2400.0, 7.0], [2600.0, 1.0], [2800.0, 6.0], [2700.0, 2.0], [2900.0, 2.0], [3000.0, 3.0], [3100.0, 2.0], [3300.0, 5.0], [3200.0, 3.0], [3400.0, 6.0], [3500.0, 5.0], [3700.0, 4.0], [3800.0, 4.0], [3900.0, 4.0], [4000.0, 4.0], [4300.0, 49.0], [4200.0, 11.0], [4100.0, 14.0], [4600.0, 14.0], [4500.0, 13.0], [4400.0, 14.0], [4800.0, 20.0], [4700.0, 7.0], [4900.0, 12.0], [5000.0, 12.0], [5100.0, 13.0], [5200.0, 13.0], [5300.0, 12.0], [5500.0, 6.0], [5400.0, 16.0], [5600.0, 12.0], [5800.0, 19.0], [5700.0, 9.0], [5900.0, 16.0], [6100.0, 11.0], [6000.0, 8.0], [6200.0, 17.0], [6300.0, 20.0], [6600.0, 8.0], [6500.0, 11.0], [6400.0, 15.0], [6800.0, 9.0], [6700.0, 15.0], [6900.0, 15.0], [7000.0, 18.0], [7100.0, 12.0], [7400.0, 12.0], [7200.0, 15.0], [7300.0, 15.0], [7500.0, 18.0], [7600.0, 6.0], [7700.0, 6.0], [7800.0, 11.0], [7900.0, 6.0], [8000.0, 6.0], [8100.0, 1.0], [8200.0, 6.0], [8400.0, 2.0], [8700.0, 8.0], [8300.0, 5.0], [8500.0, 4.0], [8600.0, 13.0], [9100.0, 5.0], [8900.0, 4.0], [9200.0, 4.0], [8800.0, 7.0], [9000.0, 3.0], [9600.0, 3.0], [9700.0, 18.0], [9500.0, 8.0], [9300.0, 2.0], [9400.0, 1.0], [10200.0, 6.0], [10000.0, 9.0], [9800.0, 1.0], [10100.0, 3.0], [10500.0, 21.0], [10400.0, 19.0], [10300.0, 15.0], [10700.0, 4.0], [10600.0, 4.0], [10800.0, 9.0], [11000.0, 9.0], [10900.0, 52.0], [11100.0, 4.0], [11200.0, 17.0], [11300.0, 22.0], [11400.0, 11.0], [11500.0, 10.0], [11700.0, 9.0], [11600.0, 7.0], [11800.0, 13.0], [11900.0, 17.0], [12000.0, 13.0], [12100.0, 15.0], [12200.0, 10.0], [12600.0, 11.0], [12400.0, 6.0], [12700.0, 15.0], [12500.0, 9.0], [12300.0, 8.0], [12800.0, 13.0], [13100.0, 11.0], [13200.0, 15.0], [12900.0, 11.0], [13300.0, 10.0], [13000.0, 9.0], [13800.0, 6.0], [13500.0, 4.0], [13400.0, 13.0], [13600.0, 11.0], [13700.0, 10.0], [14200.0, 15.0], [14300.0, 12.0], [14000.0, 7.0], [14100.0, 5.0], [13900.0, 9.0], [14700.0, 14.0], [14800.0, 17.0], [14500.0, 10.0], [14600.0, 10.0], [14400.0, 8.0], [15300.0, 16.0], [15000.0, 19.0], [15100.0, 8.0], [14900.0, 12.0], [15200.0, 12.0], [15600.0, 9.0], [15700.0, 8.0], [15400.0, 6.0], [15800.0, 15.0], [15500.0, 5.0], [16000.0, 19.0], [16100.0, 10.0], [15900.0, 11.0], [16200.0, 4.0], [16500.0, 2.0], [16400.0, 2.0], [16700.0, 1.0], [16600.0, 1.0], [18400.0, 1.0], [18200.0, 1.0], [18100.0, 1.0], [18900.0, 1.0], [18800.0, 2.0], [19100.0, 3.0], [18500.0, 1.0], [19200.0, 1.0], [20000.0, 1.0], [19900.0, 1.0], [19600.0, 1.0], [22100.0, 1.0], [22500.0, 1.0], [22300.0, 1.0], [22800.0, 1.0]], "isOverall": false, "label": "register", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 22800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 81.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2538.0, "series": [{"data": [[0.0, 1559.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 547.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2538.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 81.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1162.9288888888877, "minX": 1.6674795E12, "maxY": 1162.9288888888877, "series": [{"data": [[1.6674795E12, 1162.9288888888877]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6674795E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 15.0, "minX": 1.0, "maxY": 22847.0, "series": [{"data": [[9.0, 8019.0], [16.0, 7980.0], [17.0, 7930.0], [18.0, 7945.5], [31.0, 7943.75], [35.0, 7886.666666666667], [59.0, 7761.5], [61.0, 7914.0], [60.0, 7884.0], [75.0, 7889.0], [73.0, 7876.0], [102.0, 7727.0], [104.0, 7696.0], [109.0, 7723.0], [118.0, 7678.5], [117.0, 7691.5], [120.0, 7651.0], [131.0, 7679.666666666667], [138.0, 7717.333333333333], [151.0, 7640.0], [150.0, 7685.333333333334], [149.0, 7811.0], [157.0, 7720.0], [156.0, 7696.5], [154.0, 7740.5], [167.0, 7742.0], [166.0, 7659.0], [165.0, 7686.5], [164.0, 7662.0], [189.0, 7636.0], [187.0, 7692.0], [207.0, 7676.75], [204.0, 7966.0], [208.0, 7571.5], [222.0, 7567.0], [220.0, 6707.0], [231.0, 7683.0], [229.0, 7731.0], [227.0, 7691.0], [224.0, 7935.0], [234.0, 7680.0], [233.0, 7594.5], [232.0, 7529.0], [241.0, 7596.666666666667], [240.0, 7489.0], [254.0, 7511.0], [249.0, 7537.166666666667], [252.0, 7469.5], [287.0, 7609.0], [286.0, 7432.799999999999], [279.0, 7409.0], [278.0, 7288.333333333333], [277.0, 7427.0], [276.0, 7540.0], [273.0, 7444.0], [272.0, 7420.333333333333], [303.0, 36.0], [301.0, 7961.0], [291.0, 7297.5], [319.0, 7386.0], [318.0, 7354.0], [317.0, 7388.25], [316.0, 7470.444444444445], [315.0, 7736.0], [311.0, 7410.0], [310.0, 7421.25], [308.0, 7786.0], [334.0, 7402.833333333333], [350.0, 7033.0], [349.0, 6559.0], [347.0, 7227.0], [346.0, 7190.0], [345.0, 7401.666666666667], [339.0, 7195.0], [366.0, 6894.0], [364.0, 7431.0], [363.0, 38.5], [361.0, 3870.75], [353.0, 7204.0], [380.0, 5373.0], [378.0, 6744.0], [377.0, 7103.0], [375.0, 3606.0], [373.0, 28.0], [370.0, 1451.9999999999998], [369.0, 3614.5], [393.0, 3843.0], [408.0, 3762.0], [406.0, 4649.0], [403.0, 4096.0], [429.0, 4301.0], [428.0, 3580.0], [417.0, 4369.0], [446.0, 4142.0], [445.0, 4547.0], [443.0, 4276.0], [439.0, 3993.0], [435.0, 4173.75], [453.0, 4276.0], [477.0, 4147.0], [472.0, 4251.0], [495.0, 4073.0], [485.0, 3191.0], [482.0, 4183.0], [507.0, 4157.0], [501.0, 4019.0], [500.0, 4178.0], [499.0, 4019.0], [498.0, 4075.0], [536.0, 4403.0], [526.0, 4044.0], [525.0, 3984.5], [518.0, 3921.0], [517.0, 3962.0], [514.0, 4152.0], [575.0, 3894.5], [568.0, 3901.0], [567.0, 3937.0], [566.0, 4041.0], [563.0, 3924.0], [562.0, 3941.5], [555.0, 3927.0], [553.0, 3898.6], [550.0, 3913.3333333333335], [546.0, 4342.0], [545.0, 3940.0], [607.0, 3727.0], [603.0, 3829.0], [601.0, 3924.5], [596.0, 3101.0], [593.0, 3835.3333333333335], [638.0, 3872.0], [637.0, 64.0], [636.0, 3666.0], [632.0, 3783.777777777778], [631.0, 3800.0], [627.0, 4193.0], [626.0, 3910.4285714285716], [622.0, 3769.0], [669.0, 3829.0], [655.0, 3662.0], [654.0, 3716.5], [653.0, 3716.0], [651.0, 3755.4444444444443], [641.0, 3677.0], [640.0, 3711.0], [703.0, 3692.2], [702.0, 2771.0], [701.0, 3899.0], [700.0, 3650.0], [699.0, 3752.0], [698.0, 4050.0], [696.0, 4126.0], [692.0, 4131.0], [710.0, 3936.0], [729.0, 3981.0], [723.0, 2894.0], [722.0, 4147.0], [717.0, 3618.0], [716.0, 3618.0], [713.0, 4066.5], [709.0, 3657.0], [706.0, 3706.666666666667], [754.0, 3539.0], [763.0, 3662.0], [759.0, 4078.0], [757.0, 3794.0], [755.0, 3882.3333333333335], [752.0, 3676.25], [751.0, 3587.0], [744.0, 4073.0], [743.0, 37.0], [741.0, 4077.0], [785.0, 986.1250000000001], [796.0, 26.0], [791.0, 1712.0], [790.0, 534.4285714285713], [787.0, 3453.0], [784.0, 34.0], [783.0, 1784.0], [769.0, 4081.0], [775.0, 4082.0], [771.0, 4027.0], [814.0, 3600.6], [831.0, 3360.0], [824.0, 3653.5], [804.0, 2375.3333333333335], [803.0, 25.0], [822.0, 3496.0], [818.0, 3515.0], [813.0, 3699.0], [812.0, 3689.5], [811.0, 3630.5], [808.0, 3546.3333333333335], [852.0, 923.5], [861.0, 3420.0], [862.0, 3294.0], [851.0, 3458.0], [849.0, 24.5], [859.0, 3293.0], [857.0, 3317.0], [856.0, 3277.0], [838.0, 3327.0], [836.0, 3378.0], [846.0, 3595.5], [842.0, 3663.0], [841.0, 21.0], [840.0, 3632.0], [855.0, 3281.0], [854.0, 29.0], [853.0, 23.0], [886.0, 2341.0], [884.0, 3302.0], [881.0, 1682.0], [870.0, 3184.0], [869.0, 2949.5], [867.0, 3250.0], [865.0, 3302.5], [923.0, 1920.0], [919.0, 1995.0], [916.0, 34.0], [907.0, 2091.6666666666665], [902.0, 2200.0], [899.0, 2557.5], [953.0, 1673.0], [951.0, 2025.0], [948.0, 1868.0], [941.0, 2236.0], [940.0, 1846.0], [936.0, 1905.0], [983.0, 2417.0], [982.0, 2299.0], [980.0, 1957.0], [977.0, 1971.5], [976.0, 2407.0], [975.0, 1992.0], [1014.0, 1852.0], [1013.0, 1888.0], [994.0, 1921.0], [1039.0, 1966.0], [1083.0, 2317.6666666666665], [1084.0, 2265.0], [1072.0, 2208.0], [1061.0, 2086.0], [1059.0, 2272.0], [1052.0, 2346.0], [1046.0, 2134.0], [1040.0, 2427.0], [1031.0, 2247.5], [1029.0, 1837.0], [1027.0, 2002.0], [1139.0, 2051.0], [1144.0, 2075.0], [1137.0, 2053.0], [1100.0, 2133.25], [1099.0, 2016.0], [1098.0, 2140.5], [1134.0, 1976.5], [1132.0, 2268.0], [1126.0, 2233.0], [1121.0, 2311.5], [1117.0, 2275.0], [1113.0, 2160.0], [1111.0, 2238.0], [1104.0, 2240.0], [1206.0, 1465.0], [1210.0, 1037.0], [1212.0, 1886.0], [1209.0, 1765.5], [1198.0, 1981.0], [1197.0, 2039.75], [1183.0, 2004.3333333333333], [1164.0, 2048.6666666666665], [1166.0, 2015.6666666666667], [1165.0, 2059.0], [1180.0, 2279.0], [1179.0, 1942.0], [1174.0, 2572.0], [1170.0, 2005.857142857143], [1251.0, 1101.5], [1259.0, 1556.5], [1272.0, 1742.5], [1273.0, 976.0], [1249.0, 1044.0], [1256.0, 1011.0], [1258.0, 1882.0], [1257.0, 1568.6666666666667], [1271.0, 1553.3333333333333], [1267.0, 1284.0], [1265.0, 951.0], [1231.0, 1468.5], [1226.0, 1640.0], [1224.0, 2019.0], [1221.0, 999.0], [1218.0, 1003.0], [1247.0, 1044.0], [1245.0, 1848.0], [1243.0, 933.0], [1242.0, 1714.0], [1240.0, 1027.0], [1235.0, 1038.0], [1233.0, 1985.0], [1263.0, 994.0], [1261.0, 994.75], [1260.0, 1103.5], [1328.0, 561.0], [1336.0, 545.5], [1343.0, 1039.5], [1320.0, 879.0], [1312.0, 1017.5], [1342.0, 601.5], [1341.0, 800.0], [1331.0, 613.5], [1330.0, 566.0], [1329.0, 558.0], [1311.0, 990.5], [1280.0, 1307.3333333333333], [1283.0, 1078.0], [1282.0, 1759.2], [1288.0, 75.0], [1287.0, 73.0], [1291.0, 759.2857142857143], [1290.0, 1974.6666666666667], [1307.0, 79.0], [1306.0, 1429.0], [1305.0, 974.0], [1304.0, 1906.0], [1303.0, 989.5], [1302.0, 80.0], [1301.0, 776.5], [1300.0, 1032.0], [1326.0, 1043.0], [1324.0, 558.0], [1395.0, 892.3333333333334], [1401.0, 470.8571428571429], [1407.0, 1077.0], [1382.0, 875.5], [1388.0, 677.0], [1383.0, 1040.0], [1406.0, 1127.0], [1403.0, 373.0], [1400.0, 1262.0], [1399.0, 998.0], [1397.0, 669.0], [1394.0, 1011.5], [1392.0, 1018.0], [1375.0, 393.0], [1349.0, 700.3333333333334], [1354.0, 693.6], [1351.0, 553.0], [1357.0, 545.0], [1355.0, 537.5], [1359.0, 539.5], [1358.0, 958.0], [1374.0, 542.0], [1373.0, 1060.0], [1372.0, 521.0], [1364.0, 560.0], [1361.0, 431.0], [1360.0, 546.0], [1446.0, 966.6666666666666], [1468.0, 70.0], [1471.0, 511.0], [1440.0, 1026.75], [1445.0, 629.4], [1443.0, 936.0], [1447.0, 576.1111111111111], [1449.0, 909.8333333333333], [1448.0, 982.3333333333334], [1451.0, 1034.0], [1450.0, 939.0], [1453.0, 722.0], [1452.0, 831.2], [1470.0, 943.0], [1469.0, 74.0], [1465.0, 67.0], [1464.0, 329.8571428571429], [1463.0, 419.9090909090909], [1462.0, 382.1111111111111], [1461.0, 641.75], [1460.0, 337.0], [1459.0, 1001.0], [1456.0, 1044.0], [1437.0, 1020.0], [1411.0, 597.4285714285714], [1408.0, 1175.5], [1415.0, 1098.0], [1412.0, 1215.0], [1417.0, 319.0], [1416.0, 566.5], [1421.0, 605.125], [1420.0, 309.0], [1423.0, 662.0], [1422.0, 754.125], [1436.0, 976.5], [1435.0, 1007.5], [1434.0, 963.0], [1432.0, 818.0], [1431.0, 840.3333333333334], [1430.0, 987.0], [1429.0, 1025.0], [1427.0, 1025.0], [1426.0, 988.0], [1425.0, 295.0], [1424.0, 1034.0], [1512.0, 131.0], [1532.0, 366.0], [1535.0, 555.5], [1505.0, 1101.5], [1504.0, 534.0], [1511.0, 366.6666666666667], [1509.0, 331.0], [1513.0, 900.5], [1515.0, 105.5], [1514.0, 97.66666666666667], [1517.0, 576.0], [1516.0, 555.5], [1519.0, 534.0], [1518.0, 441.0], [1534.0, 564.75], [1533.0, 541.0], [1531.0, 429.62499999999994], [1530.0, 398.66666666666663], [1528.0, 546.0], [1526.0, 628.0], [1525.0, 516.0], [1523.0, 580.0], [1522.0, 454.625], [1521.0, 543.0], [1520.0, 564.6666666666666], [1486.0, 928.5], [1483.0, 231.0], [1482.0, 388.3333333333333], [1481.0, 629.0], [1480.0, 396.0], [1479.0, 715.0], [1475.0, 1130.0], [1474.0, 628.75], [1472.0, 1139.5], [1500.0, 622.75], [1499.0, 81.0], [1497.0, 1147.0], [1496.0, 727.5], [1495.0, 83.0], [1493.0, 243.0], [1491.0, 406.0], [1489.0, 684.4], [1488.0, 1124.0], [1568.0, 71.9090909090909], [1572.0, 72.14285714285714], [1575.0, 50.35248041775455], [1574.0, 72.33333333333333], [1573.0, 78.0], [1571.0, 72.0], [1570.0, 74.66666666666667], [1569.0, 72.25], [1567.0, 77.0], [1536.0, 376.1111111111111], [1538.0, 554.0], [1537.0, 549.3333333333334], [1542.0, 531.0], [1541.0, 451.57142857142856], [1544.0, 409.5], [1543.0, 535.3333333333334], [1546.0, 319.0], [1545.0, 72.0], [1550.0, 301.3333333333333], [1549.0, 310.6], [1566.0, 84.5], [1565.0, 449.6666666666667], [1564.0, 407.5], [1563.0, 364.9375], [1562.0, 337.0], [1561.0, 323.49999999999994], [1560.0, 318.2], [1559.0, 367.0], [1558.0, 295.0], [1557.0, 217.67857142857142], [1556.0, 299.0], [1555.0, 307.0], [1554.0, 303.6666666666667], [1553.0, 295.5], [1552.0, 322.0]], "isOverall": false, "label": "getUser", "isController": false}, {"data": [[1166.9809523809552, 1869.389206349206]], "isOverall": false, "label": "getUser-Aggregated", "isController": false}, {"data": [[2.0, 7533.0], [3.0, 8388.0], [4.0, 8094.0], [5.0, 8496.0], [6.0, 8005.0], [7.0, 36.0], [8.0, 8428.0], [9.0, 7062.0], [10.0, 8425.0], [11.0, 8058.0], [12.0, 34.0], [13.0, 30.0], [14.0, 27.0], [15.0, 25.0], [16.0, 8058.0], [17.0, 8372.0], [18.0, 7422.0], [19.0, 6892.0], [22.0, 28.0], [23.0, 28.0], [24.0, 32.0], [26.0, 31.0], [29.0, 4022.0], [30.0, 7315.0], [31.0, 8170.5], [35.0, 7792.0], [37.0, 8276.666666666666], [39.0, 7988.0], [38.0, 7779.0], [41.0, 7917.0], [40.0, 7963.0], [43.0, 8134.0], [45.0, 2667.0], [46.0, 25.0], [49.0, 27.0], [48.0, 26.0], [51.0, 8213.0], [50.0, 6832.0], [59.0, 7692.5], [61.0, 7553.0], [63.0, 7805.5], [62.0, 7862.0], [66.0, 8164.0], [65.0, 8194.5], [64.0, 8006.5], [71.0, 7580.0], [69.0, 7760.0], [68.0, 7414.5], [75.0, 7831.0], [73.0, 7663.6], [78.0, 31.0], [82.0, 4860.0], [80.0, 5334.0], [84.0, 29.5], [90.0, 22.0], [89.0, 24.0], [94.0, 3664.0], [92.0, 22.5], [99.0, 45.5], [97.0, 7875.0], [96.0, 32.0], [102.0, 3792.5], [100.0, 27.0], [107.0, 7822.0], [106.0, 30.0], [104.0, 3756.0], [110.0, 5433.666666666666], [108.0, 28.0], [115.0, 7397.0], [112.0, 7778.0], [118.0, 7947.0], [117.0, 7473.5], [123.0, 38.0], [122.0, 36.0], [120.0, 8035.0], [121.0, 38.0], [127.0, 34.0], [125.0, 2734.0], [134.0, 32.5], [133.0, 7834.0], [131.0, 7633.0], [130.0, 35.0], [128.0, 39.0], [141.0, 7839.0], [140.0, 6731.0], [139.0, 7625.0], [138.0, 29.0], [136.0, 4075.5], [150.0, 7665.666666666667], [149.0, 7275.666666666667], [147.0, 7158.0], [159.0, 4062.0], [158.0, 56.0], [156.0, 7943.5], [154.0, 2560.0], [153.0, 46.0], [152.0, 45.5], [167.0, 24.0], [165.0, 7561.0], [164.0, 7484.5], [163.0, 24.0], [161.0, 21.0], [172.0, 18.0], [171.0, 20.0], [169.0, 22.0], [168.0, 4078.5], [182.0, 7366.0], [181.0, 7581.0], [180.0, 7629.0], [189.0, 3444.0], [187.0, 7519.0], [186.0, 45.0], [185.0, 5562.5], [197.0, 4923.333333333333], [196.0, 42.0], [195.0, 42.0], [194.0, 45.0], [193.0, 49.0], [192.0, 3891.0], [207.0, 42.0], [204.0, 3329.0], [202.0, 3850.75], [201.0, 7306.0], [200.0, 3900.0], [211.0, 25.0], [210.0, 25.0], [209.0, 2536.3333333333335], [220.0, 7493.0], [231.0, 2057.0], [230.0, 8019.0], [229.0, 7920.0], [227.0, 54.333333333333336], [226.0, 57.0], [225.0, 3115.0], [224.0, 7999.0], [239.0, 5825.333333333333], [238.0, 7048.0], [236.0, 7074.0], [234.0, 8004.0], [233.0, 7996.0], [232.0, 8068.0], [246.0, 35.0], [242.0, 40.0], [241.0, 3703.0], [240.0, 7444.0], [254.0, 27.333333333333332], [252.0, 4019.5], [249.0, 31.5], [255.0, 26.0], [259.0, 38.0], [264.0, 22.0], [268.0, 20.0], [266.0, 20.5], [263.0, 27.0], [262.0, 37.0], [261.0, 35.5], [260.0, 29.0], [258.0, 39.0], [256.0, 34.333333333333336], [275.0, 4506.0], [286.0, 46.0], [287.0, 6432.0], [285.0, 3711.0], [273.0, 7617.0], [272.0, 7760.0], [283.0, 3739.0], [282.0, 50.0], [279.0, 42.5], [278.0, 61.0], [277.0, 7265.0], [276.0, 6532.0], [303.0, 38.0], [302.0, 31.5], [301.0, 33.0], [299.0, 33.75], [292.0, 40.0], [291.0, 7766.0], [289.0, 20.0], [288.0, 20.0], [316.0, 7383.0], [318.0, 6774.0], [319.0, 7538.0], [317.0, 7058.0], [315.0, 6702.666666666667], [314.0, 24.0], [311.0, 7543.0], [304.0, 37.5], [307.0, 33.0], [306.0, 34.0], [310.0, 3657.0], [308.0, 4381.333333333334], [323.0, 24.0], [334.0, 7247.0], [333.0, 6734.5], [331.0, 6806.0], [330.0, 3748.0], [328.0, 16.0], [327.0, 18.0], [326.0, 18.0], [325.0, 23.0], [322.0, 36.0], [321.0, 34.0], [320.0, 7019.0], [351.0, 6486.0], [345.0, 49.0], [344.0, 51.0], [342.0, 47.0], [341.0, 49.666666666666664], [339.0, 6223.0], [336.0, 6437.0], [355.0, 93.0], [366.0, 16.5], [364.0, 6165.0], [363.0, 38.0], [361.0, 31.0], [360.0, 49.0], [358.0, 35.0], [357.0, 32.0], [356.0, 15.0], [353.0, 1793.75], [352.0, 7184.0], [382.0, 3889.0], [383.0, 5543.0], [381.0, 4231.0], [380.0, 15.0], [379.0, 6724.0], [378.0, 20.0], [377.0, 77.5], [375.0, 25.0], [369.0, 76.0], [368.0, 1644.0], [371.0, 7506.0], [370.0, 7071.0], [374.0, 15.0], [373.0, 3539.0], [372.0, 25.0], [398.0, 3531.0], [399.0, 5121.0], [396.0, 5158.0], [387.0, 3579.0], [386.0, 5372.0], [385.0, 3878.0], [384.0, 5025.0], [395.0, 3611.5], [393.0, 28.0], [392.0, 5250.0], [391.0, 3919.0], [390.0, 5328.0], [389.0, 5341.0], [388.0, 4835.0], [403.0, 30.0], [414.0, 3622.5], [415.0, 4873.0], [412.0, 4247.0], [411.0, 4707.666666666667], [408.0, 23.0], [407.0, 4555.0], [406.0, 4660.666666666667], [402.0, 30.0], [401.0, 33.0], [400.0, 36.0], [429.0, 3245.0], [430.0, 27.0], [428.0, 19.0], [419.0, 4420.0], [418.0, 4847.0], [417.0, 4521.0], [416.0, 16.0], [427.0, 4388.0], [425.0, 4494.0], [424.0, 20.0], [423.0, 4152.0], [422.0, 3554.0], [421.0, 4775.5], [446.0, 3909.5], [447.0, 324.0], [444.0, 4580.0], [443.0, 19.5], [441.0, 4577.0], [440.0, 287.0], [438.0, 342.0], [437.0, 2273.0], [435.0, 19.0], [434.0, 4234.0], [433.0, 16.0], [432.0, 19.0], [451.0, 19.0], [462.0, 3880.6666666666665], [463.0, 3209.0], [460.0, 3643.25], [458.0, 3995.0], [454.0, 24.0], [453.0, 18.0], [452.0, 4323.0], [450.0, 3720.0], [449.0, 4611.0], [448.0, 4572.0], [478.0, 43.0], [479.0, 340.0], [477.0, 2088.0], [475.0, 160.0], [474.0, 35.5], [472.0, 3990.0], [471.0, 3573.3333333333335], [469.0, 3975.0], [467.0, 3180.5], [465.0, 3850.0], [494.0, 4307.0], [495.0, 53.0], [493.0, 3507.0], [492.0, 3712.0], [490.0, 421.0], [489.0, 415.0], [488.0, 96.66666666666666], [485.0, 192.0], [481.0, 30.0], [480.0, 36.0], [483.0, 328.0], [482.0, 30.0], [504.0, 55.0], [510.0, 2185.333333333333], [507.0, 56.0], [506.0, 56.0], [505.0, 57.5], [502.0, 3517.0], [501.0, 113.0], [500.0, 4259.5], [498.0, 3933.0], [497.0, 64.0], [496.0, 54.0], [538.0, 3669.0], [531.0, 3885.0], [541.0, 1960.0], [542.0, 70.0], [529.0, 1769.0], [540.0, 4505.0], [536.0, 4153.0], [519.0, 77.0], [518.0, 69.0], [517.0, 4017.0], [516.0, 148.5], [514.0, 221.0], [512.0, 1838.0], [527.0, 180.0], [526.0, 68.0], [525.0, 79.0], [524.0, 74.0], [523.0, 70.0], [522.0, 70.0], [521.0, 80.0], [520.0, 242.0], [535.0, 4392.0], [534.0, 222.0], [533.0, 1576.5], [569.0, 1931.5], [574.0, 4290.0], [575.0, 3915.0], [562.0, 2070.5], [560.0, 68.0], [573.0, 3715.0], [572.0, 233.0], [570.0, 167.0], [559.0, 53.5], [545.0, 4131.0], [544.0, 229.5], [549.0, 72.0], [547.0, 445.5], [551.0, 64.0], [550.0, 195.0], [557.0, 52.0], [556.0, 4018.0], [555.0, 4392.0], [554.0, 60.0], [553.0, 4402.0], [552.0, 72.0], [567.0, 4367.0], [566.0, 4331.0], [565.0, 2042.5], [563.0, 4352.0], [606.0, 58.0], [607.0, 60.0], [593.0, 189.0], [592.0, 195.0], [596.0, 127.0], [595.0, 4217.0], [605.0, 2160.5], [603.0, 3949.0], [602.0, 3538.0], [601.0, 64.0], [600.0, 61.0], [583.0, 3289.0], [581.0, 4161.0], [579.0, 62.0], [577.0, 54.0], [576.0, 54.0], [591.0, 2645.0], [588.0, 4247.0], [586.0, 4299.0], [584.0, 4046.5], [599.0, 62.0], [598.0, 91.5], [638.0, 3807.0], [639.0, 3767.0], [625.0, 92.0], [628.0, 62.0], [626.0, 104.0], [637.0, 69.0], [636.0, 70.0], [635.0, 69.0], [634.0, 2245.0], [632.0, 3880.0], [614.0, 117.0], [613.0, 3789.0], [611.0, 49.0], [610.0, 1339.3333333333335], [623.0, 116.0], [622.0, 3838.0], [621.0, 69.0], [620.0, 72.0], [619.0, 3603.5], [618.0, 250.33333333333334], [631.0, 211.5], [629.0, 81.5], [655.0, 36.0], [669.0, 2664.0], [665.0, 29.5], [646.0, 69.0], [645.0, 66.0], [644.0, 65.0], [643.0, 62.0], [642.0, 81.0], [641.0, 3829.0], [640.0, 3764.0], [660.0, 30.0], [662.0, 26.0], [656.0, 27.0], [654.0, 1939.0], [653.0, 3810.0], [652.0, 3656.0], [651.0, 57.0], [650.0, 60.0], [648.0, 57.5], [696.0, 39.0], [702.0, 2850.0], [703.0, 36.0], [688.0, 30.5], [690.0, 29.0], [689.0, 25.0], [701.0, 3747.0], [699.0, 30.0], [698.0, 35.0], [686.0, 24.0], [672.0, 3547.3333333333335], [675.0, 3648.0], [673.0, 3377.0], [677.0, 3265.5], [676.0, 3625.3333333333335], [679.0, 3027.0], [678.0, 3623.5], [685.0, 2734.0], [681.0, 2406.0], [680.0, 4086.0], [695.0, 1816.5], [694.0, 3693.0], [692.0, 1287.6666666666667], [691.0, 24.0], [734.0, 1169.3333333333335], [735.0, 2517.0], [728.0, 37.0], [710.0, 37.0], [709.0, 30.0], [708.0, 2090.6666666666665], [706.0, 35.5], [705.0, 3772.0], [727.0, 115.0], [725.0, 30.5], [723.0, 2487.0], [721.0, 1883.5], [719.0, 3861.0], [717.0, 2817.0], [715.0, 1411.0], [714.0, 35.0], [713.0, 32.0], [755.0, 3717.0], [767.0, 31.0], [765.0, 32.0], [763.0, 1711.75], [760.0, 96.0], [751.0, 37.0], [739.0, 3551.0], [736.0, 1255.6666666666667], [741.0, 28.0], [740.0, 30.0], [750.0, 31.5], [749.0, 33.0], [748.0, 36.0], [746.0, 42.0], [745.0, 1387.3333333333335], [744.0, 38.0], [758.0, 4004.0], [757.0, 70.0], [756.0, 39.0], [754.0, 73.5], [752.0, 37.0], [787.0, 1682.0], [799.0, 28.0], [796.0, 28.0], [794.0, 26.0], [792.0, 3878.0], [783.0, 36.5], [769.0, 37.333333333333336], [768.0, 3512.0], [773.0, 38.5], [772.0, 50.0], [775.0, 32.0], [774.0, 37.0], [781.0, 50.5], [779.0, 39.0], [778.0, 1802.0], [776.0, 30.0], [791.0, 3554.0], [790.0, 38.0], [789.0, 35.5], [785.0, 44.0], [784.0, 2675.0], [826.0, 28.5], [830.0, 29.0], [831.0, 30.0], [818.0, 25.0], [816.0, 21.0], [821.0, 24.0], [820.0, 3175.0], [829.0, 66.0], [828.0, 24.0], [827.0, 36.0], [824.0, 25.0], [807.0, 21.0], [805.0, 25.5], [804.0, 907.0], [803.0, 29.5], [815.0, 23.0], [814.0, 3476.0], [813.0, 19.0], [812.0, 3260.0], [811.0, 3507.0], [810.0, 3728.0], [808.0, 21.0], [823.0, 23.0], [822.0, 28.0], [856.0, 33.0], [861.0, 38.5], [862.0, 33.0], [849.0, 37.0], [848.0, 19.0], [851.0, 2415.0], [850.0, 3742.0], [859.0, 52.0], [858.0, 2443.0], [857.0, 30.0], [847.0, 3682.0], [832.0, 28.0], [835.0, 21.5], [833.0, 23.0], [837.0, 26.0], [836.0, 22.0], [839.0, 3134.0], [838.0, 26.0], [846.0, 23.0], [844.0, 24.0], [842.0, 25.5], [840.0, 26.0], [855.0, 1794.0], [854.0, 30.0], [853.0, 67.0], [852.0, 23.0], [871.0, 2196.0], [881.0, 2468.0], [894.0, 2225.6666666666665], [891.0, 2041.0], [890.0, 1932.0], [870.0, 3603.0], [869.0, 33.0], [867.0, 38.0], [866.0, 32.0], [865.0, 37.0], [864.0, 37.0], [886.0, 1931.0], [884.0, 36.0], [883.0, 2487.0], [880.0, 1515.0], [878.0, 1252.0], [877.0, 44.0], [876.0, 2527.0], [875.0, 69.0], [874.0, 117.0], [873.0, 2165.0], [872.0, 2129.0], [923.0, 1721.0], [916.0, 32.0], [925.0, 2556.0], [927.0, 33.0], [914.0, 31.0], [913.0, 1417.0], [924.0, 2690.0], [921.0, 1625.5], [903.0, 2537.0], [902.0, 2095.0], [901.0, 142.0], [900.0, 32.0], [899.0, 31.0], [898.0, 74.0], [897.0, 37.0], [896.0, 1584.5], [911.0, 2087.0], [909.0, 2239.5], [907.0, 548.0], [906.0, 2592.5], [904.0, 36.0], [919.0, 1902.0], [918.0, 1984.0], [917.0, 34.0], [953.0, 1844.5], [948.0, 2313.25], [959.0, 1377.25], [955.0, 41.0], [954.0, 1024.0], [943.0, 1133.0], [930.0, 2110.0], [929.0, 1779.0], [933.0, 2270.5], [932.0, 3138.0], [935.0, 1924.0], [934.0, 32.0], [941.0, 2057.0], [940.0, 1549.0], [939.0, 76.0], [938.0, 2255.0], [936.0, 1870.0], [951.0, 2296.0], [950.0, 367.0], [949.0, 35.0], [946.0, 1840.0], [945.0, 2746.0], [985.0, 39.0], [979.0, 98.0], [989.0, 2325.5], [991.0, 2769.5], [977.0, 918.5], [976.0, 1066.0], [987.0, 2438.0], [984.0, 38.0], [967.0, 1339.0], [965.0, 38.0], [964.0, 353.0], [963.0, 29.0], [962.0, 32.0], [960.0, 34.0], [975.0, 1752.0], [973.0, 34.0], [972.0, 2156.0], [971.0, 1702.5], [969.0, 1771.0], [968.0, 33.0], [983.0, 87.0], [982.0, 1430.5], [980.0, 2902.0], [1012.0, 2403.6666666666665], [1021.0, 2644.5], [1023.0, 106.0], [1011.0, 2380.3333333333335], [1009.0, 1670.0], [1019.0, 2903.5], [1017.0, 103.0], [1016.0, 61.0], [997.0, 1929.0], [996.0, 1288.0], [994.0, 2408.5], [992.0, 52.0], [1007.0, 1285.5], [1003.0, 2264.5], [1002.0, 2840.0], [1000.0, 1923.6666666666667], [1015.0, 644.0], [1014.0, 1081.0], [1013.0, 2056.0], [1078.0, 1578.3333333333333], [1056.0, 1213.0], [1058.0, 2027.5], [1064.0, 1892.0], [1060.0, 69.0], [1068.0, 1839.0], [1086.0, 1242.0], [1084.0, 201.0], [1082.0, 1892.0], [1080.0, 63.0], [1076.0, 1966.0], [1074.0, 99.5], [1072.0, 1705.0], [1036.0, 77.0], [1034.0, 857.0], [1032.0, 120.0], [1030.0, 144.0], [1026.0, 2123.0], [1024.0, 51.0], [1054.0, 81.0], [1052.0, 1361.0], [1046.0, 80.0], [1042.0, 1907.0], [1040.0, 1992.0], [1098.0, 1658.0], [1138.0, 1145.0], [1126.0, 74.0], [1146.0, 1087.5], [1124.0, 80.0], [1130.0, 2097.0], [1132.0, 2126.0], [1134.0, 86.0], [1148.0, 998.0], [1140.0, 2089.0], [1136.0, 77.0], [1088.0, 1975.0], [1090.0, 1981.0], [1096.0, 1527.0], [1100.0, 200.0], [1102.0, 1015.0], [1118.0, 79.0], [1116.0, 2078.0], [1114.0, 1216.0], [1112.0, 1853.0], [1110.0, 136.5], [1106.0, 1241.0], [1104.0, 138.0], [1208.0, 85.0], [1212.0, 2327.0], [1186.0, 2046.0], [1188.0, 2114.0], [1192.0, 1330.25], [1190.0, 2328.0], [1198.0, 2344.0], [1214.0, 192.0], [1210.0, 198.0], [1206.0, 85.0], [1200.0, 190.0], [1160.0, 500.0], [1164.0, 152.0], [1162.0, 447.4], [1166.0, 632.6666666666667], [1182.0, 81.0], [1180.0, 1028.0], [1178.0, 1073.0], [1176.0, 1523.5], [1174.0, 417.0], [1170.0, 513.0], [1168.0, 1239.0], [1266.0, 246.0], [1274.0, 151.0], [1248.0, 88.0], [1252.0, 774.5], [1256.0, 143.0], [1258.0, 1794.0], [1260.0, 1052.0], [1276.0, 658.3333333333334], [1272.0, 82.0], [1264.0, 138.0], [1230.0, 89.0], [1228.0, 81.0], [1226.0, 82.0], [1224.0, 1186.0], [1222.0, 229.0], [1220.0, 78.0], [1218.0, 131.5], [1216.0, 80.0], [1246.0, 1524.0], [1244.0, 754.0], [1242.0, 172.0], [1240.0, 551.0], [1234.0, 2359.0], [1340.0, 83.0], [1312.0, 956.0], [1314.0, 1307.0], [1318.0, 527.5], [1322.0, 611.5], [1320.0, 147.0], [1326.0, 467.5], [1324.0, 840.5], [1342.0, 149.0], [1338.0, 165.0], [1336.0, 640.0], [1334.0, 541.0], [1330.0, 146.5], [1328.0, 326.5], [1280.0, 85.0], [1282.0, 83.0], [1284.0, 82.0], [1286.0, 895.0], [1288.0, 622.0], [1290.0, 253.0], [1294.0, 510.0], [1292.0, 614.0], [1306.0, 86.0], [1304.0, 504.0], [1302.0, 436.0], [1300.0, 742.0], [1298.0, 486.0], [1296.0, 647.5], [1396.0, 92.0], [1404.0, 86.0], [1376.0, 73.0], [1378.0, 70.0], [1380.0, 1160.0], [1388.0, 170.0], [1406.0, 1654.0], [1402.0, 85.0], [1400.0, 1029.0], [1398.0, 961.0], [1394.0, 157.0], [1392.0, 122.0], [1348.0, 611.0], [1346.0, 602.0], [1354.0, 470.0], [1352.0, 84.0], [1356.0, 70.0], [1374.0, 404.0], [1372.0, 695.5], [1370.0, 646.5], [1368.0, 66.0], [1364.0, 516.0], [1362.0, 589.0], [1360.0, 75.0], [1464.0, 545.0], [1468.0, 647.5], [1440.0, 346.5], [1446.0, 68.0], [1448.0, 582.0], [1450.0, 583.0], [1452.0, 191.0], [1470.0, 909.0], [1466.0, 976.0], [1462.0, 66.0], [1458.0, 377.0], [1456.0, 378.0], [1422.0, 628.0], [1420.0, 629.0], [1416.0, 162.0], [1414.0, 110.0], [1410.0, 75.0], [1408.0, 742.0], [1436.0, 67.0], [1434.0, 1552.0], [1432.0, 437.0], [1430.0, 176.0], [1428.0, 165.0], [1426.0, 184.0], [1424.0, 1041.0], [1528.0, 956.0], [1532.0, 83.0], [1504.0, 622.0], [1506.0, 890.0], [1512.0, 1169.0], [1514.0, 656.0], [1516.0, 165.0], [1518.0, 738.0], [1534.0, 104.0], [1530.0, 82.0], [1526.0, 897.0], [1522.0, 511.0], [1520.0, 81.0], [1486.0, 907.0], [1482.0, 591.0], [1480.0, 711.5], [1478.0, 226.5], [1474.0, 308.5], [1472.0, 226.0], [1500.0, 231.33333333333334], [1496.0, 1297.0], [1488.0, 240.0], [1568.0, 215.0], [1572.0, 280.0], [1574.0, 574.0], [1570.0, 600.0], [1536.0, 169.0], [1538.0, 442.0], [1540.0, 72.0], [1542.0, 150.0], [1544.0, 875.0], [1546.0, 455.0], [1548.0, 135.0], [1550.0, 66.0], [1566.0, 321.0], [1560.0, 145.0], [1558.0, 726.0], [1556.0, 207.0], [1554.0, 66.0], [1552.0, 756.0], [1037.0, 2797.0], [1083.0, 1204.0], [1087.0, 2718.0], [1059.0, 136.0], [1065.0, 952.9999999999999], [1071.0, 1113.0], [1069.0, 1641.3333333333333], [1079.0, 1842.0], [1039.0, 1568.0], [1035.0, 83.0], [1033.0, 2130.0], [1031.0, 551.0], [1029.0, 2407.5], [1027.0, 1964.0], [1025.0, 1268.0], [1055.0, 77.0], [1053.0, 61.0], [1051.0, 1336.5], [1049.0, 2018.0], [1047.0, 2868.0], [1045.0, 178.5], [1043.0, 2791.0], [1041.0, 2480.0], [1139.0, 163.0], [1151.0, 77.0], [1121.0, 574.0], [1123.0, 625.5], [1127.0, 694.0], [1131.0, 1321.0], [1133.0, 2020.0], [1135.0, 81.0], [1149.0, 967.5], [1145.0, 160.0], [1137.0, 81.0], [1119.0, 1074.0], [1089.0, 161.0], [1093.0, 2203.0], [1091.0, 2091.5], [1095.0, 2149.0], [1097.0, 1163.0], [1099.0, 2216.0], [1103.0, 168.5], [1117.0, 1395.0], [1115.0, 1789.0], [1111.0, 79.0], [1109.0, 75.0], [1107.0, 2284.0], [1105.0, 1962.0], [1205.0, 573.0], [1215.0, 77.0], [1189.0, 1536.0], [1197.0, 1306.5], [1195.0, 2260.6666666666665], [1199.0, 77.0], [1213.0, 87.0], [1211.0, 246.0], [1209.0, 90.0], [1207.0, 1253.0], [1203.0, 113.5], [1201.0, 178.0], [1183.0, 83.0], [1157.0, 85.0], [1161.0, 83.0], [1165.0, 100.0], [1181.0, 2525.0], [1179.0, 2178.0], [1177.0, 178.0], [1173.0, 115.5], [1171.0, 83.0], [1169.0, 95.0], [1271.0, 811.0], [1267.0, 161.0], [1255.0, 989.0], [1279.0, 325.5], [1251.0, 1850.0], [1249.0, 488.0], [1253.0, 1892.0], [1257.0, 555.0], [1259.0, 1882.0], [1263.0, 103.5], [1261.0, 163.0], [1277.0, 160.0], [1269.0, 115.5], [1265.0, 135.0], [1231.0, 93.0], [1229.0, 82.0], [1227.0, 1656.0], [1223.0, 2382.0], [1221.0, 997.0], [1247.0, 90.0], [1245.0, 577.0], [1243.0, 79.0], [1241.0, 942.0], [1239.0, 86.0], [1237.0, 290.0], [1235.0, 219.0], [1233.0, 1975.5], [1331.0, 215.0], [1343.0, 530.0], [1313.0, 1106.0], [1315.0, 1179.0], [1317.0, 726.0], [1341.0, 1395.0], [1339.0, 80.0], [1337.0, 82.0], [1335.0, 332.0], [1333.0, 645.0], [1311.0, 340.0], [1281.0, 160.0], [1283.0, 712.0], [1285.0, 75.0], [1287.0, 78.0], [1289.0, 941.0], [1291.0, 1282.0], [1309.0, 638.0], [1307.0, 89.0], [1305.0, 161.0], [1303.0, 234.0], [1301.0, 240.0], [1297.0, 90.0], [1405.0, 85.0], [1407.0, 180.0], [1377.0, 72.0], [1379.0, 699.0], [1385.0, 379.0], [1383.0, 807.0], [1387.0, 336.5], [1391.0, 78.0], [1389.0, 1069.0], [1403.0, 82.0], [1401.0, 192.0], [1399.0, 1379.0], [1397.0, 698.0], [1395.0, 1071.0], [1393.0, 937.0], [1375.0, 702.0], [1345.0, 573.5], [1351.0, 733.0], [1349.0, 455.0], [1355.0, 438.0], [1359.0, 1135.0], [1357.0, 186.0], [1373.0, 515.0], [1367.0, 442.5], [1365.0, 937.0], [1363.0, 72.0], [1361.0, 913.0], [1465.0, 999.0], [1463.0, 679.0], [1447.0, 213.0], [1471.0, 1291.0], [1443.0, 795.5], [1441.0, 1426.0], [1445.0, 659.5], [1449.0, 63.0], [1451.0, 68.0], [1455.0, 130.0], [1453.0, 67.0], [1469.0, 713.0], [1461.0, 95.0], [1459.0, 483.0], [1423.0, 1243.0], [1421.0, 373.0], [1419.0, 134.0], [1417.0, 187.0], [1415.0, 652.0], [1411.0, 76.0], [1409.0, 169.0], [1439.0, 445.0], [1437.0, 150.0], [1435.0, 945.0], [1433.0, 68.0], [1431.0, 164.0], [1429.0, 125.0], [1427.0, 223.0], [1425.0, 198.0], [1533.0, 937.0], [1535.0, 246.0], [1505.0, 1242.0], [1511.0, 599.0], [1509.0, 592.0], [1513.0, 232.0], [1515.0, 104.0], [1517.0, 583.0], [1519.0, 749.0], [1531.0, 97.0], [1529.0, 97.0], [1527.0, 355.0], [1525.0, 318.5], [1523.0, 455.0], [1521.0, 160.0], [1485.0, 501.6666666666667], [1481.0, 846.0], [1477.0, 606.5], [1503.0, 244.5], [1499.0, 239.0], [1495.0, 716.5], [1493.0, 526.5], [1491.0, 264.5], [1489.0, 628.0], [1541.0, 126.0], [1575.0, 326.5], [1573.0, 72.0], [1571.0, 230.0], [1569.0, 211.0], [1567.0, 322.0], [1537.0, 589.0], [1539.0, 189.0], [1543.0, 923.0], [1545.0, 928.0], [1547.0, 461.0], [1549.0, 185.0], [1565.0, 86.0], [1563.0, 719.0], [1561.0, 183.0], [1559.0, 755.0], [1557.0, 760.0], [1555.0, 73.0], [1553.0, 95.0], [1.0, 8455.0]], "isOverall": false, "label": "getListOfUser", "isController": false}, {"data": [[788.9917460317456, 1773.1136507936508]], "isOverall": false, "label": "getListOfUser-Aggregated", "isController": false}, {"data": [[656.0, 16638.0], [727.0, 19125.0], [755.0, 14737.0], [797.0, 16571.0], [796.0, 15284.0], [792.0, 18973.0], [791.0, 16222.714285714284], [811.0, 16091.0], [810.0, 15815.0], [808.0, 11205.0], [805.0, 15823.0], [804.0, 16324.0], [803.0, 16748.0], [859.0, 15968.0], [858.0, 15646.0], [857.0, 14544.666666666666], [855.0, 15501.0], [850.0, 15664.0], [883.0, 4019.0], [921.0, 3747.0], [1324.0, 13883.0], [1322.0, 13863.0], [1315.0, 13730.0], [1313.0, 9556.666666666666], [1307.0, 11741.2], [1304.0, 10415.0], [1303.0, 14807.0], [1383.0, 11915.0], [1517.0, 12964.0], [1516.0, 14663.0], [1515.0, 13674.0], [1514.0, 13696.0], [1511.0, 15780.0], [1485.0, 13033.0], [1474.0, 13784.0], [1472.0, 12107.0], [1563.0, 9114.068965517245], [1568.0, 8653.8], [1575.0, 10610.990811638596], [1574.0, 8609.624999999998], [1566.0, 6637.309523809524], [1572.0, 7476.177777777778], [1571.0, 6608.879999999998], [1569.0, 7638.0], [1570.0, 1729.0], [1573.0, 7988.666666666666], [1565.0, 7410.107142857142], [1564.0, 7396.875], [1562.0, 9273.65], [1561.0, 10740.565217391304], [1560.0, 7314.777777777777], [1559.0, 5531.6], [1558.0, 13248.0], [1557.0, 5199.222222222223], [1556.0, 9438.333333333334], [1555.0, 13041.5], [1554.0, 6658.818181818183], [1553.0, 6922.7], [1552.0, 6972.714285714286], [1536.0, 5526.135135135133], [1538.0, 6861.758620689657], [1537.0, 7813.0], [1541.0, 4783.700000000001], [1539.0, 6601.999999999999], [1543.0, 6486.2307692307695], [1542.0, 5734.46], [1545.0, 7176.833333333334], [1544.0, 7545.571428571428], [1547.0, 3815.5], [1546.0, 6523.6875], [1549.0, 8701.0], [1548.0, 6211.029411764706], [1551.0, 6210.538461538462], [1550.0, 9425.0], [1567.0, 9226.0], [316.0, 18129.0], [367.0, 19687.0], [366.0, 18730.5], [375.0, 22181.0], [373.0, 18839.0], [372.0, 20049.0], [371.0, 21623.0], [370.0, 19260.0], [369.0, 22847.0]], "isOverall": false, "label": "register", "isController": false}, {"data": [[1532.8120634920629, 9048.120000000008]], "isOverall": false, "label": "register-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1575.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 15320.25, "minX": 1.6674795E12, "maxY": 92032.43333333333, "series": [{"data": [[1.6674795E12, 92032.43333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6674795E12, 15320.25]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6674795E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1773.1136507936508, "minX": 1.6674795E12, "maxY": 9048.120000000008, "series": [{"data": [[1.6674795E12, 1869.389206349206]], "isOverall": false, "label": "getUser", "isController": false}, {"data": [[1.6674795E12, 1773.1136507936508]], "isOverall": false, "label": "getListOfUser", "isController": false}, {"data": [[1.6674795E12, 9048.120000000008]], "isOverall": false, "label": "register", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6674795E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1380.634920634919, "minX": 1.6674795E12, "maxY": 8228.446349206351, "series": [{"data": [[1.6674795E12, 1866.5777777777762]], "isOverall": false, "label": "getUser", "isController": false}, {"data": [[1.6674795E12, 1380.634920634919]], "isOverall": false, "label": "getListOfUser", "isController": false}, {"data": [[1.6674795E12, 8228.446349206351]], "isOverall": false, "label": "register", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6674795E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6674795E12, "maxY": 4354.375873015867, "series": [{"data": [[1.6674795E12, 139.17269841269842]], "isOverall": false, "label": "getUser", "isController": false}, {"data": [[1.6674795E12, 0.0]], "isOverall": false, "label": "getListOfUser", "isController": false}, {"data": [[1.6674795E12, 4354.375873015867]], "isOverall": false, "label": "register", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6674795E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 14.0, "minX": 1.6674795E12, "maxY": 22847.0, "series": [{"data": [[1.6674795E12, 22847.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6674795E12, 14.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6674795E12, 11435.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6674795E12, 15655.900000000003]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6674795E12, 2057.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.6674795E12, 13588.25]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6674795E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 305.0, "minX": 3.0, "maxY": 15843.0, "series": [{"data": [[537.0, 7490.5], [524.0, 3645.5], [558.0, 563.0], [38.0, 4178.5], [3.0, 5373.0], [867.0, 305.0], [252.0, 6878.0], [77.0, 4769.0], [304.0, 6764.0], [332.0, 7596.0], [349.0, 5482.0], [381.0, 1902.0], [503.0, 1163.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[537.0, 15843.0], [304.0, 15311.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 867.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 3.0, "maxY": 7540.0, "series": [{"data": [[537.0, 7472.5], [524.0, 3369.5], [558.0, 498.5], [38.0, 3808.0], [3.0, 544.0], [867.0, 304.0], [252.0, 6421.5], [77.0, 4769.0], [304.0, 6764.0], [332.0, 7540.0], [349.0, 5482.0], [381.0, 756.0], [503.0, 961.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[537.0, 0.0], [304.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 867.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 78.75, "minX": 1.6674795E12, "maxY": 78.75, "series": [{"data": [[1.6674795E12, 78.75]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6674795E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.6674795E12, "maxY": 77.4, "series": [{"data": [[1.6674795E12, 77.4]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6674795E12, 0.3]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLHandshakeException", "isController": false}, {"data": [[1.6674795E12, 0.9833333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.6674795E12, 0.06666666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6674795E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.35, "minX": 1.6674795E12, "maxY": 26.25, "series": [{"data": [[1.6674795E12, 1.35]], "isOverall": false, "label": "register-failure", "isController": false}, {"data": [[1.6674795E12, 24.9]], "isOverall": false, "label": "register-success", "isController": false}, {"data": [[1.6674795E12, 26.25]], "isOverall": false, "label": "getUser-success", "isController": false}, {"data": [[1.6674795E12, 26.25]], "isOverall": false, "label": "getListOfUser-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6674795E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.35, "minX": 1.6674795E12, "maxY": 77.4, "series": [{"data": [[1.6674795E12, 77.4]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6674795E12, 1.35]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6674795E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

