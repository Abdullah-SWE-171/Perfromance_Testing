/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 72.0, "minX": 0.0, "maxY": 14433.0, "series": [{"data": [[0.0, 72.0], [0.1, 72.0], [0.2, 73.0], [0.3, 73.0], [0.4, 73.0], [0.5, 73.0], [0.6, 73.0], [0.7, 74.0], [0.8, 74.0], [0.9, 74.0], [1.0, 74.0], [1.1, 74.0], [1.2, 74.0], [1.3, 75.0], [1.4, 75.0], [1.5, 75.0], [1.6, 75.0], [1.7, 75.0], [1.8, 75.0], [1.9, 75.0], [2.0, 76.0], [2.1, 76.0], [2.2, 76.0], [2.3, 76.0], [2.4, 76.0], [2.5, 76.0], [2.6, 76.0], [2.7, 76.0], [2.8, 76.0], [2.9, 76.0], [3.0, 76.0], [3.1, 76.0], [3.2, 76.0], [3.3, 76.0], [3.4, 76.0], [3.5, 76.0], [3.6, 77.0], [3.7, 77.0], [3.8, 77.0], [3.9, 77.0], [4.0, 77.0], [4.1, 77.0], [4.2, 77.0], [4.3, 77.0], [4.4, 77.0], [4.5, 77.0], [4.6, 77.0], [4.7, 77.0], [4.8, 77.0], [4.9, 77.0], [5.0, 77.0], [5.1, 77.0], [5.2, 78.0], [5.3, 78.0], [5.4, 78.0], [5.5, 78.0], [5.6, 78.0], [5.7, 78.0], [5.8, 78.0], [5.9, 78.0], [6.0, 78.0], [6.1, 78.0], [6.2, 78.0], [6.3, 78.0], [6.4, 78.0], [6.5, 78.0], [6.6, 78.0], [6.7, 78.0], [6.8, 78.0], [6.9, 78.0], [7.0, 79.0], [7.1, 79.0], [7.2, 79.0], [7.3, 79.0], [7.4, 79.0], [7.5, 79.0], [7.6, 79.0], [7.7, 79.0], [7.8, 79.0], [7.9, 79.0], [8.0, 79.0], [8.1, 79.0], [8.2, 79.0], [8.3, 79.0], [8.4, 79.0], [8.5, 79.0], [8.6, 79.0], [8.7, 79.0], [8.8, 79.0], [8.9, 79.0], [9.0, 79.0], [9.1, 79.0], [9.2, 80.0], [9.3, 80.0], [9.4, 80.0], [9.5, 80.0], [9.6, 80.0], [9.7, 80.0], [9.8, 80.0], [9.9, 80.0], [10.0, 80.0], [10.1, 80.0], [10.2, 80.0], [10.3, 80.0], [10.4, 80.0], [10.5, 80.0], [10.6, 80.0], [10.7, 80.0], [10.8, 80.0], [10.9, 80.0], [11.0, 80.0], [11.1, 80.0], [11.2, 80.0], [11.3, 80.0], [11.4, 80.0], [11.5, 80.0], [11.6, 80.0], [11.7, 80.0], [11.8, 81.0], [11.9, 81.0], [12.0, 81.0], [12.1, 81.0], [12.2, 81.0], [12.3, 81.0], [12.4, 81.0], [12.5, 81.0], [12.6, 81.0], [12.7, 81.0], [12.8, 81.0], [12.9, 81.0], [13.0, 81.0], [13.1, 81.0], [13.2, 81.0], [13.3, 81.0], [13.4, 81.0], [13.5, 81.0], [13.6, 81.0], [13.7, 81.0], [13.8, 81.0], [13.9, 81.0], [14.0, 81.0], [14.1, 81.0], [14.2, 81.0], [14.3, 81.0], [14.4, 81.0], [14.5, 81.0], [14.6, 81.0], [14.7, 81.0], [14.8, 81.0], [14.9, 81.0], [15.0, 82.0], [15.1, 82.0], [15.2, 82.0], [15.3, 82.0], [15.4, 82.0], [15.5, 82.0], [15.6, 82.0], [15.7, 82.0], [15.8, 82.0], [15.9, 82.0], [16.0, 82.0], [16.1, 82.0], [16.2, 82.0], [16.3, 82.0], [16.4, 82.0], [16.5, 82.0], [16.6, 82.0], [16.7, 82.0], [16.8, 82.0], [16.9, 82.0], [17.0, 82.0], [17.1, 82.0], [17.2, 82.0], [17.3, 82.0], [17.4, 82.0], [17.5, 82.0], [17.6, 82.0], [17.7, 82.0], [17.8, 82.0], [17.9, 82.0], [18.0, 83.0], [18.1, 83.0], [18.2, 83.0], [18.3, 83.0], [18.4, 83.0], [18.5, 83.0], [18.6, 83.0], [18.7, 83.0], [18.8, 83.0], [18.9, 83.0], [19.0, 83.0], [19.1, 83.0], [19.2, 83.0], [19.3, 83.0], [19.4, 83.0], [19.5, 83.0], [19.6, 83.0], [19.7, 83.0], [19.8, 83.0], [19.9, 83.0], [20.0, 83.0], [20.1, 83.0], [20.2, 83.0], [20.3, 83.0], [20.4, 83.0], [20.5, 83.0], [20.6, 84.0], [20.7, 84.0], [20.8, 84.0], [20.9, 84.0], [21.0, 84.0], [21.1, 84.0], [21.2, 84.0], [21.3, 84.0], [21.4, 84.0], [21.5, 84.0], [21.6, 84.0], [21.7, 84.0], [21.8, 84.0], [21.9, 84.0], [22.0, 84.0], [22.1, 84.0], [22.2, 84.0], [22.3, 84.0], [22.4, 84.0], [22.5, 84.0], [22.6, 84.0], [22.7, 84.0], [22.8, 84.0], [22.9, 84.0], [23.0, 84.0], [23.1, 84.0], [23.2, 84.0], [23.3, 84.0], [23.4, 84.0], [23.5, 84.0], [23.6, 84.0], [23.7, 84.0], [23.8, 85.0], [23.9, 85.0], [24.0, 85.0], [24.1, 85.0], [24.2, 85.0], [24.3, 85.0], [24.4, 85.0], [24.5, 85.0], [24.6, 85.0], [24.7, 85.0], [24.8, 85.0], [24.9, 85.0], [25.0, 85.0], [25.1, 85.0], [25.2, 85.0], [25.3, 85.0], [25.4, 85.0], [25.5, 85.0], [25.6, 85.0], [25.7, 85.0], [25.8, 85.0], [25.9, 85.0], [26.0, 85.0], [26.1, 85.0], [26.2, 85.0], [26.3, 85.0], [26.4, 85.0], [26.5, 85.0], [26.6, 85.0], [26.7, 85.0], [26.8, 85.0], [26.9, 85.0], [27.0, 86.0], [27.1, 86.0], [27.2, 86.0], [27.3, 86.0], [27.4, 86.0], [27.5, 86.0], [27.6, 86.0], [27.7, 86.0], [27.8, 86.0], [27.9, 86.0], [28.0, 86.0], [28.1, 86.0], [28.2, 86.0], [28.3, 86.0], [28.4, 86.0], [28.5, 86.0], [28.6, 86.0], [28.7, 86.0], [28.8, 86.0], [28.9, 86.0], [29.0, 86.0], [29.1, 86.0], [29.2, 87.0], [29.3, 87.0], [29.4, 87.0], [29.5, 87.0], [29.6, 87.0], [29.7, 87.0], [29.8, 87.0], [29.9, 87.0], [30.0, 87.0], [30.1, 87.0], [30.2, 87.0], [30.3, 87.0], [30.4, 87.0], [30.5, 87.0], [30.6, 87.0], [30.7, 88.0], [30.8, 88.0], [30.9, 88.0], [31.0, 88.0], [31.1, 88.0], [31.2, 88.0], [31.3, 88.0], [31.4, 88.0], [31.5, 88.0], [31.6, 88.0], [31.7, 88.0], [31.8, 88.0], [31.9, 88.0], [32.0, 88.0], [32.1, 88.0], [32.2, 88.0], [32.3, 88.0], [32.4, 89.0], [32.5, 89.0], [32.6, 89.0], [32.7, 89.0], [32.8, 89.0], [32.9, 89.0], [33.0, 89.0], [33.1, 89.0], [33.2, 89.0], [33.3, 89.0], [33.4, 89.0], [33.5, 89.0], [33.6, 89.0], [33.7, 89.0], [33.8, 89.0], [33.9, 89.0], [34.0, 89.0], [34.1, 90.0], [34.2, 90.0], [34.3, 90.0], [34.4, 90.0], [34.5, 90.0], [34.6, 90.0], [34.7, 90.0], [34.8, 90.0], [34.9, 90.0], [35.0, 90.0], [35.1, 90.0], [35.2, 90.0], [35.3, 90.0], [35.4, 90.0], [35.5, 90.0], [35.6, 90.0], [35.7, 90.0], [35.8, 90.0], [35.9, 90.0], [36.0, 90.0], [36.1, 90.0], [36.2, 90.0], [36.3, 90.0], [36.4, 90.0], [36.5, 90.0], [36.6, 90.0], [36.7, 90.0], [36.8, 90.0], [36.9, 90.0], [37.0, 90.0], [37.1, 90.0], [37.2, 90.0], [37.3, 90.0], [37.4, 91.0], [37.5, 91.0], [37.6, 91.0], [37.7, 91.0], [37.8, 91.0], [37.9, 91.0], [38.0, 91.0], [38.1, 91.0], [38.2, 91.0], [38.3, 91.0], [38.4, 91.0], [38.5, 91.0], [38.6, 91.0], [38.7, 91.0], [38.8, 91.0], [38.9, 91.0], [39.0, 91.0], [39.1, 91.0], [39.2, 91.0], [39.3, 91.0], [39.4, 91.0], [39.5, 92.0], [39.6, 92.0], [39.7, 92.0], [39.8, 92.0], [39.9, 92.0], [40.0, 92.0], [40.1, 92.0], [40.2, 92.0], [40.3, 92.0], [40.4, 92.0], [40.5, 92.0], [40.6, 92.0], [40.7, 92.0], [40.8, 92.0], [40.9, 92.0], [41.0, 92.0], [41.1, 92.0], [41.2, 93.0], [41.3, 93.0], [41.4, 93.0], [41.5, 93.0], [41.6, 93.0], [41.7, 93.0], [41.8, 93.0], [41.9, 93.0], [42.0, 93.0], [42.1, 93.0], [42.2, 93.0], [42.3, 93.0], [42.4, 93.0], [42.5, 93.0], [42.6, 93.0], [42.7, 93.0], [42.8, 93.0], [42.9, 93.0], [43.0, 94.0], [43.1, 94.0], [43.2, 94.0], [43.3, 94.0], [43.4, 94.0], [43.5, 94.0], [43.6, 94.0], [43.7, 94.0], [43.8, 94.0], [43.9, 94.0], [44.0, 94.0], [44.1, 94.0], [44.2, 94.0], [44.3, 94.0], [44.4, 94.0], [44.5, 94.0], [44.6, 94.0], [44.7, 94.0], [44.8, 94.0], [44.9, 94.0], [45.0, 94.0], [45.1, 94.0], [45.2, 94.0], [45.3, 94.0], [45.4, 95.0], [45.5, 95.0], [45.6, 95.0], [45.7, 95.0], [45.8, 95.0], [45.9, 95.0], [46.0, 95.0], [46.1, 95.0], [46.2, 95.0], [46.3, 95.0], [46.4, 95.0], [46.5, 95.0], [46.6, 95.0], [46.7, 95.0], [46.8, 95.0], [46.9, 95.0], [47.0, 96.0], [47.1, 96.0], [47.2, 96.0], [47.3, 96.0], [47.4, 96.0], [47.5, 96.0], [47.6, 96.0], [47.7, 96.0], [47.8, 96.0], [47.9, 96.0], [48.0, 96.0], [48.1, 96.0], [48.2, 96.0], [48.3, 96.0], [48.4, 96.0], [48.5, 96.0], [48.6, 96.0], [48.7, 96.0], [48.8, 96.0], [48.9, 96.0], [49.0, 96.0], [49.1, 97.0], [49.2, 97.0], [49.3, 97.0], [49.4, 97.0], [49.5, 97.0], [49.6, 97.0], [49.7, 97.0], [49.8, 97.0], [49.9, 97.0], [50.0, 97.0], [50.1, 97.0], [50.2, 97.0], [50.3, 97.0], [50.4, 97.0], [50.5, 97.0], [50.6, 97.0], [50.7, 97.0], [50.8, 97.0], [50.9, 97.0], [51.0, 97.0], [51.1, 97.0], [51.2, 98.0], [51.3, 98.0], [51.4, 98.0], [51.5, 98.0], [51.6, 98.0], [51.7, 98.0], [51.8, 98.0], [51.9, 98.0], [52.0, 98.0], [52.1, 98.0], [52.2, 98.0], [52.3, 98.0], [52.4, 98.0], [52.5, 98.0], [52.6, 98.0], [52.7, 98.0], [52.8, 98.0], [52.9, 98.0], [53.0, 98.0], [53.1, 98.0], [53.2, 98.0], [53.3, 98.0], [53.4, 98.0], [53.5, 99.0], [53.6, 99.0], [53.7, 99.0], [53.8, 99.0], [53.9, 99.0], [54.0, 99.0], [54.1, 99.0], [54.2, 99.0], [54.3, 99.0], [54.4, 99.0], [54.5, 99.0], [54.6, 99.0], [54.7, 99.0], [54.8, 99.0], [54.9, 99.0], [55.0, 99.0], [55.1, 99.0], [55.2, 99.0], [55.3, 99.0], [55.4, 99.0], [55.5, 99.0], [55.6, 100.0], [55.7, 100.0], [55.8, 100.0], [55.9, 100.0], [56.0, 100.0], [56.1, 100.0], [56.2, 100.0], [56.3, 100.0], [56.4, 100.0], [56.5, 100.0], [56.6, 100.0], [56.7, 100.0], [56.8, 100.0], [56.9, 100.0], [57.0, 100.0], [57.1, 100.0], [57.2, 101.0], [57.3, 101.0], [57.4, 101.0], [57.5, 101.0], [57.6, 101.0], [57.7, 101.0], [57.8, 101.0], [57.9, 101.0], [58.0, 101.0], [58.1, 101.0], [58.2, 101.0], [58.3, 101.0], [58.4, 101.0], [58.5, 101.0], [58.6, 101.0], [58.7, 101.0], [58.8, 101.0], [58.9, 102.0], [59.0, 102.0], [59.1, 102.0], [59.2, 102.0], [59.3, 102.0], [59.4, 102.0], [59.5, 102.0], [59.6, 102.0], [59.7, 102.0], [59.8, 102.0], [59.9, 102.0], [60.0, 102.0], [60.1, 102.0], [60.2, 103.0], [60.3, 103.0], [60.4, 103.0], [60.5, 103.0], [60.6, 103.0], [60.7, 103.0], [60.8, 103.0], [60.9, 103.0], [61.0, 103.0], [61.1, 103.0], [61.2, 103.0], [61.3, 103.0], [61.4, 103.0], [61.5, 103.0], [61.6, 103.0], [61.7, 103.0], [61.8, 103.0], [61.9, 103.0], [62.0, 104.0], [62.1, 104.0], [62.2, 104.0], [62.3, 104.0], [62.4, 104.0], [62.5, 104.0], [62.6, 104.0], [62.7, 104.0], [62.8, 104.0], [62.9, 104.0], [63.0, 104.0], [63.1, 104.0], [63.2, 104.0], [63.3, 105.0], [63.4, 105.0], [63.5, 105.0], [63.6, 105.0], [63.7, 105.0], [63.8, 105.0], [63.9, 105.0], [64.0, 105.0], [64.1, 105.0], [64.2, 106.0], [64.3, 106.0], [64.4, 106.0], [64.5, 106.0], [64.6, 106.0], [64.7, 106.0], [64.8, 106.0], [64.9, 106.0], [65.0, 107.0], [65.1, 107.0], [65.2, 107.0], [65.3, 107.0], [65.4, 107.0], [65.5, 107.0], [65.6, 107.0], [65.7, 107.0], [65.8, 107.0], [65.9, 107.0], [66.0, 107.0], [66.1, 108.0], [66.2, 108.0], [66.3, 108.0], [66.4, 108.0], [66.5, 108.0], [66.6, 108.0], [66.7, 109.0], [66.8, 109.0], [66.9, 109.0], [67.0, 109.0], [67.1, 109.0], [67.2, 109.0], [67.3, 109.0], [67.4, 109.0], [67.5, 109.0], [67.6, 109.0], [67.7, 110.0], [67.8, 110.0], [67.9, 110.0], [68.0, 111.0], [68.1, 111.0], [68.2, 111.0], [68.3, 111.0], [68.4, 111.0], [68.5, 111.0], [68.6, 111.0], [68.7, 111.0], [68.8, 111.0], [68.9, 111.0], [69.0, 112.0], [69.1, 112.0], [69.2, 112.0], [69.3, 112.0], [69.4, 113.0], [69.5, 113.0], [69.6, 113.0], [69.7, 113.0], [69.8, 114.0], [69.9, 114.0], [70.0, 114.0], [70.1, 114.0], [70.2, 115.0], [70.3, 115.0], [70.4, 116.0], [70.5, 116.0], [70.6, 116.0], [70.7, 116.0], [70.8, 116.0], [70.9, 116.0], [71.0, 117.0], [71.1, 117.0], [71.2, 117.0], [71.3, 118.0], [71.4, 119.0], [71.5, 119.0], [71.6, 119.0], [71.7, 119.0], [71.8, 119.0], [71.9, 120.0], [72.0, 120.0], [72.1, 120.0], [72.2, 121.0], [72.3, 121.0], [72.4, 123.0], [72.5, 123.0], [72.6, 124.0], [72.7, 124.0], [72.8, 125.0], [72.9, 125.0], [73.0, 127.0], [73.1, 127.0], [73.2, 127.0], [73.3, 128.0], [73.4, 128.0], [73.5, 129.0], [73.6, 129.0], [73.7, 130.0], [73.8, 131.0], [73.9, 131.0], [74.0, 132.0], [74.1, 133.0], [74.2, 133.0], [74.3, 135.0], [74.4, 136.0], [74.5, 136.0], [74.6, 137.0], [74.7, 141.0], [74.8, 143.0], [74.9, 144.0], [75.0, 146.0], [75.1, 148.0], [75.2, 155.0], [75.3, 156.0], [75.4, 160.0], [75.5, 166.0], [75.6, 170.0], [75.7, 174.0], [75.8, 186.0], [75.9, 188.0], [76.0, 209.0], [76.1, 282.0], [76.2, 372.0], [76.3, 376.0], [76.4, 386.0], [76.5, 387.0], [76.6, 394.0], [76.7, 398.0], [76.8, 414.0], [76.9, 416.0], [77.0, 417.0], [77.1, 418.0], [77.2, 419.0], [77.3, 419.0], [77.4, 421.0], [77.5, 422.0], [77.6, 422.0], [77.7, 422.0], [77.8, 424.0], [77.9, 424.0], [78.0, 425.0], [78.1, 425.0], [78.2, 425.0], [78.3, 426.0], [78.4, 427.0], [78.5, 427.0], [78.6, 427.0], [78.7, 427.0], [78.8, 428.0], [78.9, 428.0], [79.0, 429.0], [79.1, 429.0], [79.2, 430.0], [79.3, 430.0], [79.4, 430.0], [79.5, 431.0], [79.6, 431.0], [79.7, 431.0], [79.8, 432.0], [79.9, 432.0], [80.0, 432.0], [80.1, 432.0], [80.2, 432.0], [80.3, 433.0], [80.4, 433.0], [80.5, 433.0], [80.6, 433.0], [80.7, 433.0], [80.8, 434.0], [80.9, 434.0], [81.0, 434.0], [81.1, 434.0], [81.2, 434.0], [81.3, 434.0], [81.4, 435.0], [81.5, 435.0], [81.6, 435.0], [81.7, 435.0], [81.8, 435.0], [81.9, 435.0], [82.0, 436.0], [82.1, 436.0], [82.2, 436.0], [82.3, 436.0], [82.4, 436.0], [82.5, 436.0], [82.6, 437.0], [82.7, 437.0], [82.8, 437.0], [82.9, 437.0], [83.0, 437.0], [83.1, 437.0], [83.2, 437.0], [83.3, 437.0], [83.4, 437.0], [83.5, 438.0], [83.6, 438.0], [83.7, 438.0], [83.8, 438.0], [83.9, 438.0], [84.0, 438.0], [84.1, 438.0], [84.2, 438.0], [84.3, 438.0], [84.4, 439.0], [84.5, 439.0], [84.6, 439.0], [84.7, 439.0], [84.8, 440.0], [84.9, 440.0], [85.0, 440.0], [85.1, 440.0], [85.2, 440.0], [85.3, 440.0], [85.4, 440.0], [85.5, 440.0], [85.6, 441.0], [85.7, 441.0], [85.8, 441.0], [85.9, 441.0], [86.0, 441.0], [86.1, 441.0], [86.2, 441.0], [86.3, 441.0], [86.4, 442.0], [86.5, 442.0], [86.6, 442.0], [86.7, 442.0], [86.8, 442.0], [86.9, 442.0], [87.0, 443.0], [87.1, 443.0], [87.2, 443.0], [87.3, 443.0], [87.4, 443.0], [87.5, 443.0], [87.6, 443.0], [87.7, 443.0], [87.8, 444.0], [87.9, 444.0], [88.0, 444.0], [88.1, 444.0], [88.2, 444.0], [88.3, 445.0], [88.4, 445.0], [88.5, 445.0], [88.6, 445.0], [88.7, 445.0], [88.8, 445.0], [88.9, 446.0], [89.0, 446.0], [89.1, 446.0], [89.2, 447.0], [89.3, 447.0], [89.4, 447.0], [89.5, 447.0], [89.6, 448.0], [89.7, 448.0], [89.8, 449.0], [89.9, 449.0], [90.0, 449.0], [90.1, 450.0], [90.2, 450.0], [90.3, 450.0], [90.4, 452.0], [90.5, 452.0], [90.6, 452.0], [90.7, 452.0], [90.8, 453.0], [90.9, 453.0], [91.0, 454.0], [91.1, 454.0], [91.2, 454.0], [91.3, 455.0], [91.4, 456.0], [91.5, 456.0], [91.6, 457.0], [91.7, 458.0], [91.8, 459.0], [91.9, 459.0], [92.0, 460.0], [92.1, 461.0], [92.2, 462.0], [92.3, 463.0], [92.4, 465.0], [92.5, 467.0], [92.6, 468.0], [92.7, 470.0], [92.8, 473.0], [92.9, 476.0], [93.0, 479.0], [93.1, 483.0], [93.2, 495.0], [93.3, 495.0], [93.4, 508.0], [93.5, 510.0], [93.6, 513.0], [93.7, 520.0], [93.8, 522.0], [93.9, 522.0], [94.0, 533.0], [94.1, 534.0], [94.2, 562.0], [94.3, 605.0], [94.4, 621.0], [94.5, 718.0], [94.6, 726.0], [94.7, 727.0], [94.8, 730.0], [94.9, 736.0], [95.0, 736.0], [95.1, 737.0], [95.2, 740.0], [95.3, 743.0], [95.4, 752.0], [95.5, 753.0], [95.6, 755.0], [95.7, 757.0], [95.8, 765.0], [95.9, 770.0], [96.0, 772.0], [96.1, 773.0], [96.2, 779.0], [96.3, 780.0], [96.4, 785.0], [96.5, 789.0], [96.6, 796.0], [96.7, 802.0], [96.8, 823.0], [96.9, 826.0], [97.0, 869.0], [97.1, 901.0], [97.2, 912.0], [97.3, 921.0], [97.4, 941.0], [97.5, 944.0], [97.6, 952.0], [97.7, 965.0], [97.8, 980.0], [97.9, 992.0], [98.0, 1003.0], [98.1, 1003.0], [98.2, 1029.0], [98.3, 1055.0], [98.4, 1076.0], [98.5, 1110.0], [98.6, 1118.0], [98.7, 1177.0], [98.8, 1212.0], [98.9, 1228.0], [99.0, 1321.0], [99.1, 1356.0], [99.2, 1367.0], [99.3, 1383.0], [99.4, 1428.0], [99.5, 1564.0], [99.6, 1725.0], [99.7, 1742.0], [99.8, 1970.0], [99.9, 2034.0]], "isOverall": false, "label": "getUser", "isController": false}, {"data": [[0.0, 72.0], [0.1, 72.0], [0.2, 73.0], [0.3, 73.0], [0.4, 73.0], [0.5, 73.0], [0.6, 73.0], [0.7, 74.0], [0.8, 74.0], [0.9, 74.0], [1.0, 74.0], [1.1, 74.0], [1.2, 74.0], [1.3, 74.0], [1.4, 74.0], [1.5, 74.0], [1.6, 75.0], [1.7, 75.0], [1.8, 75.0], [1.9, 75.0], [2.0, 75.0], [2.1, 75.0], [2.2, 75.0], [2.3, 75.0], [2.4, 75.0], [2.5, 76.0], [2.6, 76.0], [2.7, 76.0], [2.8, 76.0], [2.9, 76.0], [3.0, 76.0], [3.1, 76.0], [3.2, 76.0], [3.3, 76.0], [3.4, 76.0], [3.5, 76.0], [3.6, 76.0], [3.7, 77.0], [3.8, 77.0], [3.9, 77.0], [4.0, 77.0], [4.1, 77.0], [4.2, 77.0], [4.3, 77.0], [4.4, 77.0], [4.5, 77.0], [4.6, 77.0], [4.7, 77.0], [4.8, 77.0], [4.9, 78.0], [5.0, 78.0], [5.1, 78.0], [5.2, 78.0], [5.3, 78.0], [5.4, 78.0], [5.5, 78.0], [5.6, 78.0], [5.7, 78.0], [5.8, 78.0], [5.9, 78.0], [6.0, 78.0], [6.1, 78.0], [6.2, 78.0], [6.3, 78.0], [6.4, 78.0], [6.5, 78.0], [6.6, 78.0], [6.7, 78.0], [6.8, 78.0], [6.9, 78.0], [7.0, 78.0], [7.1, 78.0], [7.2, 78.0], [7.3, 78.0], [7.4, 79.0], [7.5, 79.0], [7.6, 79.0], [7.7, 79.0], [7.8, 79.0], [7.9, 79.0], [8.0, 79.0], [8.1, 79.0], [8.2, 79.0], [8.3, 79.0], [8.4, 79.0], [8.5, 79.0], [8.6, 79.0], [8.7, 79.0], [8.8, 79.0], [8.9, 79.0], [9.0, 79.0], [9.1, 79.0], [9.2, 79.0], [9.3, 79.0], [9.4, 79.0], [9.5, 79.0], [9.6, 79.0], [9.7, 80.0], [9.8, 80.0], [9.9, 80.0], [10.0, 80.0], [10.1, 80.0], [10.2, 80.0], [10.3, 80.0], [10.4, 80.0], [10.5, 80.0], [10.6, 80.0], [10.7, 80.0], [10.8, 80.0], [10.9, 80.0], [11.0, 80.0], [11.1, 80.0], [11.2, 80.0], [11.3, 80.0], [11.4, 80.0], [11.5, 80.0], [11.6, 80.0], [11.7, 80.0], [11.8, 80.0], [11.9, 80.0], [12.0, 80.0], [12.1, 80.0], [12.2, 80.0], [12.3, 80.0], [12.4, 80.0], [12.5, 80.0], [12.6, 81.0], [12.7, 81.0], [12.8, 81.0], [12.9, 81.0], [13.0, 81.0], [13.1, 81.0], [13.2, 81.0], [13.3, 81.0], [13.4, 81.0], [13.5, 81.0], [13.6, 81.0], [13.7, 81.0], [13.8, 81.0], [13.9, 81.0], [14.0, 81.0], [14.1, 81.0], [14.2, 81.0], [14.3, 81.0], [14.4, 81.0], [14.5, 81.0], [14.6, 81.0], [14.7, 81.0], [14.8, 81.0], [14.9, 81.0], [15.0, 81.0], [15.1, 81.0], [15.2, 81.0], [15.3, 81.0], [15.4, 81.0], [15.5, 82.0], [15.6, 82.0], [15.7, 82.0], [15.8, 82.0], [15.9, 82.0], [16.0, 82.0], [16.1, 82.0], [16.2, 82.0], [16.3, 82.0], [16.4, 82.0], [16.5, 82.0], [16.6, 82.0], [16.7, 82.0], [16.8, 82.0], [16.9, 82.0], [17.0, 82.0], [17.1, 82.0], [17.2, 82.0], [17.3, 82.0], [17.4, 82.0], [17.5, 82.0], [17.6, 82.0], [17.7, 82.0], [17.8, 82.0], [17.9, 82.0], [18.0, 82.0], [18.1, 82.0], [18.2, 82.0], [18.3, 82.0], [18.4, 82.0], [18.5, 82.0], [18.6, 82.0], [18.7, 83.0], [18.8, 83.0], [18.9, 83.0], [19.0, 83.0], [19.1, 83.0], [19.2, 83.0], [19.3, 83.0], [19.4, 83.0], [19.5, 83.0], [19.6, 83.0], [19.7, 83.0], [19.8, 83.0], [19.9, 83.0], [20.0, 83.0], [20.1, 83.0], [20.2, 83.0], [20.3, 83.0], [20.4, 83.0], [20.5, 83.0], [20.6, 83.0], [20.7, 83.0], [20.8, 83.0], [20.9, 83.0], [21.0, 83.0], [21.1, 84.0], [21.2, 84.0], [21.3, 84.0], [21.4, 84.0], [21.5, 84.0], [21.6, 84.0], [21.7, 84.0], [21.8, 84.0], [21.9, 84.0], [22.0, 84.0], [22.1, 84.0], [22.2, 84.0], [22.3, 84.0], [22.4, 84.0], [22.5, 84.0], [22.6, 84.0], [22.7, 84.0], [22.8, 84.0], [22.9, 84.0], [23.0, 84.0], [23.1, 84.0], [23.2, 84.0], [23.3, 84.0], [23.4, 84.0], [23.5, 84.0], [23.6, 84.0], [23.7, 84.0], [23.8, 84.0], [23.9, 84.0], [24.0, 85.0], [24.1, 85.0], [24.2, 85.0], [24.3, 85.0], [24.4, 85.0], [24.5, 85.0], [24.6, 85.0], [24.7, 85.0], [24.8, 85.0], [24.9, 85.0], [25.0, 85.0], [25.1, 85.0], [25.2, 85.0], [25.3, 85.0], [25.4, 85.0], [25.5, 85.0], [25.6, 85.0], [25.7, 85.0], [25.8, 85.0], [25.9, 85.0], [26.0, 86.0], [26.1, 86.0], [26.2, 86.0], [26.3, 86.0], [26.4, 86.0], [26.5, 86.0], [26.6, 86.0], [26.7, 86.0], [26.8, 86.0], [26.9, 86.0], [27.0, 86.0], [27.1, 86.0], [27.2, 86.0], [27.3, 86.0], [27.4, 86.0], [27.5, 86.0], [27.6, 86.0], [27.7, 86.0], [27.8, 86.0], [27.9, 86.0], [28.0, 86.0], [28.1, 86.0], [28.2, 86.0], [28.3, 86.0], [28.4, 86.0], [28.5, 86.0], [28.6, 87.0], [28.7, 87.0], [28.8, 87.0], [28.9, 87.0], [29.0, 87.0], [29.1, 87.0], [29.2, 87.0], [29.3, 87.0], [29.4, 87.0], [29.5, 87.0], [29.6, 87.0], [29.7, 87.0], [29.8, 87.0], [29.9, 87.0], [30.0, 87.0], [30.1, 87.0], [30.2, 87.0], [30.3, 87.0], [30.4, 87.0], [30.5, 87.0], [30.6, 87.0], [30.7, 87.0], [30.8, 87.0], [30.9, 88.0], [31.0, 88.0], [31.1, 88.0], [31.2, 88.0], [31.3, 88.0], [31.4, 88.0], [31.5, 88.0], [31.6, 88.0], [31.7, 88.0], [31.8, 88.0], [31.9, 88.0], [32.0, 88.0], [32.1, 88.0], [32.2, 88.0], [32.3, 88.0], [32.4, 88.0], [32.5, 88.0], [32.6, 88.0], [32.7, 88.0], [32.8, 88.0], [32.9, 88.0], [33.0, 88.0], [33.1, 89.0], [33.2, 89.0], [33.3, 89.0], [33.4, 89.0], [33.5, 89.0], [33.6, 89.0], [33.7, 89.0], [33.8, 89.0], [33.9, 89.0], [34.0, 89.0], [34.1, 89.0], [34.2, 89.0], [34.3, 89.0], [34.4, 89.0], [34.5, 89.0], [34.6, 89.0], [34.7, 89.0], [34.8, 89.0], [34.9, 89.0], [35.0, 89.0], [35.1, 89.0], [35.2, 89.0], [35.3, 89.0], [35.4, 89.0], [35.5, 89.0], [35.6, 90.0], [35.7, 90.0], [35.8, 90.0], [35.9, 90.0], [36.0, 90.0], [36.1, 90.0], [36.2, 90.0], [36.3, 90.0], [36.4, 90.0], [36.5, 90.0], [36.6, 90.0], [36.7, 90.0], [36.8, 90.0], [36.9, 90.0], [37.0, 90.0], [37.1, 90.0], [37.2, 90.0], [37.3, 91.0], [37.4, 91.0], [37.5, 91.0], [37.6, 91.0], [37.7, 91.0], [37.8, 91.0], [37.9, 91.0], [38.0, 91.0], [38.1, 91.0], [38.2, 91.0], [38.3, 91.0], [38.4, 91.0], [38.5, 91.0], [38.6, 91.0], [38.7, 91.0], [38.8, 91.0], [38.9, 91.0], [39.0, 91.0], [39.1, 91.0], [39.2, 91.0], [39.3, 91.0], [39.4, 91.0], [39.5, 91.0], [39.6, 91.0], [39.7, 92.0], [39.8, 92.0], [39.9, 92.0], [40.0, 92.0], [40.1, 92.0], [40.2, 92.0], [40.3, 92.0], [40.4, 92.0], [40.5, 92.0], [40.6, 92.0], [40.7, 92.0], [40.8, 92.0], [40.9, 92.0], [41.0, 92.0], [41.1, 92.0], [41.2, 92.0], [41.3, 92.0], [41.4, 92.0], [41.5, 92.0], [41.6, 92.0], [41.7, 93.0], [41.8, 93.0], [41.9, 93.0], [42.0, 93.0], [42.1, 93.0], [42.2, 93.0], [42.3, 93.0], [42.4, 93.0], [42.5, 93.0], [42.6, 93.0], [42.7, 93.0], [42.8, 93.0], [42.9, 93.0], [43.0, 93.0], [43.1, 93.0], [43.2, 93.0], [43.3, 93.0], [43.4, 93.0], [43.5, 93.0], [43.6, 93.0], [43.7, 93.0], [43.8, 93.0], [43.9, 94.0], [44.0, 94.0], [44.1, 94.0], [44.2, 94.0], [44.3, 94.0], [44.4, 94.0], [44.5, 94.0], [44.6, 94.0], [44.7, 94.0], [44.8, 94.0], [44.9, 94.0], [45.0, 94.0], [45.1, 94.0], [45.2, 94.0], [45.3, 94.0], [45.4, 94.0], [45.5, 94.0], [45.6, 94.0], [45.7, 95.0], [45.8, 95.0], [45.9, 95.0], [46.0, 95.0], [46.1, 95.0], [46.2, 95.0], [46.3, 95.0], [46.4, 95.0], [46.5, 95.0], [46.6, 95.0], [46.7, 95.0], [46.8, 95.0], [46.9, 95.0], [47.0, 95.0], [47.1, 95.0], [47.2, 95.0], [47.3, 95.0], [47.4, 95.0], [47.5, 95.0], [47.6, 96.0], [47.7, 96.0], [47.8, 96.0], [47.9, 96.0], [48.0, 96.0], [48.1, 96.0], [48.2, 96.0], [48.3, 96.0], [48.4, 96.0], [48.5, 96.0], [48.6, 96.0], [48.7, 96.0], [48.8, 96.0], [48.9, 96.0], [49.0, 96.0], [49.1, 97.0], [49.2, 97.0], [49.3, 97.0], [49.4, 97.0], [49.5, 97.0], [49.6, 97.0], [49.7, 97.0], [49.8, 97.0], [49.9, 97.0], [50.0, 97.0], [50.1, 97.0], [50.2, 97.0], [50.3, 97.0], [50.4, 97.0], [50.5, 97.0], [50.6, 97.0], [50.7, 97.0], [50.8, 97.0], [50.9, 97.0], [51.0, 98.0], [51.1, 98.0], [51.2, 98.0], [51.3, 98.0], [51.4, 98.0], [51.5, 98.0], [51.6, 98.0], [51.7, 98.0], [51.8, 98.0], [51.9, 98.0], [52.0, 98.0], [52.1, 99.0], [52.2, 99.0], [52.3, 99.0], [52.4, 99.0], [52.5, 99.0], [52.6, 99.0], [52.7, 99.0], [52.8, 99.0], [52.9, 99.0], [53.0, 99.0], [53.1, 99.0], [53.2, 99.0], [53.3, 99.0], [53.4, 99.0], [53.5, 100.0], [53.6, 100.0], [53.7, 100.0], [53.8, 100.0], [53.9, 100.0], [54.0, 100.0], [54.1, 100.0], [54.2, 100.0], [54.3, 100.0], [54.4, 100.0], [54.5, 100.0], [54.6, 100.0], [54.7, 101.0], [54.8, 101.0], [54.9, 101.0], [55.0, 101.0], [55.1, 102.0], [55.2, 102.0], [55.3, 102.0], [55.4, 102.0], [55.5, 102.0], [55.6, 102.0], [55.7, 102.0], [55.8, 102.0], [55.9, 102.0], [56.0, 102.0], [56.1, 102.0], [56.2, 103.0], [56.3, 103.0], [56.4, 103.0], [56.5, 103.0], [56.6, 103.0], [56.7, 103.0], [56.8, 103.0], [56.9, 103.0], [57.0, 103.0], [57.1, 104.0], [57.2, 104.0], [57.3, 104.0], [57.4, 104.0], [57.5, 104.0], [57.6, 104.0], [57.7, 105.0], [57.8, 105.0], [57.9, 105.0], [58.0, 105.0], [58.1, 106.0], [58.2, 106.0], [58.3, 106.0], [58.4, 106.0], [58.5, 106.0], [58.6, 106.0], [58.7, 106.0], [58.8, 106.0], [58.9, 107.0], [59.0, 107.0], [59.1, 107.0], [59.2, 107.0], [59.3, 107.0], [59.4, 107.0], [59.5, 107.0], [59.6, 108.0], [59.7, 108.0], [59.8, 108.0], [59.9, 108.0], [60.0, 108.0], [60.1, 109.0], [60.2, 109.0], [60.3, 109.0], [60.4, 109.0], [60.5, 109.0], [60.6, 109.0], [60.7, 110.0], [60.8, 110.0], [60.9, 110.0], [61.0, 110.0], [61.1, 111.0], [61.2, 111.0], [61.3, 111.0], [61.4, 111.0], [61.5, 111.0], [61.6, 111.0], [61.7, 111.0], [61.8, 112.0], [61.9, 112.0], [62.0, 112.0], [62.1, 114.0], [62.2, 115.0], [62.3, 115.0], [62.4, 115.0], [62.5, 115.0], [62.6, 116.0], [62.7, 118.0], [62.8, 118.0], [62.9, 120.0], [63.0, 120.0], [63.1, 120.0], [63.2, 120.0], [63.3, 122.0], [63.4, 122.0], [63.5, 122.0], [63.6, 122.0], [63.7, 123.0], [63.8, 123.0], [63.9, 124.0], [64.0, 125.0], [64.1, 126.0], [64.2, 126.0], [64.3, 127.0], [64.4, 127.0], [64.5, 127.0], [64.6, 128.0], [64.7, 129.0], [64.8, 129.0], [64.9, 129.0], [65.0, 129.0], [65.1, 130.0], [65.2, 130.0], [65.3, 131.0], [65.4, 131.0], [65.5, 131.0], [65.6, 132.0], [65.7, 133.0], [65.8, 133.0], [65.9, 134.0], [66.0, 134.0], [66.1, 135.0], [66.2, 136.0], [66.3, 138.0], [66.4, 138.0], [66.5, 140.0], [66.6, 143.0], [66.7, 144.0], [66.8, 145.0], [66.9, 146.0], [67.0, 146.0], [67.1, 148.0], [67.2, 148.0], [67.3, 160.0], [67.4, 161.0], [67.5, 164.0], [67.6, 166.0], [67.7, 176.0], [67.8, 180.0], [67.9, 217.0], [68.0, 231.0], [68.1, 235.0], [68.2, 241.0], [68.3, 252.0], [68.4, 260.0], [68.5, 260.0], [68.6, 261.0], [68.7, 266.0], [68.8, 274.0], [68.9, 276.0], [69.0, 278.0], [69.1, 282.0], [69.2, 287.0], [69.3, 301.0], [69.4, 301.0], [69.5, 302.0], [69.6, 316.0], [69.7, 317.0], [69.8, 325.0], [69.9, 333.0], [70.0, 334.0], [70.1, 337.0], [70.2, 344.0], [70.3, 346.0], [70.4, 355.0], [70.5, 359.0], [70.6, 383.0], [70.7, 397.0], [70.8, 426.0], [70.9, 427.0], [71.0, 429.0], [71.1, 429.0], [71.2, 430.0], [71.3, 431.0], [71.4, 432.0], [71.5, 434.0], [71.6, 434.0], [71.7, 434.0], [71.8, 435.0], [71.9, 435.0], [72.0, 436.0], [72.1, 437.0], [72.2, 437.0], [72.3, 437.0], [72.4, 437.0], [72.5, 438.0], [72.6, 438.0], [72.7, 438.0], [72.8, 439.0], [72.9, 440.0], [73.0, 441.0], [73.1, 441.0], [73.2, 442.0], [73.3, 442.0], [73.4, 442.0], [73.5, 442.0], [73.6, 443.0], [73.7, 444.0], [73.8, 444.0], [73.9, 445.0], [74.0, 445.0], [74.1, 446.0], [74.2, 446.0], [74.3, 446.0], [74.4, 447.0], [74.5, 447.0], [74.6, 447.0], [74.7, 449.0], [74.8, 450.0], [74.9, 450.0], [75.0, 451.0], [75.1, 452.0], [75.2, 452.0], [75.3, 454.0], [75.4, 455.0], [75.5, 456.0], [75.6, 457.0], [75.7, 458.0], [75.8, 459.0], [75.9, 459.0], [76.0, 460.0], [76.1, 461.0], [76.2, 463.0], [76.3, 463.0], [76.4, 466.0], [76.5, 466.0], [76.6, 466.0], [76.7, 466.0], [76.8, 467.0], [76.9, 467.0], [77.0, 469.0], [77.1, 469.0], [77.2, 470.0], [77.3, 472.0], [77.4, 476.0], [77.5, 478.0], [77.6, 481.0], [77.7, 481.0], [77.8, 484.0], [77.9, 486.0], [78.0, 496.0], [78.1, 497.0], [78.2, 501.0], [78.3, 508.0], [78.4, 514.0], [78.5, 533.0], [78.6, 544.0], [78.7, 547.0], [78.8, 549.0], [78.9, 556.0], [79.0, 563.0], [79.1, 566.0], [79.2, 570.0], [79.3, 571.0], [79.4, 577.0], [79.5, 579.0], [79.6, 581.0], [79.7, 584.0], [79.8, 596.0], [79.9, 599.0], [80.0, 604.0], [80.1, 604.0], [80.2, 606.0], [80.3, 610.0], [80.4, 613.0], [80.5, 616.0], [80.6, 620.0], [80.7, 622.0], [80.8, 632.0], [80.9, 637.0], [81.0, 646.0], [81.1, 647.0], [81.2, 652.0], [81.3, 655.0], [81.4, 658.0], [81.5, 660.0], [81.6, 662.0], [81.7, 662.0], [81.8, 664.0], [81.9, 664.0], [82.0, 665.0], [82.1, 665.0], [82.2, 667.0], [82.3, 671.0], [82.4, 672.0], [82.5, 675.0], [82.6, 678.0], [82.7, 679.0], [82.8, 681.0], [82.9, 684.0], [83.0, 687.0], [83.1, 693.0], [83.2, 696.0], [83.3, 697.0], [83.4, 700.0], [83.5, 704.0], [83.6, 706.0], [83.7, 712.0], [83.8, 724.0], [83.9, 727.0], [84.0, 742.0], [84.1, 745.0], [84.2, 749.0], [84.3, 750.0], [84.4, 755.0], [84.5, 757.0], [84.6, 760.0], [84.7, 761.0], [84.8, 766.0], [84.9, 771.0], [85.0, 774.0], [85.1, 774.0], [85.2, 780.0], [85.3, 781.0], [85.4, 783.0], [85.5, 783.0], [85.6, 786.0], [85.7, 788.0], [85.8, 789.0], [85.9, 789.0], [86.0, 790.0], [86.1, 797.0], [86.2, 799.0], [86.3, 800.0], [86.4, 805.0], [86.5, 805.0], [86.6, 808.0], [86.7, 809.0], [86.8, 813.0], [86.9, 813.0], [87.0, 817.0], [87.1, 818.0], [87.2, 819.0], [87.3, 820.0], [87.4, 825.0], [87.5, 826.0], [87.6, 834.0], [87.7, 840.0], [87.8, 848.0], [87.9, 850.0], [88.0, 856.0], [88.1, 856.0], [88.2, 860.0], [88.3, 865.0], [88.4, 888.0], [88.5, 895.0], [88.6, 900.0], [88.7, 905.0], [88.8, 937.0], [88.9, 943.0], [89.0, 953.0], [89.1, 955.0], [89.2, 961.0], [89.3, 965.0], [89.4, 967.0], [89.5, 970.0], [89.6, 993.0], [89.7, 1004.0], [89.8, 1016.0], [89.9, 1031.0], [90.0, 1046.0], [90.1, 1047.0], [90.2, 1051.0], [90.3, 1062.0], [90.4, 1069.0], [90.5, 1069.0], [90.6, 1075.0], [90.7, 1086.0], [90.8, 1090.0], [90.9, 1092.0], [91.0, 1099.0], [91.1, 1100.0], [91.2, 1102.0], [91.3, 1102.0], [91.4, 1107.0], [91.5, 1111.0], [91.6, 1117.0], [91.7, 1120.0], [91.8, 1121.0], [91.9, 1125.0], [92.0, 1131.0], [92.1, 1132.0], [92.2, 1136.0], [92.3, 1148.0], [92.4, 1151.0], [92.5, 1154.0], [92.6, 1164.0], [92.7, 1164.0], [92.8, 1178.0], [92.9, 1185.0], [93.0, 1185.0], [93.1, 1186.0], [93.2, 1201.0], [93.3, 1206.0], [93.4, 1210.0], [93.5, 1220.0], [93.6, 1221.0], [93.7, 1226.0], [93.8, 1234.0], [93.9, 1235.0], [94.0, 1258.0], [94.1, 1262.0], [94.2, 1275.0], [94.3, 1277.0], [94.4, 1282.0], [94.5, 1282.0], [94.6, 1285.0], [94.7, 1288.0], [94.8, 1294.0], [94.9, 1298.0], [95.0, 1308.0], [95.1, 1309.0], [95.2, 1314.0], [95.3, 1321.0], [95.4, 1326.0], [95.5, 1332.0], [95.6, 1340.0], [95.7, 1343.0], [95.8, 1350.0], [95.9, 1361.0], [96.0, 1366.0], [96.1, 1387.0], [96.2, 1400.0], [96.3, 1403.0], [96.4, 1407.0], [96.5, 1413.0], [96.6, 1414.0], [96.7, 1417.0], [96.8, 1425.0], [96.9, 1426.0], [97.0, 1446.0], [97.1, 1457.0], [97.2, 1466.0], [97.3, 1472.0], [97.4, 1482.0], [97.5, 1525.0], [97.6, 1536.0], [97.7, 1539.0], [97.8, 1551.0], [97.9, 1555.0], [98.0, 1568.0], [98.1, 1583.0], [98.2, 1592.0], [98.3, 1600.0], [98.4, 1626.0], [98.5, 1627.0], [98.6, 1646.0], [98.7, 1662.0], [98.8, 1707.0], [98.9, 1708.0], [99.0, 1712.0], [99.1, 1718.0], [99.2, 1761.0], [99.3, 1774.0], [99.4, 1817.0], [99.5, 1819.0], [99.6, 1852.0], [99.7, 1870.0], [99.8, 2110.0], [99.9, 2206.0]], "isOverall": false, "label": "getListOfUser", "isController": false}, {"data": [[0.0, 614.0], [0.1, 614.0], [0.2, 618.0], [0.3, 619.0], [0.4, 626.0], [0.5, 626.0], [0.6, 635.0], [0.7, 641.0], [0.8, 651.0], [0.9, 652.0], [1.0, 671.0], [1.1, 672.0], [1.2, 705.0], [1.3, 738.0], [1.4, 756.0], [1.5, 759.0], [1.6, 867.0], [1.7, 902.0], [1.8, 985.0], [1.9, 990.0], [2.0, 1051.0], [2.1, 1068.0], [2.2, 1177.0], [2.3, 1181.0], [2.4, 1208.0], [2.5, 1264.0], [2.6, 1272.0], [2.7, 1303.0], [2.8, 1309.0], [2.9, 1319.0], [3.0, 1322.0], [3.1, 1345.0], [3.2, 1347.0], [3.3, 1353.0], [3.4, 1353.0], [3.5, 1375.0], [3.6, 1379.0], [3.7, 1397.0], [3.8, 1399.0], [3.9, 1462.0], [4.0, 1463.0], [4.1, 1478.0], [4.2, 1478.0], [4.3, 1503.0], [4.4, 1504.0], [4.5, 1519.0], [4.6, 1531.0], [4.7, 1547.0], [4.8, 1548.0], [4.9, 1561.0], [5.0, 1562.0], [5.1, 1567.0], [5.2, 1567.0], [5.3, 1570.0], [5.4, 1574.0], [5.5, 1575.0], [5.6, 1579.0], [5.7, 1606.0], [5.8, 1607.0], [5.9, 1631.0], [6.0, 1640.0], [6.1, 1649.0], [6.2, 1654.0], [6.3, 1657.0], [6.4, 1662.0], [6.5, 1665.0], [6.6, 1673.0], [6.7, 1676.0], [6.8, 1676.0], [6.9, 1682.0], [7.0, 1686.0], [7.1, 1687.0], [7.2, 1692.0], [7.3, 1692.0], [7.4, 1730.0], [7.5, 1735.0], [7.6, 1738.0], [7.7, 1738.0], [7.8, 1743.0], [7.9, 1746.0], [8.0, 1778.0], [8.1, 1796.0], [8.2, 1825.0], [8.3, 1845.0], [8.4, 1898.0], [8.5, 1918.0], [8.6, 1933.0], [8.7, 1938.0], [8.8, 1952.0], [8.9, 1954.0], [9.0, 1970.0], [9.1, 1972.0], [9.2, 2046.0], [9.3, 2047.0], [9.4, 2073.0], [9.5, 2084.0], [9.6, 2087.0], [9.7, 2091.0], [9.8, 2097.0], [9.9, 2101.0], [10.0, 2118.0], [10.1, 2120.0], [10.2, 2122.0], [10.3, 2132.0], [10.4, 2143.0], [10.5, 2149.0], [10.6, 2157.0], [10.7, 2157.0], [10.8, 2159.0], [10.9, 2166.0], [11.0, 2170.0], [11.1, 2170.0], [11.2, 2246.0], [11.3, 2256.0], [11.4, 2281.0], [11.5, 2310.0], [11.6, 2365.0], [11.7, 2391.0], [11.8, 2397.0], [11.9, 2399.0], [12.0, 2408.0], [12.1, 2420.0], [12.2, 2422.0], [12.3, 2425.0], [12.4, 2465.0], [12.5, 2467.0], [12.6, 2481.0], [12.7, 2499.0], [12.8, 2507.0], [12.9, 2518.0], [13.0, 2538.0], [13.1, 2540.0], [13.2, 2556.0], [13.3, 2562.0], [13.4, 2627.0], [13.5, 2628.0], [13.6, 2664.0], [13.7, 2669.0], [13.8, 2686.0], [13.9, 2688.0], [14.0, 2689.0], [14.1, 2699.0], [14.2, 2712.0], [14.3, 2714.0], [14.4, 2717.0], [14.5, 2720.0], [14.6, 2729.0], [14.7, 2736.0], [14.8, 2741.0], [14.9, 2744.0], [15.0, 2755.0], [15.1, 2764.0], [15.2, 2795.0], [15.3, 2817.0], [15.4, 2820.0], [15.5, 2823.0], [15.6, 2838.0], [15.7, 2844.0], [15.8, 2862.0], [15.9, 2884.0], [16.0, 2913.0], [16.1, 2914.0], [16.2, 2941.0], [16.3, 2952.0], [16.4, 2969.0], [16.5, 2972.0], [16.6, 2988.0], [16.7, 2997.0], [16.8, 3010.0], [16.9, 3014.0], [17.0, 3019.0], [17.1, 3024.0], [17.2, 3036.0], [17.3, 3038.0], [17.4, 3060.0], [17.5, 3069.0], [17.6, 3135.0], [17.7, 3185.0], [17.8, 3219.0], [17.9, 3226.0], [18.0, 3250.0], [18.1, 3251.0], [18.2, 3271.0], [18.3, 3273.0], [18.4, 3296.0], [18.5, 3320.0], [18.6, 3324.0], [18.7, 3331.0], [18.8, 3346.0], [18.9, 3381.0], [19.0, 3391.0], [19.1, 3416.0], [19.2, 3440.0], [19.3, 3440.0], [19.4, 3445.0], [19.5, 3456.0], [19.6, 3475.0], [19.7, 3477.0], [19.8, 3482.0], [19.9, 3488.0], [20.0, 3506.0], [20.1, 3526.0], [20.2, 3552.0], [20.3, 3556.0], [20.4, 3564.0], [20.5, 3569.0], [20.6, 3584.0], [20.7, 3597.0], [20.8, 3619.0], [20.9, 3627.0], [21.0, 3678.0], [21.1, 3700.0], [21.2, 3716.0], [21.3, 3731.0], [21.4, 3739.0], [21.5, 3740.0], [21.6, 3754.0], [21.7, 3761.0], [21.8, 3766.0], [21.9, 3771.0], [22.0, 3777.0], [22.1, 3789.0], [22.2, 3804.0], [22.3, 3811.0], [22.4, 3830.0], [22.5, 3846.0], [22.6, 3873.0], [22.7, 3881.0], [22.8, 3884.0], [22.9, 3889.0], [23.0, 3904.0], [23.1, 3910.0], [23.2, 3917.0], [23.3, 3927.0], [23.4, 3969.0], [23.5, 3970.0], [23.6, 3976.0], [23.7, 3983.0], [23.8, 3990.0], [23.9, 3996.0], [24.0, 4009.0], [24.1, 4017.0], [24.2, 4024.0], [24.3, 4026.0], [24.4, 4053.0], [24.5, 4054.0], [24.6, 4081.0], [24.7, 4095.0], [24.8, 4104.0], [24.9, 4133.0], [25.0, 4138.0], [25.1, 4147.0], [25.2, 4160.0], [25.3, 4166.0], [25.4, 4178.0], [25.5, 4179.0], [25.6, 4183.0], [25.7, 4192.0], [25.8, 4223.0], [25.9, 4226.0], [26.0, 4253.0], [26.1, 4255.0], [26.2, 4276.0], [26.3, 4283.0], [26.4, 4285.0], [26.5, 4288.0], [26.6, 4296.0], [26.7, 4297.0], [26.8, 4299.0], [26.9, 4300.0], [27.0, 4316.0], [27.1, 4316.0], [27.2, 4324.0], [27.3, 4325.0], [27.4, 4337.0], [27.5, 4343.0], [27.6, 4352.0], [27.7, 4364.0], [27.8, 4368.0], [27.9, 4372.0], [28.0, 4379.0], [28.1, 4379.0], [28.2, 4393.0], [28.3, 4395.0], [28.4, 4407.0], [28.5, 4410.0], [28.6, 4417.0], [28.7, 4419.0], [28.8, 4436.0], [28.9, 4437.0], [29.0, 4440.0], [29.1, 4452.0], [29.2, 4456.0], [29.3, 4459.0], [29.4, 4471.0], [29.5, 4476.0], [29.6, 4487.0], [29.7, 4489.0], [29.8, 4492.0], [29.9, 4493.0], [30.0, 4503.0], [30.1, 4504.0], [30.2, 4504.0], [30.3, 4507.0], [30.4, 4526.0], [30.5, 4556.0], [30.6, 4560.0], [30.7, 4565.0], [30.8, 4578.0], [30.9, 4583.0], [31.0, 4583.0], [31.1, 4596.0], [31.2, 4614.0], [31.3, 4617.0], [31.4, 4636.0], [31.5, 4645.0], [31.6, 4648.0], [31.7, 4656.0], [31.8, 4683.0], [31.9, 4686.0], [32.0, 4696.0], [32.1, 4707.0], [32.2, 4713.0], [32.3, 4714.0], [32.4, 4730.0], [32.5, 4733.0], [32.6, 4739.0], [32.7, 4739.0], [32.8, 4760.0], [32.9, 4761.0], [33.0, 4776.0], [33.1, 4779.0], [33.2, 4782.0], [33.3, 4784.0], [33.4, 4794.0], [33.5, 4795.0], [33.6, 4796.0], [33.7, 4797.0], [33.8, 4805.0], [33.9, 4808.0], [34.0, 4817.0], [34.1, 4819.0], [34.2, 4825.0], [34.3, 4832.0], [34.4, 4833.0], [34.5, 4836.0], [34.6, 4837.0], [34.7, 4844.0], [34.8, 4852.0], [34.9, 4855.0], [35.0, 4856.0], [35.1, 4870.0], [35.2, 4875.0], [35.3, 4880.0], [35.4, 4886.0], [35.5, 4907.0], [35.6, 4915.0], [35.7, 4923.0], [35.8, 4927.0], [35.9, 4930.0], [36.0, 4931.0], [36.1, 4935.0], [36.2, 4936.0], [36.3, 4940.0], [36.4, 4941.0], [36.5, 4944.0], [36.6, 4945.0], [36.7, 4952.0], [36.8, 4954.0], [36.9, 4965.0], [37.0, 4967.0], [37.1, 4971.0], [37.2, 4982.0], [37.3, 4989.0], [37.4, 5000.0], [37.5, 5028.0], [37.6, 5030.0], [37.7, 5034.0], [37.8, 5039.0], [37.9, 5041.0], [38.0, 5042.0], [38.1, 5045.0], [38.2, 5046.0], [38.3, 5058.0], [38.4, 5062.0], [38.5, 5064.0], [38.6, 5066.0], [38.7, 5070.0], [38.8, 5070.0], [38.9, 5079.0], [39.0, 5080.0], [39.1, 5084.0], [39.2, 5088.0], [39.3, 5103.0], [39.4, 5107.0], [39.5, 5120.0], [39.6, 5121.0], [39.7, 5135.0], [39.8, 5136.0], [39.9, 5150.0], [40.0, 5151.0], [40.1, 5158.0], [40.2, 5159.0], [40.3, 5161.0], [40.4, 5167.0], [40.5, 5176.0], [40.6, 5179.0], [40.7, 5184.0], [40.8, 5185.0], [40.9, 5209.0], [41.0, 5213.0], [41.1, 5217.0], [41.2, 5224.0], [41.3, 5231.0], [41.4, 5235.0], [41.5, 5248.0], [41.6, 5249.0], [41.7, 5262.0], [41.8, 5265.0], [41.9, 5276.0], [42.0, 5279.0], [42.1, 5283.0], [42.2, 5296.0], [42.3, 5301.0], [42.4, 5306.0], [42.5, 5315.0], [42.6, 5315.0], [42.7, 5352.0], [42.8, 5353.0], [42.9, 5357.0], [43.0, 5365.0], [43.1, 5395.0], [43.2, 5418.0], [43.3, 5437.0], [43.4, 5438.0], [43.5, 5457.0], [43.6, 5460.0], [43.7, 5475.0], [43.8, 5480.0], [43.9, 5485.0], [44.0, 5493.0], [44.1, 5497.0], [44.2, 5497.0], [44.3, 5506.0], [44.4, 5513.0], [44.5, 5520.0], [44.6, 5522.0], [44.7, 5536.0], [44.8, 5538.0], [44.9, 5539.0], [45.0, 5550.0], [45.1, 5565.0], [45.2, 5573.0], [45.3, 5578.0], [45.4, 5578.0], [45.5, 5592.0], [45.6, 5594.0], [45.7, 5601.0], [45.8, 5601.0], [45.9, 5616.0], [46.0, 5626.0], [46.1, 5632.0], [46.2, 5634.0], [46.3, 5663.0], [46.4, 5669.0], [46.5, 5704.0], [46.6, 5709.0], [46.7, 5732.0], [46.8, 5734.0], [46.9, 5749.0], [47.0, 5761.0], [47.1, 5769.0], [47.2, 5774.0], [47.3, 5788.0], [47.4, 5789.0], [47.5, 5805.0], [47.6, 5819.0], [47.7, 5838.0], [47.8, 5856.0], [47.9, 5877.0], [48.0, 5887.0], [48.1, 5892.0], [48.2, 5893.0], [48.3, 5909.0], [48.4, 5910.0], [48.5, 5940.0], [48.6, 5943.0], [48.7, 5949.0], [48.8, 5952.0], [48.9, 5973.0], [49.0, 5978.0], [49.1, 5988.0], [49.2, 5998.0], [49.3, 6004.0], [49.4, 6007.0], [49.5, 6010.0], [49.6, 6028.0], [49.7, 6034.0], [49.8, 6034.0], [49.9, 6037.0], [50.0, 6038.0], [50.1, 6050.0], [50.2, 6052.0], [50.3, 6068.0], [50.4, 6071.0], [50.5, 6074.0], [50.6, 6086.0], [50.7, 6096.0], [50.8, 6099.0], [50.9, 6139.0], [51.0, 6139.0], [51.1, 6153.0], [51.2, 6154.0], [51.3, 6161.0], [51.4, 6176.0], [51.5, 6185.0], [51.6, 6186.0], [51.7, 6190.0], [51.8, 6193.0], [51.9, 6209.0], [52.0, 6219.0], [52.1, 6283.0], [52.2, 6284.0], [52.3, 6294.0], [52.4, 6295.0], [52.5, 6306.0], [52.6, 6309.0], [52.7, 6309.0], [52.8, 6310.0], [52.9, 6322.0], [53.0, 6324.0], [53.1, 6354.0], [53.2, 6365.0], [53.3, 6377.0], [53.4, 6385.0], [53.5, 6415.0], [53.6, 6418.0], [53.7, 6422.0], [53.8, 6431.0], [53.9, 6437.0], [54.0, 6438.0], [54.1, 6450.0], [54.2, 6452.0], [54.3, 6453.0], [54.4, 6455.0], [54.5, 6464.0], [54.6, 6466.0], [54.7, 6471.0], [54.8, 6479.0], [54.9, 6483.0], [55.0, 6489.0], [55.1, 6508.0], [55.2, 6523.0], [55.3, 6528.0], [55.4, 6530.0], [55.5, 6552.0], [55.6, 6554.0], [55.7, 6560.0], [55.8, 6565.0], [55.9, 6576.0], [56.0, 6579.0], [56.1, 6583.0], [56.2, 6587.0], [56.3, 6593.0], [56.4, 6594.0], [56.5, 6599.0], [56.6, 6608.0], [56.7, 6617.0], [56.8, 6621.0], [56.9, 6636.0], [57.0, 6650.0], [57.1, 6654.0], [57.2, 6657.0], [57.3, 6668.0], [57.4, 6673.0], [57.5, 6682.0], [57.6, 6685.0], [57.7, 6689.0], [57.8, 6694.0], [57.9, 6697.0], [58.0, 6712.0], [58.1, 6722.0], [58.2, 6723.0], [58.3, 6729.0], [58.4, 6735.0], [58.5, 6739.0], [58.6, 6739.0], [58.7, 6744.0], [58.8, 6745.0], [58.9, 6760.0], [59.0, 6761.0], [59.1, 6765.0], [59.2, 6775.0], [59.3, 6783.0], [59.4, 6789.0], [59.5, 6791.0], [59.6, 6791.0], [59.7, 6793.0], [59.8, 6795.0], [59.9, 6802.0], [60.0, 6802.0], [60.1, 6806.0], [60.2, 6808.0], [60.3, 6810.0], [60.4, 6812.0], [60.5, 6816.0], [60.6, 6818.0], [60.7, 6820.0], [60.8, 6822.0], [60.9, 6825.0], [61.0, 6830.0], [61.1, 6832.0], [61.2, 6832.0], [61.3, 6834.0], [61.4, 6834.0], [61.5, 6834.0], [61.6, 6835.0], [61.7, 6837.0], [61.8, 6841.0], [61.9, 6844.0], [62.0, 6844.0], [62.1, 6848.0], [62.2, 6853.0], [62.3, 6857.0], [62.4, 6857.0], [62.5, 6859.0], [62.6, 6859.0], [62.7, 6865.0], [62.8, 6865.0], [62.9, 6868.0], [63.0, 6871.0], [63.1, 6880.0], [63.2, 6880.0], [63.3, 6886.0], [63.4, 6887.0], [63.5, 6895.0], [63.6, 6899.0], [63.7, 6900.0], [63.8, 6907.0], [63.9, 6909.0], [64.0, 6910.0], [64.1, 6914.0], [64.2, 6927.0], [64.3, 6936.0], [64.4, 6945.0], [64.5, 6946.0], [64.6, 6948.0], [64.7, 6951.0], [64.8, 6953.0], [64.9, 6964.0], [65.0, 6971.0], [65.1, 6973.0], [65.2, 6979.0], [65.3, 6990.0], [65.4, 6993.0], [65.5, 6994.0], [65.6, 6995.0], [65.7, 7011.0], [65.8, 7012.0], [65.9, 7021.0], [66.0, 7028.0], [66.1, 7035.0], [66.2, 7038.0], [66.3, 7041.0], [66.4, 7044.0], [66.5, 7048.0], [66.6, 7049.0], [66.7, 7056.0], [66.8, 7057.0], [66.9, 7058.0], [67.0, 7058.0], [67.1, 7064.0], [67.2, 7064.0], [67.3, 7065.0], [67.4, 7068.0], [67.5, 7069.0], [67.6, 7069.0], [67.7, 7071.0], [67.8, 7073.0], [67.9, 7081.0], [68.0, 7081.0], [68.1, 7087.0], [68.2, 7092.0], [68.3, 7093.0], [68.4, 7097.0], [68.5, 7103.0], [68.6, 7104.0], [68.7, 7111.0], [68.8, 7118.0], [68.9, 7120.0], [69.0, 7121.0], [69.1, 7129.0], [69.2, 7129.0], [69.3, 7138.0], [69.4, 7138.0], [69.5, 7138.0], [69.6, 7140.0], [69.7, 7150.0], [69.8, 7151.0], [69.9, 7151.0], [70.0, 7160.0], [70.1, 7162.0], [70.2, 7162.0], [70.3, 7163.0], [70.4, 7167.0], [70.5, 7172.0], [70.6, 7175.0], [70.7, 7180.0], [70.8, 7182.0], [70.9, 7185.0], [71.0, 7186.0], [71.1, 7188.0], [71.2, 7189.0], [71.3, 7192.0], [71.4, 7193.0], [71.5, 7197.0], [71.6, 7198.0], [71.7, 7201.0], [71.8, 7205.0], [71.9, 7207.0], [72.0, 7209.0], [72.1, 7210.0], [72.2, 7214.0], [72.3, 7215.0], [72.4, 7215.0], [72.5, 7217.0], [72.6, 7217.0], [72.7, 7220.0], [72.8, 7221.0], [72.9, 7223.0], [73.0, 7224.0], [73.1, 7224.0], [73.2, 7226.0], [73.3, 7229.0], [73.4, 7229.0], [73.5, 7231.0], [73.6, 7232.0], [73.7, 7233.0], [73.8, 7235.0], [73.9, 7236.0], [74.0, 7238.0], [74.1, 7241.0], [74.2, 7242.0], [74.3, 7256.0], [74.4, 7257.0], [74.5, 7266.0], [74.6, 7274.0], [74.7, 7286.0], [74.8, 7287.0], [74.9, 7292.0], [75.0, 7296.0], [75.1, 7305.0], [75.2, 7306.0], [75.3, 7308.0], [75.4, 7309.0], [75.5, 7314.0], [75.6, 7316.0], [75.7, 7322.0], [75.8, 7326.0], [75.9, 7330.0], [76.0, 7331.0], [76.1, 7351.0], [76.2, 7355.0], [76.3, 7355.0], [76.4, 7362.0], [76.5, 7370.0], [76.6, 7371.0], [76.7, 7383.0], [76.8, 7383.0], [76.9, 7396.0], [77.0, 7398.0], [77.1, 7408.0], [77.2, 7408.0], [77.3, 7409.0], [77.4, 7412.0], [77.5, 7416.0], [77.6, 7417.0], [77.7, 7427.0], [77.8, 7434.0], [77.9, 7435.0], [78.0, 7438.0], [78.1, 7441.0], [78.2, 7442.0], [78.3, 7457.0], [78.4, 7471.0], [78.5, 7494.0], [78.6, 7506.0], [78.7, 7510.0], [78.8, 7540.0], [78.9, 7551.0], [79.0, 7551.0], [79.1, 7560.0], [79.2, 7578.0], [79.3, 7585.0], [79.4, 7596.0], [79.5, 7603.0], [79.6, 7603.0], [79.7, 7611.0], [79.8, 7619.0], [79.9, 7639.0], [80.0, 7640.0], [80.1, 7679.0], [80.2, 7709.0], [80.3, 7718.0], [80.4, 7718.0], [80.5, 7729.0], [80.6, 7730.0], [80.7, 7740.0], [80.8, 7740.0], [80.9, 7745.0], [81.0, 7748.0], [81.1, 7754.0], [81.2, 7754.0], [81.3, 7755.0], [81.4, 7756.0], [81.5, 7763.0], [81.6, 7773.0], [81.7, 7789.0], [81.8, 7791.0], [81.9, 7810.0], [82.0, 7824.0], [82.1, 7832.0], [82.2, 7841.0], [82.3, 7846.0], [82.4, 7851.0], [82.5, 7866.0], [82.6, 7869.0], [82.7, 7880.0], [82.8, 7907.0], [82.9, 7944.0], [83.0, 7947.0], [83.1, 7954.0], [83.2, 7962.0], [83.3, 7968.0], [83.4, 7969.0], [83.5, 7985.0], [83.6, 8000.0], [83.7, 8008.0], [83.8, 8015.0], [83.9, 8043.0], [84.0, 8049.0], [84.1, 8059.0], [84.2, 8082.0], [84.3, 8108.0], [84.4, 8108.0], [84.5, 8122.0], [84.6, 8124.0], [84.7, 8126.0], [84.8, 8131.0], [84.9, 8150.0], [85.0, 8191.0], [85.1, 8215.0], [85.2, 8218.0], [85.3, 8231.0], [85.4, 8261.0], [85.5, 8281.0], [85.6, 8306.0], [85.7, 8323.0], [85.8, 8326.0], [85.9, 8330.0], [86.0, 8330.0], [86.1, 8335.0], [86.2, 8336.0], [86.3, 8344.0], [86.4, 8352.0], [86.5, 8354.0], [86.6, 8356.0], [86.7, 8356.0], [86.8, 8369.0], [86.9, 8375.0], [87.0, 8376.0], [87.1, 8442.0], [87.2, 8443.0], [87.3, 8489.0], [87.4, 8524.0], [87.5, 8526.0], [87.6, 8548.0], [87.7, 8560.0], [87.8, 8564.0], [87.9, 8612.0], [88.0, 8613.0], [88.1, 8637.0], [88.2, 8637.0], [88.3, 8685.0], [88.4, 8686.0], [88.5, 8686.0], [88.6, 8705.0], [88.7, 8730.0], [88.8, 8735.0], [88.9, 8737.0], [89.0, 8737.0], [89.1, 8765.0], [89.2, 8826.0], [89.3, 8861.0], [89.4, 8879.0], [89.5, 8899.0], [89.6, 8912.0], [89.7, 8919.0], [89.8, 8936.0], [89.9, 8987.0], [90.0, 8990.0], [90.1, 8995.0], [90.2, 9001.0], [90.3, 9019.0], [90.4, 9035.0], [90.5, 9037.0], [90.6, 9046.0], [90.7, 9064.0], [90.8, 9065.0], [90.9, 9070.0], [91.0, 9077.0], [91.1, 9086.0], [91.2, 9086.0], [91.3, 9123.0], [91.4, 9124.0], [91.5, 9138.0], [91.6, 9151.0], [91.7, 9168.0], [91.8, 9169.0], [91.9, 9210.0], [92.0, 9218.0], [92.1, 9239.0], [92.2, 9253.0], [92.3, 9254.0], [92.4, 9257.0], [92.5, 9258.0], [92.6, 9289.0], [92.7, 9311.0], [92.8, 9312.0], [92.9, 9341.0], [93.0, 9342.0], [93.1, 9369.0], [93.2, 9389.0], [93.3, 9412.0], [93.4, 9414.0], [93.5, 9422.0], [93.6, 9430.0], [93.7, 9446.0], [93.8, 9450.0], [93.9, 9471.0], [94.0, 9510.0], [94.1, 9527.0], [94.2, 9534.0], [94.3, 9539.0], [94.4, 9564.0], [94.5, 9588.0], [94.6, 9593.0], [94.7, 9628.0], [94.8, 9635.0], [94.9, 9650.0], [95.0, 9679.0], [95.1, 9682.0], [95.2, 9684.0], [95.3, 9703.0], [95.4, 9713.0], [95.5, 9721.0], [95.6, 9726.0], [95.7, 9729.0], [95.8, 9729.0], [95.9, 9737.0], [96.0, 9740.0], [96.1, 9746.0], [96.2, 9794.0], [96.3, 9814.0], [96.4, 9830.0], [96.5, 9852.0], [96.6, 9855.0], [96.7, 9872.0], [96.8, 9876.0], [96.9, 9896.0], [97.0, 9903.0], [97.1, 9986.0], [97.2, 10012.0], [97.3, 10147.0], [97.4, 10157.0], [97.5, 10197.0], [97.6, 10211.0], [97.7, 10305.0], [97.8, 10334.0], [97.9, 10398.0], [98.0, 10411.0], [98.1, 10441.0], [98.2, 10464.0], [98.3, 10544.0], [98.4, 10712.0], [98.5, 10738.0], [98.6, 10749.0], [98.7, 10778.0], [98.8, 10796.0], [98.9, 10804.0], [99.0, 10812.0], [99.1, 10827.0], [99.2, 10909.0], [99.3, 10934.0], [99.4, 10972.0], [99.5, 11162.0], [99.6, 11344.0], [99.7, 11891.0], [99.8, 12061.0], [99.9, 12138.0], [100.0, 14433.0]], "isOverall": false, "label": "register", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 833.0, "series": [{"data": [[0.0, 833.0], [600.0, 3.0], [700.0, 33.0], [200.0, 3.0], [800.0, 6.0], [900.0, 13.0], [1000.0, 8.0], [1100.0, 5.0], [1200.0, 3.0], [300.0, 9.0], [5000.0, 1.0], [1300.0, 5.0], [1400.0, 2.0], [1500.0, 1.0], [400.0, 250.0], [100.0, 306.0], [1700.0, 3.0], [1900.0, 2.0], [500.0, 13.0], [2000.0, 1.0]], "isOverall": false, "label": "getUser", "isController": false}, {"data": [[0.0, 801.0], [2100.0, 1.0], [2200.0, 1.0], [600.0, 51.0], [700.0, 44.0], [200.0, 21.0], [800.0, 35.0], [3200.0, 1.0], [900.0, 16.0], [1000.0, 21.0], [1100.0, 32.0], [300.0, 22.0], [1200.0, 26.0], [1300.0, 19.0], [1400.0, 19.0], [1500.0, 12.0], [400.0, 112.0], [100.0, 217.0], [1600.0, 8.0], [1700.0, 8.0], [1800.0, 7.0], [500.0, 26.0]], "isOverall": false, "label": "getListOfUser", "isController": false}, {"data": [[600.0, 18.0], [700.0, 6.0], [800.0, 1.0], [900.0, 4.0], [1000.0, 3.0], [1100.0, 3.0], [1200.0, 5.0], [1300.0, 17.0], [1400.0, 7.0], [1500.0, 21.0], [1600.0, 25.0], [1700.0, 12.0], [1800.0, 5.0], [1900.0, 11.0], [2000.0, 10.0], [2100.0, 20.0], [2200.0, 4.0], [2300.0, 7.0], [2400.0, 12.0], [2500.0, 9.0], [2600.0, 12.0], [2800.0, 11.0], [2700.0, 17.0], [2900.0, 11.0], [3000.0, 12.0], [3100.0, 3.0], [3300.0, 9.0], [3200.0, 11.0], [3400.0, 14.0], [3500.0, 11.0], [3700.0, 17.0], [3600.0, 5.0], [3800.0, 11.0], [3900.0, 15.0], [4000.0, 13.0], [4300.0, 22.0], [4200.0, 17.0], [4100.0, 14.0], [4600.0, 14.0], [4400.0, 24.0], [4500.0, 18.0], [4700.0, 25.0], [4800.0, 25.0], [4900.0, 29.0], [5100.0, 25.0], [5000.0, 28.0], [5200.0, 20.0], [5300.0, 14.0], [5600.0, 12.0], [5400.0, 16.0], [5500.0, 22.0], [5800.0, 12.0], [5700.0, 14.0], [6000.0, 24.0], [5900.0, 15.0], [6100.0, 16.0], [6200.0, 9.0], [6300.0, 15.0], [6500.0, 22.0], [6400.0, 24.0], [6600.0, 21.0], [6800.0, 57.0], [6900.0, 31.0], [6700.0, 28.0], [7000.0, 41.0], [7100.0, 49.0], [7300.0, 30.0], [7200.0, 50.0], [7400.0, 23.0], [7500.0, 14.0], [7600.0, 10.0], [7900.0, 12.0], [7700.0, 25.0], [7800.0, 14.0], [8100.0, 12.0], [8000.0, 10.0], [8200.0, 8.0], [8500.0, 8.0], [8300.0, 22.0], [8400.0, 5.0], [8600.0, 10.0], [8700.0, 9.0], [9000.0, 16.0], [9200.0, 13.0], [9100.0, 9.0], [8900.0, 9.0], [8800.0, 6.0], [9400.0, 10.0], [9300.0, 9.0], [9600.0, 9.0], [9500.0, 11.0], [9700.0, 14.0], [10100.0, 4.0], [10200.0, 2.0], [9800.0, 11.0], [10000.0, 2.0], [9900.0, 3.0], [10300.0, 4.0], [10400.0, 4.0], [10500.0, 2.0], [10700.0, 7.0], [10800.0, 5.0], [10900.0, 4.0], [11100.0, 1.0], [11000.0, 1.0], [11300.0, 2.0], [11800.0, 1.0], [12000.0, 1.0], [12100.0, 2.0], [14400.0, 1.0]], "isOverall": false, "label": "register", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 14400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 444.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2574.0, "series": [{"data": [[0.0, 2574.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 444.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1482.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 652.0297777777789, "minX": 1.66747842E12, "maxY": 652.0297777777789, "series": [{"data": [[1.66747842E12, 652.0297777777789]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66747842E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 72.0, "minX": 1.0, "maxY": 14433.0, "series": [{"data": [[7.0, 80.0], [11.0, 141.0], [15.0, 80.0], [16.0, 79.36363636363636], [17.0, 83.0], [18.0, 72.0], [33.0, 84.0], [35.0, 78.33333333333333], [34.0, 86.0], [38.0, 77.0], [54.0, 90.5], [57.0, 83.66666666666667], [56.0, 91.0], [59.0, 78.5], [58.0, 78.33333333333333], [61.0, 81.0], [62.0, 85.0], [64.0, 86.0], [71.0, 85.0], [74.0, 88.0], [79.0, 97.0], [78.0, 80.0], [77.0, 80.0], [82.0, 85.57142857142857], [81.0, 90.33333333333333], [80.0, 84.83333333333333], [85.0, 81.0], [84.0, 84.0], [91.0, 81.0], [96.0, 85.0], [111.0, 90.0], [115.0, 79.25], [114.0, 90.63157894736842], [117.0, 81.25], [116.0, 80.0], [133.0, 79.0], [143.0, 82.0], [142.0, 82.875], [141.0, 87.39999999999999], [139.0, 108.0], [146.0, 81.0], [145.0, 78.0], [166.0, 91.0], [165.0, 93.5], [164.0, 97.58333333333333], [162.0, 89.5], [183.0, 81.0], [186.0, 84.0], [198.0, 86.0], [197.0, 97.83333333333333], [196.0, 109.0], [195.0, 96.58333333333333], [194.0, 101.0], [192.0, 87.0], [203.0, 83.0], [223.0, 88.66666666666667], [222.0, 89.0], [219.0, 90.0], [217.0, 82.0], [216.0, 93.5], [231.0, 82.0], [228.0, 78.0], [227.0, 77.33333333333333], [226.0, 84.33333333333333], [225.0, 85.0], [238.0, 76.0], [237.0, 145.2], [235.0, 80.66666666666667], [242.0, 88.0], [254.0, 82.11111111111111], [252.0, 95.0], [250.0, 89.0], [249.0, 96.0], [248.0, 96.66666666666667], [269.0, 101.0], [264.0, 74.0], [263.0, 73.0], [260.0, 84.0], [256.0, 225.0], [287.0, 95.0], [277.0, 123.85714285714286], [276.0, 106.25], [273.0, 98.0], [298.0, 91.33333333333333], [292.0, 95.0], [289.0, 98.125], [288.0, 108.33333333333333], [318.0, 89.33333333333333], [317.0, 88.0], [311.0, 85.4], [310.0, 91.0], [309.0, 103.25], [308.0, 101.75], [307.0, 94.0], [333.0, 75.5], [332.0, 89.4], [329.0, 102.0], [328.0, 96.0], [327.0, 91.0], [326.0, 101.0], [323.0, 100.0], [321.0, 82.0], [351.0, 87.6], [350.0, 81.0], [348.0, 82.0], [342.0, 90.0], [341.0, 78.0], [340.0, 84.5], [337.0, 73.0], [336.0, 73.0], [365.0, 81.0], [361.0, 82.0], [357.0, 81.22222222222223], [356.0, 85.5], [355.0, 86.0], [352.0, 96.0], [381.0, 85.0], [380.0, 82.0], [379.0, 85.27777777777777], [378.0, 80.0], [399.0, 88.12499999999999], [398.0, 76.0], [396.0, 81.0], [414.0, 99.0], [413.0, 92.0], [412.0, 92.0], [404.0, 83.0], [403.0, 91.0], [401.0, 76.0], [400.0, 81.83333333333333], [428.0, 96.8], [431.0, 98.0], [430.0, 94.0], [429.0, 89.0], [424.0, 76.0], [422.0, 83.0], [417.0, 91.6], [421.0, 78.66666666666667], [420.0, 80.0], [419.0, 86.0], [418.0, 88.0], [447.0, 78.75], [446.0, 81.14285714285714], [443.0, 605.0], [462.0, 85.0], [459.0, 84.0], [455.0, 107.0], [451.0, 90.0], [449.0, 84.0], [448.0, 77.0], [479.0, 85.0], [478.0, 82.0], [475.0, 78.0], [473.0, 81.0], [472.0, 81.66666666666667], [470.0, 77.0], [466.0, 88.5], [465.0, 81.0], [490.0, 81.0], [488.0, 86.5], [486.0, 77.66666666666667], [484.0, 82.0], [483.0, 84.5], [482.0, 81.0], [511.0, 85.0], [503.0, 167.0], [501.0, 190.25], [496.0, 78.0], [536.0, 94.0], [534.0, 88.0], [532.0, 89.33333333333333], [528.0, 96.0], [527.0, 95.0], [512.0, 92.1], [514.0, 85.5], [513.0, 99.0], [526.0, 89.0], [525.0, 96.5], [524.0, 91.3076923076923], [523.0, 86.0], [566.0, 88.23809523809523], [565.0, 87.0], [564.0, 85.2], [563.0, 77.0], [559.0, 85.5], [557.0, 81.0], [552.0, 83.0], [595.0, 82.0], [604.0, 100.0], [602.0, 87.0], [600.0, 81.0], [591.0, 81.0], [599.0, 81.0], [598.0, 81.875], [596.0, 82.5], [594.0, 83.42857142857143], [593.0, 83.0], [638.0, 387.0], [636.0, 255.5], [633.0, 261.5], [631.0, 2590.5], [630.0, 115.0], [616.0, 78.0], [615.0, 83.94736842105263], [611.0, 82.0], [655.0, 98.0], [667.0, 128.0], [646.0, 95.0], [642.0, 109.0], [640.0, 118.0], [660.0, 114.0], [656.0, 96.0], [654.0, 93.5], [653.0, 92.0], [652.0, 83.16666666666667], [651.0, 80.5], [650.0, 86.16666666666667], [702.0, 85.5], [703.0, 84.2], [701.0, 81.0], [700.0, 82.0], [698.0, 95.99999999999999], [696.0, 109.0], [674.0, 97.6], [673.0, 103.5], [695.0, 105.0], [694.0, 96.0], [693.0, 104.0], [690.0, 119.0], [723.0, 104.0], [733.0, 83.0], [729.0, 84.0], [728.0, 81.5], [712.0, 81.0], [706.0, 86.0], [705.0, 84.0], [709.0, 82.5], [708.0, 80.0], [711.0, 81.0], [727.0, 83.18181818181817], [726.0, 87.5], [724.0, 102.66666666666667], [722.0, 91.0], [720.0, 89.0], [755.0, 77.0], [766.0, 101.5], [763.0, 108.16666666666667], [745.0, 99.0], [759.0, 89.5], [758.0, 81.0], [757.0, 83.66666666666667], [754.0, 82.0], [753.0, 93.0], [752.0, 82.84615384615384], [796.0, 221.7142857142857], [799.0, 542.5], [789.0, 84.0], [791.0, 96.0], [787.0, 1016.0], [777.0, 1027.0], [778.0, 120.0], [781.0, 100.0], [780.0, 101.0], [793.0, 102.25], [772.0, 95.66666666666667], [771.0, 104.33333333333333], [782.0, 92.0], [798.0, 86.0], [797.0, 94.0], [795.0, 90.0], [794.0, 93.0], [830.0, 605.5], [831.0, 1212.0], [827.0, 777.6666666666667], [822.0, 538.5], [823.0, 90.0], [816.0, 980.0], [803.0, 1742.0], [815.0, 97.0], [802.0, 84.0], [811.0, 85.0], [808.0, 82.0], [817.0, 1260.0], [828.0, 94.25], [826.0, 92.62499999999999], [804.0, 96.0], [862.0, 112.0], [855.0, 1287.0], [853.0, 86.0], [851.0, 917.0], [849.0, 941.0], [844.0, 945.0], [838.0, 110.5], [837.0, 136.0], [836.0, 90.0], [834.0, 93.0], [842.0, 148.0], [839.0, 965.0], [861.0, 117.0], [860.0, 96.2], [858.0, 87.0], [856.0, 76.0], [890.0, 784.0], [893.0, 805.0], [882.0, 97.0], [881.0, 82.0], [889.0, 771.0], [879.0, 244.5], [878.0, 462.5], [872.0, 830.0], [874.0, 116.0], [864.0, 1356.0], [888.0, 111.0], [884.0, 76.0], [883.0, 154.875], [903.0, 780.0], [926.0, 906.0], [922.0, 666.75], [921.0, 103.11111111111113], [919.0, 835.25], [918.0, 783.1666666666666], [912.0, 765.0], [914.0, 91.0], [910.0, 755.0], [909.0, 743.0], [908.0, 761.0], [906.0, 113.26666666666667], [905.0, 99.6], [904.0, 98.0], [901.0, 785.0], [900.0, 433.5], [898.0, 103.0], [911.0, 92.0], [935.0, 802.0], [956.0, 737.0], [955.0, 510.0], [949.0, 613.0], [947.0, 101.25], [951.0, 95.0], [946.0, 943.3333333333333], [957.0, 1926.0], [945.0, 104.33333333333333], [944.0, 106.5], [941.0, 789.0], [939.0, 104.0], [937.0, 105.0], [936.0, 114.0], [942.0, 103.33333333333333], [934.0, 1352.0], [931.0, 1414.0], [929.0, 912.0], [943.0, 100.0], [954.0, 531.0], [952.0, 388.2], [987.0, 448.0], [990.0, 444.0], [986.0, 453.0], [985.0, 434.0], [982.0, 439.0], [979.0, 1027.5], [978.0, 92.0], [977.0, 479.0], [976.0, 483.0], [970.0, 478.0], [962.0, 495.0], [971.0, 90.0], [963.0, 1061.0], [964.0, 755.0], [967.0, 632.0], [968.0, 508.0], [997.0, 431.0], [1012.0, 1190.0], [1010.0, 621.0], [1006.0, 417.0], [1000.0, 416.0], [998.0, 431.0], [996.0, 427.0], [995.0, 422.0], [994.0, 432.0], [1080.0, 790.0], [1066.0, 495.0], [1076.0, 779.0], [1070.0, 241.33333333333334], [1069.0, 207.33333333333331], [1067.0, 757.0], [1072.0, 796.0], [1054.0, 149.33333333333334], [1026.0, 499.0], [1034.0, 562.0], [1027.0, 1076.0], [1053.0, 454.0], [1049.0, 446.75], [1048.0, 1055.0], [1044.0, 458.0], [1043.0, 765.5], [1050.0, 623.6], [1063.0, 209.0], [1061.0, 419.0], [1060.0, 255.0], [1059.0, 177.57142857142856], [1056.0, 139.42857142857144], [1126.0, 99.0], [1143.0, 355.0], [1148.0, 103.0], [1121.0, 100.0], [1120.0, 100.0], [1123.0, 99.0], [1122.0, 97.0], [1125.0, 107.33333333333333], [1124.0, 94.5], [1127.0, 99.0], [1129.0, 105.5], [1128.0, 105.5], [1131.0, 98.75], [1130.0, 105.33333333333333], [1134.0, 101.99999999999999], [1133.0, 103.2], [1146.0, 93.0], [1145.0, 98.0], [1142.0, 99.2], [1141.0, 99.0], [1140.0, 103.0], [1139.0, 100.5], [1138.0, 104.5], [1137.0, 107.33333333333333], [1136.0, 102.0], [1092.0, 437.0], [1118.0, 736.0], [1117.0, 423.0], [1116.0, 755.0], [1106.0, 770.0], [1171.0, 344.97805642633205], [1160.0, 98.0]], "isOverall": false, "label": "getUser", "isController": false}, {"data": [[717.2146666666682, 211.38533333333342]], "isOverall": false, "label": "getUser-Aggregated", "isController": false}, {"data": [[2.0, 85.0], [3.0, 77.0], [4.0, 78.0], [5.0, 79.0], [7.0, 77.0], [8.0, 78.0], [10.0, 81.5], [11.0, 80.0], [12.0, 76.0], [14.0, 76.0], [15.0, 81.0], [16.0, 72.0], [17.0, 107.0], [18.0, 78.0], [20.0, 84.0], [21.0, 84.0], [22.0, 79.0], [23.0, 84.0], [24.0, 92.0], [26.0, 90.5], [27.0, 76.0], [28.0, 83.0], [30.0, 80.5], [31.0, 75.0], [33.0, 83.0], [32.0, 78.0], [35.0, 73.0], [34.0, 76.0], [37.0, 78.0], [36.0, 78.0], [39.0, 83.0], [38.0, 80.0], [43.0, 81.0], [42.0, 83.33333333333333], [45.0, 82.0], [44.0, 79.0], [47.0, 75.0], [46.0, 77.0], [49.0, 80.0], [48.0, 93.0], [51.0, 81.0], [50.0, 84.0], [53.0, 82.0], [52.0, 74.0], [54.0, 74.0], [57.0, 85.0], [56.0, 82.0], [59.0, 84.0], [58.0, 80.0], [61.0, 86.0], [60.0, 92.0], [63.0, 100.0], [62.0, 111.0], [67.0, 89.0], [65.0, 88.0], [64.0, 87.0], [71.0, 85.0], [70.0, 83.0], [69.0, 83.0], [75.0, 83.0], [74.0, 89.0], [73.0, 93.0], [72.0, 88.0], [79.0, 84.0], [78.0, 80.0], [77.0, 84.0], [76.0, 87.0], [82.0, 95.0], [81.0, 99.0], [80.0, 77.0], [87.0, 78.0], [86.0, 73.0], [85.0, 76.0], [84.0, 100.5], [91.0, 81.0], [90.0, 93.0], [89.0, 83.0], [88.0, 84.0], [95.0, 81.0], [94.0, 78.5], [92.0, 80.0], [99.0, 81.0], [98.0, 86.0], [97.0, 83.0], [96.0, 76.0], [103.0, 81.0], [101.0, 81.0], [100.0, 73.0], [106.0, 88.0], [105.0, 89.5], [111.0, 84.66666666666667], [110.0, 84.0], [108.0, 80.0], [115.0, 85.0], [114.0, 87.0], [113.0, 89.0], [112.0, 79.0], [119.0, 85.0], [118.0, 80.0], [117.0, 81.0], [116.0, 87.0], [122.0, 81.0], [121.0, 83.5], [127.0, 83.0], [126.0, 84.0], [125.0, 78.0], [124.0, 82.5], [135.0, 80.0], [134.0, 81.5], [133.0, 84.5], [132.0, 81.5], [128.0, 86.0], [143.0, 120.0], [142.0, 110.0], [141.0, 93.0], [140.0, 96.0], [139.0, 92.0], [138.0, 100.0], [137.0, 98.0], [136.0, 93.0], [151.0, 77.0], [150.0, 78.5], [149.0, 82.0], [147.0, 81.0], [146.0, 81.0], [145.0, 78.0], [144.0, 95.0], [159.0, 81.0], [158.0, 86.0], [157.0, 80.0], [156.0, 88.0], [155.0, 80.0], [154.0, 79.33333333333333], [166.0, 97.0], [165.0, 92.0], [164.0, 86.0], [163.0, 94.0], [162.0, 78.0], [161.0, 79.0], [160.0, 81.0], [174.0, 86.0], [173.0, 87.0], [172.0, 90.0], [171.0, 86.0], [169.0, 89.5], [168.0, 93.0], [183.0, 83.0], [182.0, 81.0], [181.0, 92.0], [180.0, 85.0], [179.0, 91.0], [178.0, 88.66666666666667], [176.0, 84.0], [191.0, 85.0], [190.0, 81.0], [189.0, 87.0], [188.0, 84.5], [186.0, 83.0], [185.0, 87.0], [184.0, 78.0], [199.0, 86.0], [198.0, 91.0], [197.0, 104.0], [196.0, 102.0], [195.0, 92.0], [194.0, 95.0], [193.0, 101.5], [206.0, 97.0], [205.0, 82.0], [203.0, 84.0], [202.0, 84.0], [201.0, 94.5], [215.0, 90.5], [213.0, 82.0], [212.0, 89.0], [211.0, 82.0], [210.0, 78.5], [208.0, 87.0], [223.0, 89.0], [222.0, 86.66666666666667], [219.0, 800.0], [218.0, 82.0], [217.0, 81.0], [216.0, 108.0], [231.0, 84.0], [229.0, 80.0], [228.0, 90.0], [227.0, 82.0], [226.0, 549.0], [225.0, 83.0], [224.0, 89.0], [238.0, 78.0], [237.0, 81.5], [235.0, 81.66666666666667], [232.0, 81.0], [247.0, 96.0], [245.0, 100.0], [244.0, 96.33333333333333], [243.0, 97.0], [242.0, 97.0], [240.0, 102.0], [254.0, 80.0], [253.0, 90.0], [252.0, 86.0], [251.0, 89.0], [250.0, 88.0], [249.0, 100.5], [248.0, 96.0], [270.0, 260.0], [271.0, 260.0], [269.0, 74.0], [268.0, 79.0], [267.0, 92.0], [266.0, 84.0], [265.0, 76.5], [263.0, 78.0], [258.0, 98.5], [256.0, 81.0], [262.0, 79.0], [261.0, 79.0], [260.0, 80.0], [286.0, 103.0], [287.0, 122.0], [285.0, 88.0], [284.0, 94.0], [283.0, 98.0], [282.0, 100.0], [281.0, 92.0], [279.0, 95.0], [273.0, 91.5], [275.0, 100.0], [274.0, 94.0], [278.0, 95.0], [277.0, 231.0], [276.0, 91.0], [291.0, 104.0], [302.0, 109.0], [303.0, 90.0], [300.0, 95.5], [290.0, 100.0], [289.0, 116.0], [288.0, 122.0], [298.0, 85.5], [296.0, 89.0], [295.0, 84.0], [294.0, 88.0], [293.0, 89.0], [292.0, 95.0], [316.0, 84.33333333333333], [318.0, 84.0], [319.0, 98.0], [317.0, 85.0], [313.0, 93.0], [312.0, 82.0], [311.0, 82.0], [304.0, 106.0], [307.0, 101.0], [305.0, 89.0], [310.0, 96.0], [309.0, 96.0], [308.0, 120.0], [334.0, 82.0], [335.0, 95.0], [333.0, 97.0], [332.0, 92.0], [331.0, 93.0], [330.0, 96.0], [329.0, 98.0], [328.0, 97.0], [327.0, 91.0], [321.0, 78.0], [320.0, 84.0], [323.0, 94.0], [322.0, 80.0], [326.0, 86.0], [324.0, 90.0], [350.0, 79.0], [351.0, 77.0], [348.0, 83.0], [339.0, 79.0], [337.0, 82.0], [336.0, 91.0], [347.0, 78.0], [346.0, 75.0], [345.0, 77.0], [343.0, 95.0], [342.0, 83.0], [341.0, 75.0], [340.0, 79.5], [366.0, 82.0], [367.0, 86.0], [365.0, 83.33333333333333], [355.0, 97.0], [354.0, 99.0], [353.0, 92.0], [352.0, 92.0], [362.0, 87.0], [361.0, 87.0], [360.0, 84.0], [359.0, 87.0], [357.0, 81.0], [356.0, 75.0], [381.0, 110.0], [382.0, 79.0], [380.0, 84.0], [371.0, 95.0], [369.0, 88.0], [379.0, 82.0], [378.0, 78.0], [377.0, 83.0], [376.0, 82.0], [375.0, 92.0], [374.0, 81.0], [373.0, 88.0], [372.0, 95.0], [398.0, 75.0], [399.0, 77.0], [397.0, 78.0], [396.0, 75.0], [395.0, 91.0], [394.0, 88.0], [393.0, 83.0], [392.0, 89.0], [390.0, 87.0], [385.0, 91.66666666666667], [387.0, 84.0], [386.0, 86.0], [389.0, 80.0], [388.0, 82.0], [414.0, 90.0], [415.0, 76.0], [413.0, 94.0], [412.0, 96.0], [411.0, 82.0], [410.0, 79.0], [409.0, 92.0], [408.0, 73.0], [407.0, 82.0], [401.0, 80.0], [400.0, 82.0], [403.0, 103.0], [402.0, 80.0], [406.0, 85.0], [405.0, 88.0], [404.0, 91.0], [430.0, 87.0], [431.0, 97.0], [429.0, 89.0], [428.0, 82.0], [427.0, 86.0], [425.0, 85.0], [424.0, 75.0], [423.0, 92.0], [417.0, 80.0], [416.0, 74.0], [419.0, 82.0], [418.0, 83.0], [422.0, 84.0], [421.0, 97.0], [420.0, 94.0], [446.0, 80.0], [447.0, 76.0], [445.0, 74.0], [444.0, 72.0], [443.0, 77.0], [442.0, 80.0], [441.0, 76.0], [440.0, 83.0], [439.0, 89.0], [433.0, 90.0], [432.0, 99.0], [435.0, 96.0], [434.0, 97.0], [438.0, 84.0], [437.0, 91.0], [436.0, 85.0], [462.0, 77.0], [463.0, 101.0], [461.0, 83.0], [460.0, 84.0], [459.0, 83.0], [458.0, 83.0], [457.0, 91.0], [456.0, 91.0], [455.0, 91.5], [449.0, 86.0], [448.0, 76.0], [451.0, 91.0], [450.0, 92.0], [453.0, 91.0], [452.0, 90.0], [478.0, 81.0], [479.0, 80.0], [477.0, 85.5], [467.0, 76.0], [466.0, 89.0], [465.0, 81.0], [464.0, 73.0], [475.0, 86.0], [474.0, 93.0], [473.0, 88.0], [472.0, 77.0], [471.0, 78.0], [470.0, 81.0], [468.0, 87.0], [493.0, 131.0], [495.0, 86.5], [492.0, 81.0], [483.0, 80.0], [482.0, 88.0], [481.0, 87.0], [480.0, 81.0], [491.0, 80.0], [490.0, 84.0], [489.0, 91.0], [488.0, 76.0], [487.0, 78.0], [486.0, 92.0], [485.0, 80.0], [484.0, 74.0], [510.0, 84.0], [511.0, 161.0], [509.0, 84.0], [499.0, 79.0], [498.0, 82.0], [497.0, 84.0], [496.0, 82.0], [507.0, 171.0], [506.0, 82.0], [505.0, 337.0], [503.0, 180.0], [502.0, 180.0], [501.0, 73.0], [500.0, 78.0], [537.0, 91.0], [542.0, 98.0], [543.0, 97.0], [528.0, 93.0], [530.0, 90.0], [529.0, 96.0], [533.0, 103.0], [532.0, 86.0], [541.0, 104.5], [539.0, 126.0], [538.0, 100.0], [536.0, 94.0], [519.0, 88.0], [518.0, 93.0], [517.0, 105.0], [516.0, 100.0], [515.0, 95.0], [514.0, 99.0], [513.0, 104.0], [512.0, 135.0], [527.0, 100.0], [526.0, 108.0], [525.0, 112.0], [524.0, 81.0], [523.0, 82.0], [522.0, 82.0], [521.0, 87.0], [520.0, 86.0], [535.0, 108.0], [534.0, 92.0], [568.0, 78.0], [574.0, 92.0], [575.0, 85.0], [561.0, 76.0], [560.0, 87.0], [563.0, 80.0], [562.0, 99.0], [573.0, 81.5], [571.0, 77.0], [569.0, 85.0], [559.0, 79.0], [545.0, 75.0], [544.0, 80.0], [547.0, 94.0], [546.0, 73.0], [549.0, 86.0], [548.0, 79.0], [551.0, 75.0], [550.0, 79.0], [558.0, 82.0], [557.0, 75.0], [556.0, 79.0], [555.0, 77.0], [554.0, 79.5], [552.0, 74.0], [567.0, 80.0], [566.0, 82.0], [565.0, 89.0], [564.0, 74.0], [602.0, 85.0], [606.0, 85.0], [607.0, 89.0], [593.0, 80.0], [592.0, 82.0], [595.0, 74.0], [594.0, 80.0], [597.0, 78.0], [596.0, 87.0], [605.0, 90.0], [604.0, 89.0], [603.0, 90.5], [600.0, 84.0], [583.0, 85.0], [581.0, 84.0], [579.0, 79.0], [578.0, 82.5], [576.0, 76.0], [591.0, 83.5], [589.0, 81.0], [588.0, 78.0], [587.0, 86.0], [586.0, 77.0], [584.0, 79.0], [599.0, 88.0], [598.0, 81.0], [634.0, 118.0], [638.0, 106.0], [639.0, 102.0], [625.0, 82.0], [624.0, 86.0], [627.0, 93.0], [626.0, 110.0], [629.0, 106.0], [628.0, 104.0], [637.0, 130.0], [636.0, 112.5], [635.0, 108.0], [632.0, 133.0], [615.0, 84.0], [614.0, 80.0], [612.0, 87.0], [611.0, 80.0], [610.0, 87.0], [609.0, 87.0], [608.0, 88.0], [623.0, 79.0], [622.0, 76.0], [621.0, 75.0], [620.0, 80.0], [619.0, 81.0], [618.0, 570.0], [617.0, 82.0], [616.0, 102.0], [631.0, 120.0], [630.0, 111.0], [668.0, 241.0], [671.0, 104.0], [656.0, 92.0], [658.0, 112.5], [657.0, 99.0], [661.0, 105.0], [660.0, 113.0], [670.0, 105.0], [669.0, 106.0], [667.0, 124.0], [666.0, 126.0], [665.0, 115.0], [664.0, 120.0], [655.0, 97.0], [641.0, 97.0], [640.0, 95.0], [643.0, 94.0], [642.0, 102.0], [645.0, 91.0], [644.0, 88.0], [647.0, 88.0], [646.0, 96.0], [654.0, 103.0], [652.0, 107.0], [651.0, 74.0], [650.0, 97.0], [649.0, 91.0], [648.0, 86.0], [663.0, 115.0], [662.0, 122.0], [696.0, 93.0], [702.0, 79.0], [703.0, 91.0], [688.0, 107.0], [690.0, 105.0], [689.0, 100.0], [701.0, 79.0], [700.0, 84.5], [698.0, 99.5], [687.0, 99.0], [673.0, 97.0], [672.0, 104.0], [675.0, 92.0], [674.0, 115.0], [677.0, 86.0], [676.0, 93.0], [679.0, 90.0], [678.0, 89.0], [686.0, 88.0], [685.0, 88.0], [684.0, 83.0], [683.0, 87.0], [682.0, 83.0], [680.0, 86.0], [695.0, 100.0], [694.0, 89.0], [693.0, 98.0], [691.0, 102.0], [711.0, 83.0], [724.0, 102.0], [729.0, 80.0], [728.0, 558.0], [710.0, 89.0], [709.0, 89.0], [708.0, 83.0], [707.0, 83.0], [706.0, 88.5], [704.0, 88.0], [719.0, 91.0], [718.0, 90.66666666666667], [715.0, 100.0], [714.0, 87.0], [713.0, 90.0], [712.0, 91.0], [727.0, 74.0], [726.0, 86.0], [725.0, 96.0], [723.0, 94.0], [722.0, 91.0], [721.0, 90.5], [761.0, 87.0], [766.0, 91.0], [767.0, 111.0], [752.0, 93.0], [754.0, 88.0], [753.0, 97.0], [757.0, 80.5], [755.0, 86.0], [764.0, 96.0], [763.0, 94.0], [762.0, 103.0], [760.0, 93.0], [743.0, 104.0], [742.0, 90.0], [741.0, 102.0], [740.0, 104.0], [739.0, 109.0], [738.0, 91.0], [751.0, 90.0], [750.0, 97.0], [749.0, 91.0], [748.0, 91.0], [747.0, 95.0], [746.0, 86.0], [745.0, 93.0], [744.0, 95.0], [759.0, 159.0], [758.0, 91.0], [793.0, 656.0], [798.0, 599.5], [799.0, 434.0], [786.0, 786.25], [785.0, 90.0], [784.0, 675.5], [797.0, 94.5], [796.0, 718.25], [795.0, 651.0], [794.0, 91.0], [781.0, 889.3333333333333], [780.0, 106.0], [782.0, 110.0], [792.0, 97.0], [775.0, 103.33333333333333], [772.0, 101.0], [771.0, 90.0], [770.0, 90.0], [769.0, 217.0], [768.0, 96.0], [783.0, 97.0], [779.0, 1072.3333333333333], [778.0, 626.0], [777.0, 677.0], [776.0, 767.3333333333333], [791.0, 548.25], [790.0, 87.5], [789.0, 1131.0], [788.0, 95.0], [787.0, 343.5], [825.0, 327.0], [830.0, 644.6666666666667], [831.0, 306.0], [817.0, 341.25], [816.0, 720.25], [829.0, 196.0], [828.0, 3201.0], [827.0, 589.0], [826.0, 917.25], [815.0, 941.4], [814.0, 94.0], [801.0, 710.0], [800.0, 91.0], [802.0, 95.0], [805.0, 558.3333333333334], [824.0, 91.0], [806.0, 86.5], [804.0, 146.75], [803.0, 739.0], [813.0, 481.5], [812.0, 694.0], [811.0, 105.0], [810.0, 243.66666666666669], [809.0, 510.33333333333337], [808.0, 375.5], [822.0, 687.5], [823.0, 82.0], [821.0, 1051.0], [819.0, 747.0], [820.0, 851.0], [818.0, 765.6666666666666], [856.0, 173.0], [862.0, 127.5], [863.0, 618.3333333333333], [849.0, 126.5], [848.0, 111.33333333333333], [851.0, 177.66666666666666], [850.0, 653.5], [861.0, 122.0], [860.0, 78.0], [859.0, 101.5], [857.0, 109.0], [858.0, 82.0], [847.0, 124.5], [832.0, 100.0], [835.0, 191.5], [834.0, 95.0], [833.0, 95.5], [837.0, 85.0], [836.0, 450.0], [839.0, 497.66666666666663], [838.0, 450.0], [846.0, 1180.0], [844.0, 138.5], [843.0, 86.0], [845.0, 238.0], [842.0, 499.0], [841.0, 125.0], [840.0, 1264.0], [855.0, 94.0], [854.0, 1233.5], [853.0, 111.0], [852.0, 100.0], [871.0, 706.5], [892.0, 887.75], [895.0, 647.0], [880.0, 252.0], [882.0, 243.0], [881.0, 325.0], [884.0, 84.0], [883.0, 235.0], [894.0, 532.8], [893.0, 629.5], [890.0, 788.5], [889.0, 800.6666666666667], [888.0, 917.3333333333333], [870.0, 394.66666666666663], [869.0, 755.5], [868.0, 773.0], [867.0, 737.0], [866.0, 745.0], [864.0, 89.33333333333333], [865.0, 90.5], [885.0, 102.5], [886.0, 341.3333333333333], [887.0, 257.0], [879.0, 109.0], [878.0, 680.0], [877.0, 98.0], [876.0, 755.5], [875.0, 691.5], [874.0, 527.5], [872.0, 128.5], [873.0, 102.0], [920.0, 579.0], [925.0, 747.25], [926.0, 786.6666666666667], [927.0, 98.0], [912.0, 93.0], [915.0, 825.5], [914.0, 323.0], [913.0, 655.3333333333333], [923.0, 1004.0], [924.0, 1067.0], [922.0, 436.33333333333337], [921.0, 415.5], [911.0, 444.33333333333337], [896.0, 676.0], [897.0, 123.0], [899.0, 564.75], [898.0, 472.66666666666663], [903.0, 592.5], [902.0, 94.0], [900.0, 529.0], [910.0, 1101.0], [908.0, 455.33333333333337], [909.0, 106.0], [907.0, 429.0], [905.0, 632.6666666666667], [904.0, 99.0], [906.0, 94.0], [919.0, 590.6666666666666], [918.0, 591.5], [917.0, 786.3333333333334], [916.0, 702.0], [954.0, 858.0], [946.0, 1288.5], [959.0, 808.0], [958.0, 571.0], [957.0, 452.0], [956.0, 459.5], [955.0, 114.0], [941.0, 1289.5], [928.0, 810.0], [943.0, 103.0], [929.0, 689.0], [942.0, 1220.0], [931.0, 1063.0], [930.0, 816.2], [933.0, 396.66666666666663], [932.0, 760.5], [935.0, 937.3333333333333], [953.0, 109.0], [952.0, 99.0], [934.0, 680.3333333333333], [940.0, 1291.6], [939.0, 1254.0], [937.0, 1128.5714285714287], [936.0, 106.0], [938.0, 1741.5], [951.0, 1343.625], [950.0, 1303.2], [949.0, 553.6666666666666], [948.0, 764.0], [947.0, 638.0], [945.0, 409.5], [944.0, 409.0], [985.0, 406.0], [990.0, 408.0], [991.0, 965.0], [977.0, 840.0], [976.0, 665.0], [979.0, 1177.75], [978.0, 804.0], [989.0, 789.0], [987.0, 819.0], [986.0, 799.0], [984.0, 346.0], [967.0, 805.0], [965.0, 1102.0], [964.0, 885.5], [963.0, 1309.0], [962.0, 1121.0], [961.0, 342.5], [975.0, 457.0], [974.0, 410.33333333333337], [973.0, 1135.75], [972.0, 355.0], [971.0, 1278.0], [970.0, 860.1666666666667], [968.0, 771.0], [983.0, 334.0], [981.0, 570.0], [1018.0, 835.5], [1011.0, 700.0], [1021.0, 574.0], [1022.0, 132.0], [1010.0, 518.0], [1008.0, 754.6666666666666], [1020.0, 493.0], [1017.0, 700.0], [999.0, 781.0], [998.0, 430.0], [997.0, 421.0], [996.0, 955.0], [994.0, 302.0], [993.0, 766.0], [992.0, 789.0], [1007.0, 514.0], [1005.0, 496.0], [1004.0, 781.0], [1001.0, 138.0], [1000.0, 696.0], [1015.0, 139.0], [1013.0, 817.0], [1012.0, 501.0], [1082.0, 292.25], [1060.0, 541.2], [1056.0, 538.3333333333334], [1058.0, 384.0], [1062.0, 574.0], [1064.0, 301.0], [1066.0, 468.0], [1070.0, 469.0], [1068.0, 527.5], [1084.0, 123.5], [1080.0, 497.0], [1072.0, 524.0], [1036.0, 448.0], [1034.0, 782.0], [1032.0, 760.0], [1030.0, 735.0], [1026.0, 454.0], [1054.0, 688.3333333333334], [1052.0, 571.6666666666666], [1050.0, 387.0], [1048.0, 569.5], [1046.0, 905.0], [1042.0, 447.0], [1100.0, 279.0], [1122.0, 443.0], [1120.0, 442.0], [1124.0, 440.0], [1128.0, 438.0], [1148.0, 434.0], [1142.0, 437.0], [1140.0, 438.0], [1138.0, 440.6666666666667], [1098.0, 451.0], [1096.0, 445.0], [1094.0, 457.0], [1092.0, 463.0], [1090.0, 464.5], [1088.0, 452.0], [1118.0, 93.0], [1116.0, 439.0], [1112.0, 444.0], [1110.0, 443.0], [1108.0, 106.0], [1106.0, 363.75], [1170.0, 434.0], [1166.0, 438.0], [1158.0, 96.0], [1077.0, 466.0], [1073.0, 275.6666666666667], [1087.0, 458.0], [1057.0, 428.5], [1059.0, 554.6], [1061.0, 529.5], [1063.0, 466.0], [1067.0, 407.5], [1069.0, 397.5], [1071.0, 581.0], [1085.0, 467.0], [1075.0, 467.0], [1039.0, 464.0], [1037.0, 820.0], [1033.0, 898.0], [1031.0, 713.0], [1029.0, 475.0], [1027.0, 573.0], [1025.0, 699.3333333333334], [1055.0, 362.4], [1053.0, 469.4], [1051.0, 653.0], [1049.0, 813.0], [1047.0, 559.0], [1045.0, 426.0], [1043.0, 552.0], [1041.0, 337.0], [1145.0, 437.0], [1149.0, 429.0], [1123.0, 446.0], [1127.0, 265.5], [1125.0, 447.0], [1129.0, 435.0], [1133.0, 444.0], [1131.0, 450.0], [1147.0, 440.3333333333333], [1143.0, 437.0], [1141.0, 434.0], [1139.0, 446.0], [1137.0, 441.0], [1101.0, 459.0], [1097.0, 481.0], [1095.0, 456.0], [1093.0, 458.0], [1089.0, 461.0], [1119.0, 429.0], [1117.0, 271.5], [1115.0, 444.5], [1113.0, 457.3333333333333], [1111.0, 445.0], [1105.0, 450.0], [1171.0, 302.0555555555556], [1.0, 80.0]], "isOverall": false, "label": "getListOfUser", "isController": false}, {"data": [[656.5520000000006, 328.91466666666565]], "isOverall": false, "label": "getListOfUser-Aggregated", "isController": false}, {"data": [[16.0, 12138.0], [17.0, 12111.0], [21.0, 9415.0], [22.0, 12061.0], [24.0, 10778.0], [26.0, 10972.0], [27.0, 10738.0], [28.0, 10048.2], [30.0, 9715.0], [33.0, 9699.0], [32.0, 9703.0], [38.0, 7832.0], [43.0, 7888.0], [45.0, 9597.0], [44.0, 10001.333333333334], [47.0, 10883.5], [46.0, 7828.0], [49.0, 10437.0], [48.0, 7841.0], [51.0, 9887.333333333334], [53.0, 9855.0], [56.0, 9221.0], [61.0, 9450.0], [63.0, 10175.0], [62.0, 9721.0], [67.0, 10214.5], [65.0, 8524.5], [71.0, 8995.0], [69.0, 8560.5], [68.0, 8489.0], [74.0, 8772.333333333334], [73.0, 9440.666666666666], [79.0, 7560.0], [78.0, 9419.0], [77.0, 7541.0], [82.0, 9035.0], [81.0, 8912.0], [86.0, 8585.0], [85.0, 7440.5], [90.0, 8942.5], [89.0, 9032.666666666666], [88.0, 8356.0], [95.0, 10157.0], [99.0, 7442.0], [98.0, 7351.0], [96.0, 10796.0], [101.0, 7432.0], [106.0, 7427.0], [114.0, 7942.5], [118.0, 7305.0], [117.0, 8461.0], [122.0, 7298.5], [121.0, 7274.0], [127.0, 7355.0], [126.0, 7340.5], [125.0, 7368.0], [124.0, 7350.666666666667], [135.0, 9256.5], [134.0, 9243.666666666666], [132.0, 7971.0], [129.0, 10230.0], [128.0, 7316.0], [142.0, 7081.0], [141.0, 10065.333333333334], [140.0, 9422.0], [139.0, 9741.5], [136.0, 9312.0], [150.0, 9781.0], [147.0, 9369.0], [146.0, 9727.5], [159.0, 6959.0], [158.0, 6998.0], [157.0, 8890.0], [166.0, 7030.666666666667], [164.0, 7150.0], [163.0, 7058.0], [162.0, 7064.666666666667], [175.0, 6857.0], [168.0, 6872.0], [183.0, 6839.0], [181.0, 6845.666666666667], [180.0, 6865.0], [179.0, 6852.5], [190.0, 7852.5], [188.0, 6850.8], [185.0, 6834.0], [184.0, 6832.5], [199.0, 8389.333333333334], [198.0, 9104.0], [197.0, 9845.0], [206.0, 10823.0], [205.0, 6721.0], [204.0, 9682.0], [203.0, 6688.0], [201.0, 8686.0], [215.0, 7765.666666666667], [213.0, 6726.0], [212.0, 9808.0], [211.0, 10278.0], [208.0, 10812.0], [217.0, 6565.0], [216.0, 6780.0], [224.0, 10749.0], [239.0, 6657.0], [238.0, 7865.75], [237.0, 6551.75], [235.0, 6568.0], [233.0, 6617.0], [246.0, 8354.0], [245.0, 8218.0], [244.0, 7509.0], [240.0, 8376.0], [254.0, 6386.0], [253.0, 9650.0], [252.0, 6949.8], [250.0, 7070.5], [249.0, 7446.5], [248.0, 10411.0], [271.0, 9248.5], [270.0, 9124.0], [269.0, 9509.0], [267.0, 6489.0], [265.0, 7408.0], [262.0, 9330.0], [260.0, 6884.5], [256.0, 8531.75], [286.0, 7809.0], [284.0, 8061.142857142857], [283.0, 6313.5], [281.0, 7870.5], [279.0, 8896.5], [277.0, 8615.333333333334], [276.0, 9084.333333333334], [275.0, 9117.0], [273.0, 9169.0], [300.0, 8682.0], [298.0, 7113.2], [294.0, 6002.0], [293.0, 6073.0], [316.0, 9019.0], [319.0, 9345.0], [318.0, 6868.333333333334], [317.0, 7457.0], [312.0, 14433.0], [310.0, 9253.0], [309.0, 9300.0], [308.0, 10082.0], [305.0, 6862.5], [332.0, 7250.0], [331.0, 7170.666666666667], [329.0, 6722.0], [323.0, 6962.0], [322.0, 7946.5], [321.0, 7877.0], [350.0, 7058.0], [347.0, 7120.333333333333], [346.0, 7058.0], [343.0, 7121.333333333333], [341.0, 7087.0], [338.0, 7097.0], [337.0, 7111.0], [336.0, 7101.333333333333], [355.0, 7160.0], [366.0, 5521.0], [367.0, 5460.0], [365.0, 7725.5], [362.0, 5483.0], [361.0, 8488.0], [357.0, 7016.888888888889], [352.0, 7318.5], [354.0, 7190.0], [353.0, 7229.0], [381.0, 5283.0], [380.0, 8551.0], [379.0, 7912.0], [378.0, 8261.0], [375.0, 6451.0], [374.0, 9036.0], [369.0, 5454.5], [397.0, 7506.0], [398.0, 8835.0], [396.0, 8072.5], [387.0, 8613.0], [385.0, 5248.0], [384.0, 5209.0], [395.0, 8509.0], [394.0, 7228.0], [392.0, 6195.5], [390.0, 5684.5], [389.0, 5224.0], [388.0, 5209.0], [413.0, 7798.2], [412.0, 7744.0], [411.0, 7754.0], [410.0, 7750.0], [409.0, 7750.0], [408.0, 8323.0], [406.0, 8030.0], [404.0, 7408.0], [403.0, 7789.0], [431.0, 7828.0], [428.0, 6940.545454545455], [427.0, 7242.0], [425.0, 7151.0], [423.0, 7600.0], [422.0, 7603.0], [421.0, 9123.0], [420.0, 6871.0], [417.0, 7383.0], [416.0, 7201.0], [447.0, 4780.0], [446.0, 6435.25], [443.0, 8442.0], [440.0, 4714.5], [435.0, 4795.0], [462.0, 5583.5], [459.0, 7708.0], [458.0, 6673.0], [456.0, 6384.0], [455.0, 5467.2], [475.0, 4794.692307692307], [476.0, 5213.823275862071], [478.0, 6471.0], [477.0, 6663.0], [474.0, 7306.0], [472.0, 5623.0], [465.0, 4647.0], [492.0, 7129.5], [485.0, 4819.0], [484.0, 6496.4], [491.0, 4352.0], [490.0, 6090.25], [488.0, 6740.0], [486.0, 4395.0], [480.0, 4632.0], [483.0, 5195.8], [482.0, 6660.333333333333], [510.0, 6909.0], [506.0, 7111.0], [502.0, 6880.0], [500.0, 5672.307692307692], [508.0, 7308.0], [503.0, 5808.0], [501.0, 6680.142857142857], [527.0, 6414.714285714285], [539.0, 6946.0], [536.0, 6173.5], [519.0, 7224.0], [518.0, 7241.0], [517.0, 5896.444444444444], [516.0, 7121.8], [515.0, 6503.666666666667], [512.0, 7069.0], [514.0, 7228.0], [535.0, 7314.0], [533.0, 5715.0], [532.0, 7295.0], [525.0, 5983.0], [526.0, 7188.312500000001], [524.0, 6969.857142857142], [523.0, 5998.172413793103], [522.0, 7098.5], [521.0, 6075.5], [520.0, 5964.333333333333], [569.0, 6827.25], [572.0, 5988.0], [571.0, 6134.8], [575.0, 6827.5], [574.0, 7947.0], [568.0, 6820.0], [548.0, 6914.0], [546.0, 6927.0], [566.0, 6511.0], [557.0, 5595.0], [552.0, 6274.5], [583.0, 7064.0], [599.0, 7581.0], [591.0, 6185.0], [606.0, 7249.0], [604.0, 6309.0], [602.0, 5279.0], [584.0, 6825.0], [581.0, 6832.0], [579.0, 6793.0], [578.0, 6815.0], [576.0, 6841.0], [611.0, 6878.75], [619.0, 7151.0], [623.0, 6292.888888888889], [610.0, 6735.0], [608.0, 6712.0], [617.0, 6180.333333333333], [626.0, 5398.333333333333], [625.0, 5060.0], [615.0, 5470.0], [614.0, 6880.0], [622.0, 5168.444444444444], [621.0, 6859.0], [616.0, 5150.0], [671.0, 5312.5], [660.0, 5438.0], [670.0, 7011.0], [669.0, 6161.0], [665.0, 6579.0], [647.0, 4923.0], [655.0, 4760.0], [654.0, 4797.0], [651.0, 4645.0], [650.0, 4861.0], [662.0, 3846.0], [661.0, 4744.25], [658.0, 4833.0], [657.0, 4794.0], [688.0, 2820.0], [703.0, 4971.0], [678.0, 4622.0], [677.0, 2780.0], [676.0, 2818.6666666666665], [675.0, 2823.0], [674.0, 2841.25], [673.0, 3255.9], [691.0, 2699.0], [690.0, 2712.0], [689.0, 2710.0], [687.0, 2715.6666666666665], [686.0, 2728.3333333333335], [685.0, 2741.5], [684.0, 2741.0], [682.0, 2755.0], [681.0, 2753.0], [729.0, 3594.0], [723.0, 6534.833333333333], [727.0, 6450.583333333334], [733.0, 2475.0], [728.0, 3913.5], [710.0, 6159.0], [709.0, 3763.25], [708.0, 2546.6666666666665], [707.0, 2669.0], [705.0, 2535.0], [719.0, 3431.0], [716.0, 4156.0], [715.0, 2397.0], [712.0, 2576.0], [726.0, 2439.5], [724.0, 3401.5], [721.0, 2422.0], [720.0, 2391.0], [761.0, 3651.5], [763.0, 2776.4285714285716], [766.0, 2166.0], [762.0, 2850.3333333333335], [758.0, 3043.5], [757.0, 3324.0], [749.0, 5573.0], [738.0, 2393.0], [741.0, 2402.0], [739.0, 2399.3333333333335], [743.0, 4954.0], [742.0, 3381.8571428571427], [746.0, 4329.0], [745.0, 4565.0], [744.0, 4602.0], [794.0, 3440.0], [795.0, 1738.0], [793.0, 1963.0], [792.0, 1777.0], [791.0, 3811.0], [788.0, 5520.0], [786.0, 5522.0], [783.0, 4556.0], [773.0, 4614.0], [772.0, 1920.0], [771.0, 3575.4], [778.0, 4255.0], [830.0, 3367.7333333333336], [831.0, 1607.0], [817.0, 8440.0], [816.0, 4054.0], [829.0, 6229.916666666667], [828.0, 3094.5], [826.0, 3559.2499999999995], [825.0, 4576.5], [824.0, 1687.8], [807.0, 1746.0], [815.0, 7880.0], [814.0, 10804.0], [812.0, 8114.5], [822.0, 7866.0], [821.0, 1692.0], [850.0, 3016.0], [862.0, 2924.3333333333335], [860.0, 3338.3333333333335], [853.0, 3597.0], [838.0, 1561.0], [837.0, 1562.0], [833.0, 1462.0], [888.0, 2901.8999999999996], [875.0, 3482.0], [886.0, 3274.0], [887.0, 1671.0], [885.0, 3069.0], [884.0, 4507.0], [879.0, 5326.8], [865.0, 3416.0], [868.0, 2938.0], [867.0, 3398.2], [871.0, 3135.0], [870.0, 3252.5], [878.0, 3647.4], [876.0, 9794.0], [921.0, 3163.6666666666665], [905.0, 3107.5], [927.0, 4096.0], [925.0, 4277.5], [924.0, 1426.0], [922.0, 3974.0], [909.0, 4192.0], [900.0, 2950.0], [908.0, 955.3333333333334], [907.0, 1328.625], [906.0, 2678.076923076923], [956.0, 3716.0], [934.0, 4452.0], [951.0, 3527.0], [958.0, 3667.5], [957.0, 3700.0], [954.0, 3731.0], [952.0, 3515.5384615384614], [933.0, 3904.0], [932.0, 5496.0], [930.0, 9009.0], [971.0, 3331.0], [973.0, 3602.0], [1128.0, 1068.0], [1143.0, 2399.935483870968], [1146.0, 2097.0], [1141.0, 5616.0], [1139.0, 705.0], [1137.0, 696.0], [1131.0, 671.0], [1130.0, 3226.6666666666665], [1129.0, 638.5], [1127.0, 625.0], [1102.0, 6791.0], [1171.0, 7847.397058823532], [1155.0, 2320.9333333333334], [1162.0, 2172.5]], "isOverall": false, "label": "register", "isController": false}, {"data": [[582.3213333333324, 5760.862000000002]], "isOverall": false, "label": "register-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1171.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 14925.0, "minX": 1.66747842E12, "maxY": 84497.16666666667, "series": [{"data": [[1.66747842E12, 84497.16666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66747842E12, 14925.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66747842E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 211.38533333333342, "minX": 1.66747842E12, "maxY": 5760.862000000002, "series": [{"data": [[1.66747842E12, 211.38533333333342]], "isOverall": false, "label": "getUser", "isController": false}, {"data": [[1.66747842E12, 328.91466666666565]], "isOverall": false, "label": "getListOfUser", "isController": false}, {"data": [[1.66747842E12, 5760.862000000002]], "isOverall": false, "label": "register", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66747842E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 211.35933333333324, "minX": 1.66747842E12, "maxY": 5734.994000000001, "series": [{"data": [[1.66747842E12, 211.35933333333324]], "isOverall": false, "label": "getUser", "isController": false}, {"data": [[1.66747842E12, 267.3759999999999]], "isOverall": false, "label": "getListOfUser", "isController": false}, {"data": [[1.66747842E12, 5734.994000000001]], "isOverall": false, "label": "register", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66747842E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.66747842E12, "maxY": 5265.985333333333, "series": [{"data": [[1.66747842E12, 0.0]], "isOverall": false, "label": "getUser", "isController": false}, {"data": [[1.66747842E12, 0.0]], "isOverall": false, "label": "getListOfUser", "isController": false}, {"data": [[1.66747842E12, 5265.985333333333]], "isOverall": false, "label": "register", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66747842E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 72.0, "minX": 1.66747842E12, "maxY": 14433.0, "series": [{"data": [[1.66747842E12, 14433.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66747842E12, 72.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66747842E12, 7160.9]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66747842E12, 9907.949999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66747842E12, 429.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.66747842E12, 8200.499999999998]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66747842E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 82.0, "minX": 47.0, "maxY": 6080.0, "series": [{"data": [[521.0, 464.0], [139.0, 82.0], [47.0, 4779.0], [240.0, 5270.0], [285.0, 112.0], [297.0, 95.0], [76.0, 6080.0], [356.0, 90.0], [370.0, 925.0], [375.0, 98.0], [390.0, 99.0], [415.0, 438.0], [405.0, 102.0], [464.0, 92.5], [120.0, 1655.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 521.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 82.0, "minX": 47.0, "maxY": 6080.0, "series": [{"data": [[521.0, 449.0], [139.0, 82.0], [47.0, 4454.0], [240.0, 5207.5], [285.0, 111.0], [297.0, 95.0], [76.0, 6080.0], [356.0, 90.0], [370.0, 477.5], [375.0, 97.0], [390.0, 99.0], [415.0, 438.0], [405.0, 102.0], [464.0, 92.0], [120.0, 1655.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 521.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 75.0, "minX": 1.66747842E12, "maxY": 75.0, "series": [{"data": [[1.66747842E12, 75.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66747842E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 75.0, "minX": 1.66747842E12, "maxY": 75.0, "series": [{"data": [[1.66747842E12, 75.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66747842E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 25.0, "minX": 1.66747842E12, "maxY": 25.0, "series": [{"data": [[1.66747842E12, 25.0]], "isOverall": false, "label": "register-success", "isController": false}, {"data": [[1.66747842E12, 25.0]], "isOverall": false, "label": "getUser-success", "isController": false}, {"data": [[1.66747842E12, 25.0]], "isOverall": false, "label": "getListOfUser-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66747842E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 75.0, "minX": 1.66747842E12, "maxY": 75.0, "series": [{"data": [[1.66747842E12, 75.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66747842E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

