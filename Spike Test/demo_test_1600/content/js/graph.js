/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 72.0, "minX": 0.0, "maxY": 19370.0, "series": [{"data": [[0.0, 72.0], [0.1, 73.0], [0.2, 74.0], [0.3, 75.0], [0.4, 75.0], [0.5, 75.0], [0.6, 75.0], [0.7, 76.0], [0.8, 76.0], [0.9, 77.0], [1.0, 77.0], [1.1, 77.0], [1.2, 77.0], [1.3, 77.0], [1.4, 78.0], [1.5, 78.0], [1.6, 78.0], [1.7, 78.0], [1.8, 78.0], [1.9, 78.0], [2.0, 78.0], [2.1, 78.0], [2.2, 78.0], [2.3, 78.0], [2.4, 79.0], [2.5, 79.0], [2.6, 79.0], [2.7, 79.0], [2.8, 79.0], [2.9, 79.0], [3.0, 79.0], [3.1, 79.0], [3.2, 80.0], [3.3, 80.0], [3.4, 80.0], [3.5, 80.0], [3.6, 80.0], [3.7, 80.0], [3.8, 80.0], [3.9, 80.0], [4.0, 80.0], [4.1, 80.0], [4.2, 80.0], [4.3, 80.0], [4.4, 80.0], [4.5, 80.0], [4.6, 80.0], [4.7, 80.0], [4.8, 80.0], [4.9, 81.0], [5.0, 81.0], [5.1, 81.0], [5.2, 81.0], [5.3, 81.0], [5.4, 81.0], [5.5, 81.0], [5.6, 81.0], [5.7, 81.0], [5.8, 81.0], [5.9, 81.0], [6.0, 81.0], [6.1, 81.0], [6.2, 81.0], [6.3, 81.0], [6.4, 81.0], [6.5, 81.0], [6.6, 81.0], [6.7, 81.0], [6.8, 81.0], [6.9, 82.0], [7.0, 82.0], [7.1, 82.0], [7.2, 82.0], [7.3, 82.0], [7.4, 82.0], [7.5, 82.0], [7.6, 82.0], [7.7, 82.0], [7.8, 82.0], [7.9, 82.0], [8.0, 82.0], [8.1, 82.0], [8.2, 82.0], [8.3, 82.0], [8.4, 82.0], [8.5, 82.0], [8.6, 82.0], [8.7, 82.0], [8.8, 82.0], [8.9, 83.0], [9.0, 83.0], [9.1, 83.0], [9.2, 83.0], [9.3, 83.0], [9.4, 83.0], [9.5, 83.0], [9.6, 83.0], [9.7, 83.0], [9.8, 83.0], [9.9, 83.0], [10.0, 83.0], [10.1, 83.0], [10.2, 83.0], [10.3, 83.0], [10.4, 83.0], [10.5, 83.0], [10.6, 83.0], [10.7, 83.0], [10.8, 83.0], [10.9, 83.0], [11.0, 84.0], [11.1, 84.0], [11.2, 84.0], [11.3, 84.0], [11.4, 84.0], [11.5, 84.0], [11.6, 84.0], [11.7, 84.0], [11.8, 84.0], [11.9, 84.0], [12.0, 84.0], [12.1, 84.0], [12.2, 84.0], [12.3, 85.0], [12.4, 85.0], [12.5, 85.0], [12.6, 85.0], [12.7, 85.0], [12.8, 85.0], [12.9, 85.0], [13.0, 85.0], [13.1, 85.0], [13.2, 85.0], [13.3, 85.0], [13.4, 85.0], [13.5, 85.0], [13.6, 85.0], [13.7, 85.0], [13.8, 85.0], [13.9, 86.0], [14.0, 86.0], [14.1, 86.0], [14.2, 86.0], [14.3, 86.0], [14.4, 86.0], [14.5, 86.0], [14.6, 86.0], [14.7, 86.0], [14.8, 86.0], [14.9, 86.0], [15.0, 87.0], [15.1, 87.0], [15.2, 87.0], [15.3, 87.0], [15.4, 87.0], [15.5, 87.0], [15.6, 87.0], [15.7, 87.0], [15.8, 87.0], [15.9, 87.0], [16.0, 87.0], [16.1, 87.0], [16.2, 88.0], [16.3, 88.0], [16.4, 88.0], [16.5, 88.0], [16.6, 88.0], [16.7, 88.0], [16.8, 88.0], [16.9, 88.0], [17.0, 88.0], [17.1, 88.0], [17.2, 88.0], [17.3, 89.0], [17.4, 89.0], [17.5, 89.0], [17.6, 89.0], [17.7, 89.0], [17.8, 89.0], [17.9, 89.0], [18.0, 89.0], [18.1, 89.0], [18.2, 89.0], [18.3, 90.0], [18.4, 90.0], [18.5, 90.0], [18.6, 90.0], [18.7, 90.0], [18.8, 90.0], [18.9, 90.0], [19.0, 90.0], [19.1, 90.0], [19.2, 90.0], [19.3, 90.0], [19.4, 91.0], [19.5, 91.0], [19.6, 91.0], [19.7, 91.0], [19.8, 91.0], [19.9, 91.0], [20.0, 91.0], [20.1, 91.0], [20.2, 91.0], [20.3, 91.0], [20.4, 92.0], [20.5, 92.0], [20.6, 92.0], [20.7, 92.0], [20.8, 92.0], [20.9, 92.0], [21.0, 92.0], [21.1, 92.0], [21.2, 92.0], [21.3, 92.0], [21.4, 93.0], [21.5, 93.0], [21.6, 93.0], [21.7, 93.0], [21.8, 93.0], [21.9, 93.0], [22.0, 93.0], [22.1, 93.0], [22.2, 93.0], [22.3, 93.0], [22.4, 93.0], [22.5, 93.0], [22.6, 94.0], [22.7, 94.0], [22.8, 94.0], [22.9, 94.0], [23.0, 94.0], [23.1, 94.0], [23.2, 94.0], [23.3, 94.0], [23.4, 94.0], [23.5, 94.0], [23.6, 94.0], [23.7, 95.0], [23.8, 95.0], [23.9, 95.0], [24.0, 95.0], [24.1, 95.0], [24.2, 95.0], [24.3, 95.0], [24.4, 95.0], [24.5, 95.0], [24.6, 95.0], [24.7, 95.0], [24.8, 95.0], [24.9, 95.0], [25.0, 95.0], [25.1, 95.0], [25.2, 95.0], [25.3, 95.0], [25.4, 96.0], [25.5, 96.0], [25.6, 96.0], [25.7, 96.0], [25.8, 96.0], [25.9, 96.0], [26.0, 96.0], [26.1, 96.0], [26.2, 96.0], [26.3, 96.0], [26.4, 96.0], [26.5, 96.0], [26.6, 96.0], [26.7, 96.0], [26.8, 97.0], [26.9, 97.0], [27.0, 97.0], [27.1, 97.0], [27.2, 97.0], [27.3, 97.0], [27.4, 97.0], [27.5, 97.0], [27.6, 97.0], [27.7, 97.0], [27.8, 98.0], [27.9, 98.0], [28.0, 98.0], [28.1, 98.0], [28.2, 98.0], [28.3, 98.0], [28.4, 98.0], [28.5, 98.0], [28.6, 98.0], [28.7, 98.0], [28.8, 98.0], [28.9, 98.0], [29.0, 98.0], [29.1, 98.0], [29.2, 98.0], [29.3, 98.0], [29.4, 98.0], [29.5, 98.0], [29.6, 98.0], [29.7, 99.0], [29.8, 99.0], [29.9, 99.0], [30.0, 99.0], [30.1, 99.0], [30.2, 99.0], [30.3, 99.0], [30.4, 99.0], [30.5, 99.0], [30.6, 99.0], [30.7, 99.0], [30.8, 99.0], [30.9, 99.0], [31.0, 99.0], [31.1, 100.0], [31.2, 100.0], [31.3, 100.0], [31.4, 100.0], [31.5, 100.0], [31.6, 100.0], [31.7, 100.0], [31.8, 100.0], [31.9, 100.0], [32.0, 100.0], [32.1, 101.0], [32.2, 101.0], [32.3, 101.0], [32.4, 101.0], [32.5, 101.0], [32.6, 101.0], [32.7, 101.0], [32.8, 101.0], [32.9, 101.0], [33.0, 101.0], [33.1, 101.0], [33.2, 101.0], [33.3, 101.0], [33.4, 102.0], [33.5, 102.0], [33.6, 102.0], [33.7, 102.0], [33.8, 102.0], [33.9, 102.0], [34.0, 103.0], [34.1, 103.0], [34.2, 103.0], [34.3, 103.0], [34.4, 103.0], [34.5, 103.0], [34.6, 103.0], [34.7, 103.0], [34.8, 103.0], [34.9, 103.0], [35.0, 103.0], [35.1, 104.0], [35.2, 104.0], [35.3, 104.0], [35.4, 104.0], [35.5, 104.0], [35.6, 104.0], [35.7, 104.0], [35.8, 104.0], [35.9, 105.0], [36.0, 105.0], [36.1, 105.0], [36.2, 105.0], [36.3, 105.0], [36.4, 105.0], [36.5, 105.0], [36.6, 105.0], [36.7, 105.0], [36.8, 105.0], [36.9, 106.0], [37.0, 106.0], [37.1, 106.0], [37.2, 106.0], [37.3, 106.0], [37.4, 106.0], [37.5, 106.0], [37.6, 106.0], [37.7, 106.0], [37.8, 106.0], [37.9, 107.0], [38.0, 107.0], [38.1, 107.0], [38.2, 107.0], [38.3, 107.0], [38.4, 107.0], [38.5, 107.0], [38.6, 108.0], [38.7, 108.0], [38.8, 108.0], [38.9, 108.0], [39.0, 108.0], [39.1, 108.0], [39.2, 108.0], [39.3, 109.0], [39.4, 109.0], [39.5, 109.0], [39.6, 109.0], [39.7, 109.0], [39.8, 109.0], [39.9, 109.0], [40.0, 109.0], [40.1, 109.0], [40.2, 110.0], [40.3, 110.0], [40.4, 110.0], [40.5, 110.0], [40.6, 110.0], [40.7, 110.0], [40.8, 110.0], [40.9, 111.0], [41.0, 111.0], [41.1, 111.0], [41.2, 111.0], [41.3, 112.0], [41.4, 112.0], [41.5, 112.0], [41.6, 112.0], [41.7, 112.0], [41.8, 112.0], [41.9, 113.0], [42.0, 113.0], [42.1, 113.0], [42.2, 113.0], [42.3, 113.0], [42.4, 114.0], [42.5, 114.0], [42.6, 114.0], [42.7, 114.0], [42.8, 114.0], [42.9, 115.0], [43.0, 115.0], [43.1, 115.0], [43.2, 115.0], [43.3, 115.0], [43.4, 115.0], [43.5, 115.0], [43.6, 115.0], [43.7, 116.0], [43.8, 116.0], [43.9, 116.0], [44.0, 116.0], [44.1, 116.0], [44.2, 116.0], [44.3, 116.0], [44.4, 116.0], [44.5, 117.0], [44.6, 117.0], [44.7, 117.0], [44.8, 117.0], [44.9, 117.0], [45.0, 118.0], [45.1, 118.0], [45.2, 118.0], [45.3, 118.0], [45.4, 118.0], [45.5, 118.0], [45.6, 118.0], [45.7, 119.0], [45.8, 119.0], [45.9, 119.0], [46.0, 119.0], [46.1, 119.0], [46.2, 119.0], [46.3, 119.0], [46.4, 119.0], [46.5, 119.0], [46.6, 119.0], [46.7, 120.0], [46.8, 120.0], [46.9, 120.0], [47.0, 120.0], [47.1, 121.0], [47.2, 121.0], [47.3, 121.0], [47.4, 121.0], [47.5, 121.0], [47.6, 121.0], [47.7, 121.0], [47.8, 121.0], [47.9, 121.0], [48.0, 122.0], [48.1, 122.0], [48.2, 122.0], [48.3, 122.0], [48.4, 122.0], [48.5, 122.0], [48.6, 122.0], [48.7, 122.0], [48.8, 123.0], [48.9, 123.0], [49.0, 123.0], [49.1, 123.0], [49.2, 123.0], [49.3, 123.0], [49.4, 123.0], [49.5, 123.0], [49.6, 123.0], [49.7, 123.0], [49.8, 123.0], [49.9, 124.0], [50.0, 124.0], [50.1, 124.0], [50.2, 124.0], [50.3, 124.0], [50.4, 124.0], [50.5, 125.0], [50.6, 125.0], [50.7, 125.0], [50.8, 125.0], [50.9, 125.0], [51.0, 125.0], [51.1, 125.0], [51.2, 125.0], [51.3, 125.0], [51.4, 125.0], [51.5, 126.0], [51.6, 126.0], [51.7, 126.0], [51.8, 126.0], [51.9, 126.0], [52.0, 126.0], [52.1, 126.0], [52.2, 126.0], [52.3, 126.0], [52.4, 127.0], [52.5, 127.0], [52.6, 127.0], [52.7, 127.0], [52.8, 127.0], [52.9, 127.0], [53.0, 127.0], [53.1, 127.0], [53.2, 127.0], [53.3, 127.0], [53.4, 127.0], [53.5, 128.0], [53.6, 128.0], [53.7, 128.0], [53.8, 128.0], [53.9, 128.0], [54.0, 128.0], [54.1, 128.0], [54.2, 128.0], [54.3, 128.0], [54.4, 128.0], [54.5, 128.0], [54.6, 129.0], [54.7, 129.0], [54.8, 129.0], [54.9, 129.0], [55.0, 129.0], [55.1, 129.0], [55.2, 129.0], [55.3, 129.0], [55.4, 130.0], [55.5, 130.0], [55.6, 130.0], [55.7, 130.0], [55.8, 130.0], [55.9, 130.0], [56.0, 130.0], [56.1, 130.0], [56.2, 130.0], [56.3, 130.0], [56.4, 131.0], [56.5, 131.0], [56.6, 131.0], [56.7, 131.0], [56.8, 131.0], [56.9, 131.0], [57.0, 132.0], [57.1, 132.0], [57.2, 132.0], [57.3, 132.0], [57.4, 132.0], [57.5, 132.0], [57.6, 133.0], [57.7, 133.0], [57.8, 133.0], [57.9, 133.0], [58.0, 133.0], [58.1, 133.0], [58.2, 134.0], [58.3, 134.0], [58.4, 134.0], [58.5, 134.0], [58.6, 134.0], [58.7, 134.0], [58.8, 134.0], [58.9, 134.0], [59.0, 134.0], [59.1, 135.0], [59.2, 135.0], [59.3, 135.0], [59.4, 135.0], [59.5, 135.0], [59.6, 135.0], [59.7, 135.0], [59.8, 136.0], [59.9, 136.0], [60.0, 136.0], [60.1, 136.0], [60.2, 136.0], [60.3, 136.0], [60.4, 137.0], [60.5, 137.0], [60.6, 137.0], [60.7, 137.0], [60.8, 137.0], [60.9, 137.0], [61.0, 137.0], [61.1, 137.0], [61.2, 138.0], [61.3, 138.0], [61.4, 138.0], [61.5, 138.0], [61.6, 138.0], [61.7, 138.0], [61.8, 138.0], [61.9, 138.0], [62.0, 139.0], [62.1, 139.0], [62.2, 139.0], [62.3, 139.0], [62.4, 139.0], [62.5, 139.0], [62.6, 140.0], [62.7, 140.0], [62.8, 140.0], [62.9, 141.0], [63.0, 141.0], [63.1, 141.0], [63.2, 141.0], [63.3, 141.0], [63.4, 141.0], [63.5, 142.0], [63.6, 142.0], [63.7, 142.0], [63.8, 142.0], [63.9, 143.0], [64.0, 143.0], [64.1, 145.0], [64.2, 146.0], [64.3, 151.0], [64.4, 151.0], [64.5, 161.0], [64.6, 163.0], [64.7, 165.0], [64.8, 165.0], [64.9, 167.0], [65.0, 171.0], [65.1, 171.0], [65.2, 178.0], [65.3, 181.0], [65.4, 182.0], [65.5, 186.0], [65.6, 187.0], [65.7, 190.0], [65.8, 192.0], [65.9, 199.0], [66.0, 203.0], [66.1, 203.0], [66.2, 206.0], [66.3, 207.0], [66.4, 208.0], [66.5, 210.0], [66.6, 212.0], [66.7, 227.0], [66.8, 228.0], [66.9, 234.0], [67.0, 239.0], [67.1, 251.0], [67.2, 257.0], [67.3, 275.0], [67.4, 280.0], [67.5, 287.0], [67.6, 289.0], [67.7, 297.0], [67.8, 300.0], [67.9, 302.0], [68.0, 303.0], [68.1, 304.0], [68.2, 308.0], [68.3, 309.0], [68.4, 315.0], [68.5, 318.0], [68.6, 322.0], [68.7, 326.0], [68.8, 329.0], [68.9, 331.0], [69.0, 332.0], [69.1, 333.0], [69.2, 333.0], [69.3, 335.0], [69.4, 338.0], [69.5, 344.0], [69.6, 345.0], [69.7, 348.0], [69.8, 349.0], [69.9, 351.0], [70.0, 352.0], [70.1, 356.0], [70.2, 359.0], [70.3, 361.0], [70.4, 377.0], [70.5, 381.0], [70.6, 381.0], [70.7, 382.0], [70.8, 382.0], [70.9, 384.0], [71.0, 385.0], [71.1, 387.0], [71.2, 392.0], [71.3, 392.0], [71.4, 393.0], [71.5, 394.0], [71.6, 395.0], [71.7, 396.0], [71.8, 396.0], [71.9, 397.0], [72.0, 397.0], [72.1, 398.0], [72.2, 399.0], [72.3, 400.0], [72.4, 403.0], [72.5, 403.0], [72.6, 404.0], [72.7, 404.0], [72.8, 406.0], [72.9, 406.0], [73.0, 406.0], [73.1, 406.0], [73.2, 407.0], [73.3, 407.0], [73.4, 407.0], [73.5, 408.0], [73.6, 409.0], [73.7, 409.0], [73.8, 410.0], [73.9, 411.0], [74.0, 411.0], [74.1, 411.0], [74.2, 412.0], [74.3, 412.0], [74.4, 413.0], [74.5, 413.0], [74.6, 413.0], [74.7, 414.0], [74.8, 414.0], [74.9, 415.0], [75.0, 417.0], [75.1, 417.0], [75.2, 420.0], [75.3, 420.0], [75.4, 422.0], [75.5, 423.0], [75.6, 424.0], [75.7, 424.0], [75.8, 426.0], [75.9, 427.0], [76.0, 428.0], [76.1, 429.0], [76.2, 430.0], [76.3, 431.0], [76.4, 433.0], [76.5, 434.0], [76.6, 435.0], [76.7, 437.0], [76.8, 438.0], [76.9, 441.0], [77.0, 443.0], [77.1, 444.0], [77.2, 445.0], [77.3, 447.0], [77.4, 450.0], [77.5, 452.0], [77.6, 453.0], [77.7, 454.0], [77.8, 457.0], [77.9, 458.0], [78.0, 461.0], [78.1, 463.0], [78.2, 465.0], [78.3, 467.0], [78.4, 468.0], [78.5, 470.0], [78.6, 471.0], [78.7, 473.0], [78.8, 474.0], [78.9, 475.0], [79.0, 484.0], [79.1, 485.0], [79.2, 487.0], [79.3, 487.0], [79.4, 489.0], [79.5, 491.0], [79.6, 492.0], [79.7, 497.0], [79.8, 500.0], [79.9, 505.0], [80.0, 507.0], [80.1, 507.0], [80.2, 508.0], [80.3, 509.0], [80.4, 512.0], [80.5, 514.0], [80.6, 514.0], [80.7, 520.0], [80.8, 522.0], [80.9, 523.0], [81.0, 525.0], [81.1, 529.0], [81.2, 530.0], [81.3, 536.0], [81.4, 546.0], [81.5, 554.0], [81.6, 556.0], [81.7, 560.0], [81.8, 565.0], [81.9, 580.0], [82.0, 581.0], [82.1, 581.0], [82.2, 586.0], [82.3, 587.0], [82.4, 588.0], [82.5, 589.0], [82.6, 590.0], [82.7, 599.0], [82.8, 606.0], [82.9, 609.0], [83.0, 621.0], [83.1, 623.0], [83.2, 677.0], [83.3, 688.0], [83.4, 700.0], [83.5, 708.0], [83.6, 724.0], [83.7, 726.0], [83.8, 731.0], [83.9, 736.0], [84.0, 760.0], [84.1, 786.0], [84.2, 815.0], [84.3, 824.0], [84.4, 836.0], [84.5, 852.0], [84.6, 883.0], [84.7, 904.0], [84.8, 911.0], [84.9, 943.0], [85.0, 1051.0], [85.1, 1054.0], [85.2, 1108.0], [85.3, 1201.0], [85.4, 1216.0], [85.5, 1236.0], [85.6, 1240.0], [85.7, 1270.0], [85.8, 1275.0], [85.9, 1286.0], [86.0, 1291.0], [86.1, 1292.0], [86.2, 1296.0], [86.3, 1297.0], [86.4, 1303.0], [86.5, 1330.0], [86.6, 1366.0], [86.7, 1376.0], [86.8, 1378.0], [86.9, 1385.0], [87.0, 1387.0], [87.1, 1388.0], [87.2, 1397.0], [87.3, 1398.0], [87.4, 1428.0], [87.5, 1610.0], [87.6, 1648.0], [87.7, 1739.0], [87.8, 1748.0], [87.9, 1794.0], [88.0, 1817.0], [88.1, 1828.0], [88.2, 1836.0], [88.3, 1836.0], [88.4, 1839.0], [88.5, 1846.0], [88.6, 1853.0], [88.7, 1858.0], [88.8, 1868.0], [88.9, 1871.0], [89.0, 1878.0], [89.1, 1881.0], [89.2, 1894.0], [89.3, 1900.0], [89.4, 1901.0], [89.5, 1904.0], [89.6, 1905.0], [89.7, 1909.0], [89.8, 1909.0], [89.9, 1911.0], [90.0, 1920.0], [90.1, 1923.0], [90.2, 1930.0], [90.3, 1930.0], [90.4, 1951.0], [90.5, 1954.0], [90.6, 1955.0], [90.7, 1957.0], [90.8, 1958.0], [90.9, 1972.0], [91.0, 1975.0], [91.1, 1978.0], [91.2, 1980.0], [91.3, 1988.0], [91.4, 2006.0], [91.5, 2016.0], [91.6, 2026.0], [91.7, 2034.0], [91.8, 2035.0], [91.9, 2039.0], [92.0, 2043.0], [92.1, 2045.0], [92.2, 2050.0], [92.3, 2057.0], [92.4, 2064.0], [92.5, 2072.0], [92.6, 2078.0], [92.7, 2160.0], [92.8, 2165.0], [92.9, 2284.0], [93.0, 2313.0], [93.1, 2413.0], [93.2, 2435.0], [93.3, 2435.0], [93.4, 2442.0], [93.5, 2446.0], [93.6, 2447.0], [93.7, 2454.0], [93.8, 2456.0], [93.9, 2457.0], [94.0, 2463.0], [94.1, 2464.0], [94.2, 2467.0], [94.3, 2469.0], [94.4, 2473.0], [94.5, 2478.0], [94.6, 2483.0], [94.7, 2485.0], [94.8, 2487.0], [94.9, 2502.0], [95.0, 2509.0], [95.1, 2518.0], [95.2, 2519.0], [95.3, 2544.0], [95.4, 2552.0], [95.5, 2558.0], [95.6, 2567.0], [95.7, 2578.0], [95.8, 2584.0], [95.9, 2596.0], [96.0, 2603.0], [96.1, 2612.0], [96.2, 2648.0], [96.3, 2649.0], [96.4, 2680.0], [96.5, 2682.0], [96.6, 2684.0], [96.7, 2701.0], [96.8, 2705.0], [96.9, 2714.0], [97.0, 2728.0], [97.1, 2731.0], [97.2, 2737.0], [97.3, 2740.0], [97.4, 2747.0], [97.5, 2769.0], [97.6, 2770.0], [97.7, 2778.0], [97.8, 2780.0], [97.9, 2800.0], [98.0, 2808.0], [98.1, 2823.0], [98.2, 2866.0], [98.3, 2884.0], [98.4, 2924.0], [98.5, 2960.0], [98.6, 2960.0], [98.7, 3068.0], [98.8, 3071.0], [98.9, 3582.0], [99.0, 4774.0], [99.1, 4780.0], [99.2, 5166.0], [99.3, 5169.0], [99.4, 5192.0], [99.5, 5298.0], [99.6, 5310.0], [99.7, 6034.0], [99.8, 6990.0], [99.9, 8490.0]], "isOverall": false, "label": "getUser", "isController": false}, {"data": [[0.0, 72.0], [0.1, 72.0], [0.2, 73.0], [0.3, 73.0], [0.4, 73.0], [0.5, 74.0], [0.6, 74.0], [0.7, 74.0], [0.8, 74.0], [0.9, 74.0], [1.0, 75.0], [1.1, 75.0], [1.2, 75.0], [1.3, 75.0], [1.4, 75.0], [1.5, 75.0], [1.6, 75.0], [1.7, 75.0], [1.8, 75.0], [1.9, 76.0], [2.0, 76.0], [2.1, 76.0], [2.2, 76.0], [2.3, 76.0], [2.4, 76.0], [2.5, 76.0], [2.6, 76.0], [2.7, 76.0], [2.8, 76.0], [2.9, 76.0], [3.0, 76.0], [3.1, 77.0], [3.2, 77.0], [3.3, 77.0], [3.4, 77.0], [3.5, 77.0], [3.6, 77.0], [3.7, 77.0], [3.8, 77.0], [3.9, 77.0], [4.0, 77.0], [4.1, 77.0], [4.2, 77.0], [4.3, 78.0], [4.4, 78.0], [4.5, 78.0], [4.6, 78.0], [4.7, 78.0], [4.8, 78.0], [4.9, 78.0], [5.0, 78.0], [5.1, 78.0], [5.2, 78.0], [5.3, 78.0], [5.4, 78.0], [5.5, 78.0], [5.6, 78.0], [5.7, 78.0], [5.8, 78.0], [5.9, 79.0], [6.0, 79.0], [6.1, 79.0], [6.2, 79.0], [6.3, 79.0], [6.4, 79.0], [6.5, 79.0], [6.6, 79.0], [6.7, 79.0], [6.8, 79.0], [6.9, 79.0], [7.0, 79.0], [7.1, 79.0], [7.2, 79.0], [7.3, 79.0], [7.4, 79.0], [7.5, 79.0], [7.6, 79.0], [7.7, 79.0], [7.8, 79.0], [7.9, 79.0], [8.0, 80.0], [8.1, 80.0], [8.2, 80.0], [8.3, 80.0], [8.4, 80.0], [8.5, 80.0], [8.6, 80.0], [8.7, 80.0], [8.8, 80.0], [8.9, 80.0], [9.0, 80.0], [9.1, 80.0], [9.2, 80.0], [9.3, 80.0], [9.4, 80.0], [9.5, 80.0], [9.6, 80.0], [9.7, 81.0], [9.8, 81.0], [9.9, 81.0], [10.0, 81.0], [10.1, 81.0], [10.2, 81.0], [10.3, 81.0], [10.4, 81.0], [10.5, 81.0], [10.6, 81.0], [10.7, 81.0], [10.8, 81.0], [10.9, 81.0], [11.0, 81.0], [11.1, 81.0], [11.2, 81.0], [11.3, 81.0], [11.4, 81.0], [11.5, 81.0], [11.6, 81.0], [11.7, 81.0], [11.8, 81.0], [11.9, 81.0], [12.0, 81.0], [12.1, 81.0], [12.2, 81.0], [12.3, 81.0], [12.4, 81.0], [12.5, 81.0], [12.6, 81.0], [12.7, 81.0], [12.8, 81.0], [12.9, 81.0], [13.0, 82.0], [13.1, 82.0], [13.2, 82.0], [13.3, 82.0], [13.4, 82.0], [13.5, 82.0], [13.6, 82.0], [13.7, 82.0], [13.8, 82.0], [13.9, 82.0], [14.0, 82.0], [14.1, 82.0], [14.2, 82.0], [14.3, 82.0], [14.4, 82.0], [14.5, 82.0], [14.6, 82.0], [14.7, 82.0], [14.8, 82.0], [14.9, 82.0], [15.0, 82.0], [15.1, 82.0], [15.2, 82.0], [15.3, 82.0], [15.4, 82.0], [15.5, 82.0], [15.6, 82.0], [15.7, 82.0], [15.8, 82.0], [15.9, 82.0], [16.0, 83.0], [16.1, 83.0], [16.2, 83.0], [16.3, 83.0], [16.4, 83.0], [16.5, 83.0], [16.6, 83.0], [16.7, 83.0], [16.8, 83.0], [16.9, 83.0], [17.0, 83.0], [17.1, 83.0], [17.2, 83.0], [17.3, 83.0], [17.4, 83.0], [17.5, 83.0], [17.6, 83.0], [17.7, 83.0], [17.8, 83.0], [17.9, 83.0], [18.0, 83.0], [18.1, 83.0], [18.2, 83.0], [18.3, 84.0], [18.4, 84.0], [18.5, 84.0], [18.6, 84.0], [18.7, 84.0], [18.8, 84.0], [18.9, 84.0], [19.0, 84.0], [19.1, 84.0], [19.2, 84.0], [19.3, 84.0], [19.4, 84.0], [19.5, 84.0], [19.6, 84.0], [19.7, 84.0], [19.8, 84.0], [19.9, 84.0], [20.0, 84.0], [20.1, 84.0], [20.2, 84.0], [20.3, 85.0], [20.4, 85.0], [20.5, 85.0], [20.6, 85.0], [20.7, 85.0], [20.8, 85.0], [20.9, 85.0], [21.0, 85.0], [21.1, 85.0], [21.2, 85.0], [21.3, 85.0], [21.4, 85.0], [21.5, 85.0], [21.6, 85.0], [21.7, 85.0], [21.8, 85.0], [21.9, 85.0], [22.0, 85.0], [22.1, 85.0], [22.2, 85.0], [22.3, 85.0], [22.4, 85.0], [22.5, 85.0], [22.6, 86.0], [22.7, 86.0], [22.8, 86.0], [22.9, 86.0], [23.0, 86.0], [23.1, 86.0], [23.2, 86.0], [23.3, 86.0], [23.4, 86.0], [23.5, 86.0], [23.6, 86.0], [23.7, 86.0], [23.8, 86.0], [23.9, 86.0], [24.0, 86.0], [24.1, 86.0], [24.2, 86.0], [24.3, 87.0], [24.4, 87.0], [24.5, 87.0], [24.6, 87.0], [24.7, 87.0], [24.8, 87.0], [24.9, 87.0], [25.0, 87.0], [25.1, 87.0], [25.2, 87.0], [25.3, 87.0], [25.4, 87.0], [25.5, 87.0], [25.6, 87.0], [25.7, 87.0], [25.8, 87.0], [25.9, 87.0], [26.0, 88.0], [26.1, 88.0], [26.2, 88.0], [26.3, 88.0], [26.4, 88.0], [26.5, 88.0], [26.6, 88.0], [26.7, 88.0], [26.8, 88.0], [26.9, 88.0], [27.0, 88.0], [27.1, 88.0], [27.2, 88.0], [27.3, 88.0], [27.4, 88.0], [27.5, 89.0], [27.6, 89.0], [27.7, 89.0], [27.8, 89.0], [27.9, 89.0], [28.0, 89.0], [28.1, 89.0], [28.2, 89.0], [28.3, 89.0], [28.4, 89.0], [28.5, 89.0], [28.6, 89.0], [28.7, 89.0], [28.8, 89.0], [28.9, 90.0], [29.0, 90.0], [29.1, 90.0], [29.2, 90.0], [29.3, 90.0], [29.4, 90.0], [29.5, 90.0], [29.6, 90.0], [29.7, 90.0], [29.8, 91.0], [29.9, 91.0], [30.0, 91.0], [30.1, 91.0], [30.2, 91.0], [30.3, 91.0], [30.4, 91.0], [30.5, 91.0], [30.6, 91.0], [30.7, 91.0], [30.8, 91.0], [30.9, 91.0], [31.0, 91.0], [31.1, 91.0], [31.2, 91.0], [31.3, 92.0], [31.4, 92.0], [31.5, 92.0], [31.6, 92.0], [31.7, 92.0], [31.8, 92.0], [31.9, 92.0], [32.0, 92.0], [32.1, 92.0], [32.2, 92.0], [32.3, 92.0], [32.4, 93.0], [32.5, 93.0], [32.6, 93.0], [32.7, 93.0], [32.8, 93.0], [32.9, 93.0], [33.0, 93.0], [33.1, 93.0], [33.2, 93.0], [33.3, 93.0], [33.4, 93.0], [33.5, 93.0], [33.6, 93.0], [33.7, 94.0], [33.8, 94.0], [33.9, 94.0], [34.0, 94.0], [34.1, 94.0], [34.2, 94.0], [34.3, 94.0], [34.4, 94.0], [34.5, 94.0], [34.6, 94.0], [34.7, 94.0], [34.8, 94.0], [34.9, 95.0], [35.0, 95.0], [35.1, 95.0], [35.2, 95.0], [35.3, 95.0], [35.4, 95.0], [35.5, 95.0], [35.6, 95.0], [35.7, 95.0], [35.8, 95.0], [35.9, 95.0], [36.0, 95.0], [36.1, 95.0], [36.2, 95.0], [36.3, 95.0], [36.4, 95.0], [36.5, 95.0], [36.6, 96.0], [36.7, 96.0], [36.8, 96.0], [36.9, 96.0], [37.0, 96.0], [37.1, 96.0], [37.2, 96.0], [37.3, 96.0], [37.4, 96.0], [37.5, 96.0], [37.6, 96.0], [37.7, 97.0], [37.8, 97.0], [37.9, 97.0], [38.0, 97.0], [38.1, 97.0], [38.2, 97.0], [38.3, 97.0], [38.4, 97.0], [38.5, 97.0], [38.6, 97.0], [38.7, 97.0], [38.8, 97.0], [38.9, 98.0], [39.0, 98.0], [39.1, 98.0], [39.2, 98.0], [39.3, 98.0], [39.4, 98.0], [39.5, 98.0], [39.6, 98.0], [39.7, 98.0], [39.8, 98.0], [39.9, 98.0], [40.0, 98.0], [40.1, 98.0], [40.2, 98.0], [40.3, 98.0], [40.4, 99.0], [40.5, 99.0], [40.6, 99.0], [40.7, 99.0], [40.8, 99.0], [40.9, 99.0], [41.0, 99.0], [41.1, 99.0], [41.2, 99.0], [41.3, 99.0], [41.4, 99.0], [41.5, 99.0], [41.6, 100.0], [41.7, 100.0], [41.8, 100.0], [41.9, 100.0], [42.0, 100.0], [42.1, 100.0], [42.2, 100.0], [42.3, 100.0], [42.4, 100.0], [42.5, 100.0], [42.6, 100.0], [42.7, 100.0], [42.8, 100.0], [42.9, 101.0], [43.0, 101.0], [43.1, 101.0], [43.2, 101.0], [43.3, 101.0], [43.4, 101.0], [43.5, 101.0], [43.6, 101.0], [43.7, 101.0], [43.8, 101.0], [43.9, 101.0], [44.0, 102.0], [44.1, 102.0], [44.2, 102.0], [44.3, 102.0], [44.4, 102.0], [44.5, 102.0], [44.6, 102.0], [44.7, 102.0], [44.8, 102.0], [44.9, 102.0], [45.0, 103.0], [45.1, 103.0], [45.2, 103.0], [45.3, 103.0], [45.4, 103.0], [45.5, 103.0], [45.6, 103.0], [45.7, 103.0], [45.8, 103.0], [45.9, 103.0], [46.0, 104.0], [46.1, 104.0], [46.2, 104.0], [46.3, 104.0], [46.4, 104.0], [46.5, 104.0], [46.6, 104.0], [46.7, 104.0], [46.8, 104.0], [46.9, 104.0], [47.0, 105.0], [47.1, 105.0], [47.2, 105.0], [47.3, 105.0], [47.4, 105.0], [47.5, 105.0], [47.6, 105.0], [47.7, 106.0], [47.8, 106.0], [47.9, 106.0], [48.0, 106.0], [48.1, 106.0], [48.2, 106.0], [48.3, 106.0], [48.4, 106.0], [48.5, 106.0], [48.6, 106.0], [48.7, 107.0], [48.8, 107.0], [48.9, 107.0], [49.0, 107.0], [49.1, 107.0], [49.2, 107.0], [49.3, 107.0], [49.4, 107.0], [49.5, 108.0], [49.6, 108.0], [49.7, 108.0], [49.8, 108.0], [49.9, 108.0], [50.0, 108.0], [50.1, 108.0], [50.2, 108.0], [50.3, 109.0], [50.4, 109.0], [50.5, 109.0], [50.6, 109.0], [50.7, 109.0], [50.8, 109.0], [50.9, 109.0], [51.0, 110.0], [51.1, 110.0], [51.2, 110.0], [51.3, 110.0], [51.4, 110.0], [51.5, 111.0], [51.6, 111.0], [51.7, 111.0], [51.8, 111.0], [51.9, 111.0], [52.0, 112.0], [52.1, 112.0], [52.2, 112.0], [52.3, 112.0], [52.4, 112.0], [52.5, 113.0], [52.6, 113.0], [52.7, 113.0], [52.8, 113.0], [52.9, 113.0], [53.0, 113.0], [53.1, 113.0], [53.2, 114.0], [53.3, 114.0], [53.4, 114.0], [53.5, 114.0], [53.6, 114.0], [53.7, 114.0], [53.8, 114.0], [53.9, 115.0], [54.0, 115.0], [54.1, 115.0], [54.2, 116.0], [54.3, 116.0], [54.4, 116.0], [54.5, 116.0], [54.6, 116.0], [54.7, 117.0], [54.8, 117.0], [54.9, 117.0], [55.0, 117.0], [55.1, 117.0], [55.2, 117.0], [55.3, 117.0], [55.4, 118.0], [55.5, 118.0], [55.6, 118.0], [55.7, 119.0], [55.8, 119.0], [55.9, 119.0], [56.0, 119.0], [56.1, 119.0], [56.2, 119.0], [56.3, 119.0], [56.4, 120.0], [56.5, 121.0], [56.6, 121.0], [56.7, 121.0], [56.8, 121.0], [56.9, 121.0], [57.0, 121.0], [57.1, 121.0], [57.2, 121.0], [57.3, 121.0], [57.4, 122.0], [57.5, 122.0], [57.6, 122.0], [57.7, 122.0], [57.8, 122.0], [57.9, 122.0], [58.0, 122.0], [58.1, 122.0], [58.2, 123.0], [58.3, 123.0], [58.4, 123.0], [58.5, 123.0], [58.6, 123.0], [58.7, 123.0], [58.8, 123.0], [58.9, 123.0], [59.0, 123.0], [59.1, 124.0], [59.2, 124.0], [59.3, 124.0], [59.4, 124.0], [59.5, 125.0], [59.6, 125.0], [59.7, 125.0], [59.8, 125.0], [59.9, 125.0], [60.0, 125.0], [60.1, 125.0], [60.2, 126.0], [60.3, 126.0], [60.4, 126.0], [60.5, 126.0], [60.6, 126.0], [60.7, 126.0], [60.8, 126.0], [60.9, 126.0], [61.0, 127.0], [61.1, 127.0], [61.2, 128.0], [61.3, 128.0], [61.4, 128.0], [61.5, 128.0], [61.6, 128.0], [61.7, 128.0], [61.8, 128.0], [61.9, 128.0], [62.0, 128.0], [62.1, 129.0], [62.2, 129.0], [62.3, 129.0], [62.4, 129.0], [62.5, 129.0], [62.6, 129.0], [62.7, 129.0], [62.8, 129.0], [62.9, 130.0], [63.0, 130.0], [63.1, 130.0], [63.2, 130.0], [63.3, 130.0], [63.4, 130.0], [63.5, 131.0], [63.6, 131.0], [63.7, 131.0], [63.8, 131.0], [63.9, 132.0], [64.0, 132.0], [64.1, 132.0], [64.2, 132.0], [64.3, 132.0], [64.4, 132.0], [64.5, 132.0], [64.6, 133.0], [64.7, 133.0], [64.8, 133.0], [64.9, 134.0], [65.0, 134.0], [65.1, 134.0], [65.2, 134.0], [65.3, 134.0], [65.4, 134.0], [65.5, 134.0], [65.6, 135.0], [65.7, 135.0], [65.8, 135.0], [65.9, 135.0], [66.0, 136.0], [66.1, 136.0], [66.2, 136.0], [66.3, 136.0], [66.4, 136.0], [66.5, 137.0], [66.6, 137.0], [66.7, 137.0], [66.8, 137.0], [66.9, 137.0], [67.0, 139.0], [67.1, 139.0], [67.2, 139.0], [67.3, 140.0], [67.4, 140.0], [67.5, 140.0], [67.6, 140.0], [67.7, 141.0], [67.8, 141.0], [67.9, 142.0], [68.0, 143.0], [68.1, 143.0], [68.2, 143.0], [68.3, 143.0], [68.4, 144.0], [68.5, 144.0], [68.6, 144.0], [68.7, 145.0], [68.8, 145.0], [68.9, 147.0], [69.0, 147.0], [69.1, 148.0], [69.2, 150.0], [69.3, 150.0], [69.4, 153.0], [69.5, 155.0], [69.6, 158.0], [69.7, 174.0], [69.8, 177.0], [69.9, 183.0], [70.0, 189.0], [70.1, 189.0], [70.2, 197.0], [70.3, 200.0], [70.4, 200.0], [70.5, 216.0], [70.6, 216.0], [70.7, 229.0], [70.8, 233.0], [70.9, 243.0], [71.0, 249.0], [71.1, 252.0], [71.2, 257.0], [71.3, 259.0], [71.4, 260.0], [71.5, 261.0], [71.6, 265.0], [71.7, 265.0], [71.8, 267.0], [71.9, 273.0], [72.0, 274.0], [72.1, 275.0], [72.2, 276.0], [72.3, 276.0], [72.4, 280.0], [72.5, 281.0], [72.6, 281.0], [72.7, 281.0], [72.8, 284.0], [72.9, 285.0], [73.0, 289.0], [73.1, 291.0], [73.2, 292.0], [73.3, 294.0], [73.4, 294.0], [73.5, 297.0], [73.6, 298.0], [73.7, 300.0], [73.8, 301.0], [73.9, 302.0], [74.0, 305.0], [74.1, 306.0], [74.2, 307.0], [74.3, 307.0], [74.4, 308.0], [74.5, 309.0], [74.6, 309.0], [74.7, 310.0], [74.8, 310.0], [74.9, 311.0], [75.0, 312.0], [75.1, 313.0], [75.2, 314.0], [75.3, 315.0], [75.4, 316.0], [75.5, 316.0], [75.6, 318.0], [75.7, 319.0], [75.8, 321.0], [75.9, 322.0], [76.0, 326.0], [76.1, 326.0], [76.2, 328.0], [76.3, 328.0], [76.4, 329.0], [76.5, 331.0], [76.6, 332.0], [76.7, 335.0], [76.8, 336.0], [76.9, 337.0], [77.0, 338.0], [77.1, 339.0], [77.2, 345.0], [77.3, 345.0], [77.4, 349.0], [77.5, 353.0], [77.6, 354.0], [77.7, 356.0], [77.8, 357.0], [77.9, 371.0], [78.0, 373.0], [78.1, 373.0], [78.2, 375.0], [78.3, 376.0], [78.4, 378.0], [78.5, 382.0], [78.6, 382.0], [78.7, 385.0], [78.8, 390.0], [78.9, 392.0], [79.0, 395.0], [79.1, 396.0], [79.2, 401.0], [79.3, 401.0], [79.4, 404.0], [79.5, 407.0], [79.6, 408.0], [79.7, 410.0], [79.8, 413.0], [79.9, 417.0], [80.0, 421.0], [80.1, 422.0], [80.2, 422.0], [80.3, 423.0], [80.4, 426.0], [80.5, 427.0], [80.6, 428.0], [80.7, 428.0], [80.8, 428.0], [80.9, 431.0], [81.0, 433.0], [81.1, 433.0], [81.2, 435.0], [81.3, 436.0], [81.4, 436.0], [81.5, 437.0], [81.6, 438.0], [81.7, 438.0], [81.8, 438.0], [81.9, 442.0], [82.0, 444.0], [82.1, 445.0], [82.2, 453.0], [82.3, 454.0], [82.4, 457.0], [82.5, 464.0], [82.6, 468.0], [82.7, 472.0], [82.8, 474.0], [82.9, 482.0], [83.0, 488.0], [83.1, 488.0], [83.2, 496.0], [83.3, 496.0], [83.4, 502.0], [83.5, 510.0], [83.6, 512.0], [83.7, 530.0], [83.8, 531.0], [83.9, 543.0], [84.0, 553.0], [84.1, 559.0], [84.2, 568.0], [84.3, 568.0], [84.4, 570.0], [84.5, 571.0], [84.6, 571.0], [84.7, 575.0], [84.8, 577.0], [84.9, 587.0], [85.0, 589.0], [85.1, 591.0], [85.2, 603.0], [85.3, 606.0], [85.4, 607.0], [85.5, 612.0], [85.6, 615.0], [85.7, 620.0], [85.8, 620.0], [85.9, 625.0], [86.0, 630.0], [86.1, 633.0], [86.2, 644.0], [86.3, 646.0], [86.4, 648.0], [86.5, 650.0], [86.6, 652.0], [86.7, 656.0], [86.8, 658.0], [86.9, 659.0], [87.0, 662.0], [87.1, 662.0], [87.2, 665.0], [87.3, 666.0], [87.4, 670.0], [87.5, 676.0], [87.6, 677.0], [87.7, 680.0], [87.8, 682.0], [87.9, 683.0], [88.0, 685.0], [88.1, 687.0], [88.2, 692.0], [88.3, 698.0], [88.4, 699.0], [88.5, 701.0], [88.6, 701.0], [88.7, 721.0], [88.8, 724.0], [88.9, 734.0], [89.0, 736.0], [89.1, 738.0], [89.2, 744.0], [89.3, 746.0], [89.4, 750.0], [89.5, 756.0], [89.6, 756.0], [89.7, 759.0], [89.8, 762.0], [89.9, 764.0], [90.0, 767.0], [90.1, 777.0], [90.2, 779.0], [90.3, 781.0], [90.4, 784.0], [90.5, 793.0], [90.6, 797.0], [90.7, 803.0], [90.8, 807.0], [90.9, 809.0], [91.0, 811.0], [91.1, 812.0], [91.2, 818.0], [91.3, 819.0], [91.4, 836.0], [91.5, 838.0], [91.6, 842.0], [91.7, 844.0], [91.8, 846.0], [91.9, 855.0], [92.0, 858.0], [92.1, 860.0], [92.2, 862.0], [92.3, 866.0], [92.4, 874.0], [92.5, 878.0], [92.6, 888.0], [92.7, 896.0], [92.8, 898.0], [92.9, 936.0], [93.0, 965.0], [93.1, 988.0], [93.2, 1170.0], [93.3, 1174.0], [93.4, 1265.0], [93.5, 1370.0], [93.6, 1378.0], [93.7, 1386.0], [93.8, 1390.0], [93.9, 1399.0], [94.0, 1421.0], [94.1, 1443.0], [94.2, 2255.0], [94.3, 2256.0], [94.4, 2258.0], [94.5, 2478.0], [94.6, 2479.0], [94.7, 2485.0], [94.8, 2492.0], [94.9, 2532.0], [95.0, 4891.0], [95.1, 4955.0], [95.2, 5237.0], [95.3, 5239.0], [95.4, 5247.0], [95.5, 5257.0], [95.6, 5258.0], [95.7, 5266.0], [95.8, 5267.0], [95.9, 5272.0], [96.0, 5293.0], [96.1, 5301.0], [96.2, 5470.0], [96.3, 5491.0], [96.4, 5495.0], [96.5, 5501.0], [96.6, 5510.0], [96.7, 5512.0], [96.8, 5512.0], [96.9, 5519.0], [97.0, 5527.0], [97.1, 5527.0], [97.2, 5532.0], [97.3, 5536.0], [97.4, 5541.0], [97.5, 5546.0], [97.6, 5590.0], [97.7, 5605.0], [97.8, 5863.0], [97.9, 5910.0], [98.0, 6099.0], [98.1, 6150.0], [98.2, 6154.0], [98.3, 6166.0], [98.4, 6414.0], [98.5, 6761.0], [98.6, 6762.0], [98.7, 6781.0], [98.8, 6825.0], [98.9, 6911.0], [99.0, 6959.0], [99.1, 7023.0], [99.2, 7186.0], [99.3, 7194.0], [99.4, 7300.0], [99.5, 7392.0], [99.6, 10545.0], [99.7, 11181.0], [99.8, 11263.0], [99.9, 11775.0]], "isOverall": false, "label": "getListOfUser", "isController": false}, {"data": [[0.0, 585.0], [0.1, 597.0], [0.2, 602.0], [0.3, 605.0], [0.4, 607.0], [0.5, 607.0], [0.6, 611.0], [0.7, 613.0], [0.8, 613.0], [0.9, 616.0], [1.0, 620.0], [1.1, 621.0], [1.2, 622.0], [1.3, 623.0], [1.4, 626.0], [1.5, 628.0], [1.6, 629.0], [1.7, 630.0], [1.8, 631.0], [1.9, 632.0], [2.0, 632.0], [2.1, 632.0], [2.2, 633.0], [2.3, 633.0], [2.4, 636.0], [2.5, 642.0], [2.6, 642.0], [2.7, 643.0], [2.8, 644.0], [2.9, 646.0], [3.0, 647.0], [3.1, 647.0], [3.2, 649.0], [3.3, 649.0], [3.4, 650.0], [3.5, 654.0], [3.6, 655.0], [3.7, 658.0], [3.8, 658.0], [3.9, 659.0], [4.0, 660.0], [4.1, 661.0], [4.2, 668.0], [4.3, 668.0], [4.4, 670.0], [4.5, 674.0], [4.6, 674.0], [4.7, 678.0], [4.8, 687.0], [4.9, 718.0], [5.0, 720.0], [5.1, 729.0], [5.2, 739.0], [5.3, 748.0], [5.4, 752.0], [5.5, 757.0], [5.6, 773.0], [5.7, 775.0], [5.8, 777.0], [5.9, 800.0], [6.0, 829.0], [6.1, 850.0], [6.2, 944.0], [6.3, 945.0], [6.4, 968.0], [6.5, 975.0], [6.6, 982.0], [6.7, 986.0], [6.8, 990.0], [6.9, 996.0], [7.0, 1002.0], [7.1, 1004.0], [7.2, 1009.0], [7.3, 1011.0], [7.4, 1019.0], [7.5, 1023.0], [7.6, 1033.0], [7.7, 1093.0], [7.8, 1112.0], [7.9, 1134.0], [8.0, 1161.0], [8.1, 1162.0], [8.2, 1168.0], [8.3, 1176.0], [8.4, 1194.0], [8.5, 1201.0], [8.6, 1210.0], [8.7, 1218.0], [8.8, 1222.0], [8.9, 1223.0], [9.0, 1263.0], [9.1, 1266.0], [9.2, 1277.0], [9.3, 1296.0], [9.4, 1331.0], [9.5, 1340.0], [9.6, 1344.0], [9.7, 1372.0], [9.8, 1374.0], [9.9, 1421.0], [10.0, 1482.0], [10.1, 1497.0], [10.2, 1513.0], [10.3, 1518.0], [10.4, 1532.0], [10.5, 1545.0], [10.6, 1562.0], [10.7, 1621.0], [10.8, 1634.0], [10.9, 1643.0], [11.0, 1647.0], [11.1, 1649.0], [11.2, 1664.0], [11.3, 1670.0], [11.4, 1676.0], [11.5, 1687.0], [11.6, 1693.0], [11.7, 1699.0], [11.8, 1713.0], [11.9, 1716.0], [12.0, 1730.0], [12.1, 1736.0], [12.2, 1755.0], [12.3, 1757.0], [12.4, 1763.0], [12.5, 1791.0], [12.6, 1803.0], [12.7, 1808.0], [12.8, 1812.0], [12.9, 1826.0], [13.0, 1834.0], [13.1, 1845.0], [13.2, 1869.0], [13.3, 1871.0], [13.4, 1928.0], [13.5, 1957.0], [13.6, 1981.0], [13.7, 2037.0], [13.8, 2038.0], [13.9, 2039.0], [14.0, 2056.0], [14.1, 2077.0], [14.2, 2088.0], [14.3, 2088.0], [14.4, 2092.0], [14.5, 2092.0], [14.6, 2099.0], [14.7, 2103.0], [14.8, 2138.0], [14.9, 2154.0], [15.0, 2184.0], [15.1, 2201.0], [15.2, 2233.0], [15.3, 2250.0], [15.4, 2261.0], [15.5, 2266.0], [15.6, 2271.0], [15.7, 2288.0], [15.8, 2299.0], [15.9, 2363.0], [16.0, 2559.0], [16.1, 2564.0], [16.2, 2575.0], [16.3, 2576.0], [16.4, 2616.0], [16.5, 2712.0], [16.6, 2719.0], [16.7, 2791.0], [16.8, 2796.0], [16.9, 2821.0], [17.0, 2852.0], [17.1, 2867.0], [17.2, 2913.0], [17.3, 2916.0], [17.4, 2956.0], [17.5, 2976.0], [17.6, 3018.0], [17.7, 3060.0], [17.8, 3062.0], [17.9, 3063.0], [18.0, 3117.0], [18.1, 3142.0], [18.2, 3213.0], [18.3, 3222.0], [18.4, 3225.0], [18.5, 3243.0], [18.6, 3246.0], [18.7, 3269.0], [18.8, 3279.0], [18.9, 3295.0], [19.0, 3310.0], [19.1, 3333.0], [19.2, 3351.0], [19.3, 3353.0], [19.4, 3370.0], [19.5, 3385.0], [19.6, 3388.0], [19.7, 3391.0], [19.8, 3403.0], [19.9, 3418.0], [20.0, 3440.0], [20.1, 3465.0], [20.2, 3491.0], [20.3, 3494.0], [20.4, 3512.0], [20.5, 3557.0], [20.6, 3557.0], [20.7, 3582.0], [20.8, 3583.0], [20.9, 3600.0], [21.0, 3624.0], [21.1, 3627.0], [21.2, 3654.0], [21.3, 3654.0], [21.4, 3659.0], [21.5, 3664.0], [21.6, 3666.0], [21.7, 3677.0], [21.8, 3679.0], [21.9, 3687.0], [22.0, 3724.0], [22.1, 3730.0], [22.2, 3743.0], [22.3, 3745.0], [22.4, 3759.0], [22.5, 3762.0], [22.6, 3769.0], [22.7, 3787.0], [22.8, 3797.0], [22.9, 3810.0], [23.0, 3825.0], [23.1, 3837.0], [23.2, 3844.0], [23.3, 3849.0], [23.4, 3867.0], [23.5, 3898.0], [23.6, 3909.0], [23.7, 3921.0], [23.8, 3940.0], [23.9, 3958.0], [24.0, 3984.0], [24.1, 4014.0], [24.2, 4017.0], [24.3, 4082.0], [24.4, 4089.0], [24.5, 4105.0], [24.6, 4124.0], [24.7, 4231.0], [24.8, 4239.0], [24.9, 4291.0], [25.0, 4318.0], [25.1, 4363.0], [25.2, 4418.0], [25.3, 4431.0], [25.4, 4484.0], [25.5, 4495.0], [25.6, 4495.0], [25.7, 4501.0], [25.8, 4505.0], [25.9, 4536.0], [26.0, 4575.0], [26.1, 4577.0], [26.2, 4583.0], [26.3, 4591.0], [26.4, 4604.0], [26.5, 4635.0], [26.6, 4690.0], [26.7, 4704.0], [26.8, 4759.0], [26.9, 4774.0], [27.0, 4780.0], [27.1, 4788.0], [27.2, 4811.0], [27.3, 4839.0], [27.4, 4851.0], [27.5, 4881.0], [27.6, 4893.0], [27.7, 4920.0], [27.8, 4923.0], [27.9, 4934.0], [28.0, 4960.0], [28.1, 4969.0], [28.2, 4982.0], [28.3, 4990.0], [28.4, 4998.0], [28.5, 5016.0], [28.6, 5050.0], [28.7, 5084.0], [28.8, 5084.0], [28.9, 5101.0], [29.0, 5108.0], [29.1, 5128.0], [29.2, 5134.0], [29.3, 5136.0], [29.4, 5141.0], [29.5, 5154.0], [29.6, 5157.0], [29.7, 5186.0], [29.8, 5186.0], [29.9, 5209.0], [30.0, 5235.0], [30.1, 5236.0], [30.2, 5292.0], [30.3, 5302.0], [30.4, 5314.0], [30.5, 5321.0], [30.6, 5322.0], [30.7, 5325.0], [30.8, 5333.0], [30.9, 5341.0], [31.0, 5346.0], [31.1, 5350.0], [31.2, 5356.0], [31.3, 5362.0], [31.4, 5391.0], [31.5, 5400.0], [31.6, 5407.0], [31.7, 5419.0], [31.8, 5428.0], [31.9, 5430.0], [32.0, 5451.0], [32.1, 5467.0], [32.2, 5475.0], [32.3, 5478.0], [32.4, 5483.0], [32.5, 5486.0], [32.6, 5488.0], [32.7, 5497.0], [32.8, 5498.0], [32.9, 5501.0], [33.0, 5529.0], [33.1, 5529.0], [33.2, 5543.0], [33.3, 5543.0], [33.4, 5552.0], [33.5, 5560.0], [33.6, 5563.0], [33.7, 5566.0], [33.8, 5567.0], [33.9, 5578.0], [34.0, 5583.0], [34.1, 5584.0], [34.2, 5592.0], [34.3, 5597.0], [34.4, 5599.0], [34.5, 5605.0], [34.6, 5608.0], [34.7, 5617.0], [34.8, 5624.0], [34.9, 5625.0], [35.0, 5629.0], [35.1, 5632.0], [35.2, 5637.0], [35.3, 5638.0], [35.4, 5641.0], [35.5, 5652.0], [35.6, 5653.0], [35.7, 5657.0], [35.8, 5658.0], [35.9, 5666.0], [36.0, 5667.0], [36.1, 5667.0], [36.2, 5677.0], [36.3, 5691.0], [36.4, 5700.0], [36.5, 5700.0], [36.6, 5706.0], [36.7, 5720.0], [36.8, 5722.0], [36.9, 5730.0], [37.0, 5763.0], [37.1, 5770.0], [37.2, 5776.0], [37.3, 5782.0], [37.4, 5794.0], [37.5, 5798.0], [37.6, 5800.0], [37.7, 5817.0], [37.8, 5819.0], [37.9, 5836.0], [38.0, 5839.0], [38.1, 5844.0], [38.2, 5846.0], [38.3, 5851.0], [38.4, 5855.0], [38.5, 5873.0], [38.6, 5883.0], [38.7, 5889.0], [38.8, 5892.0], [38.9, 5894.0], [39.0, 5915.0], [39.1, 5917.0], [39.2, 5926.0], [39.3, 5928.0], [39.4, 5934.0], [39.5, 5938.0], [39.6, 5939.0], [39.7, 5955.0], [39.8, 5967.0], [39.9, 5979.0], [40.0, 5989.0], [40.1, 5993.0], [40.2, 5997.0], [40.3, 6000.0], [40.4, 6023.0], [40.5, 6027.0], [40.6, 6030.0], [40.7, 6036.0], [40.8, 6039.0], [40.9, 6045.0], [41.0, 6054.0], [41.1, 6059.0], [41.2, 6060.0], [41.3, 6065.0], [41.4, 6073.0], [41.5, 6097.0], [41.6, 6125.0], [41.7, 6142.0], [41.8, 6148.0], [41.9, 6155.0], [42.0, 6163.0], [42.1, 6164.0], [42.2, 6188.0], [42.3, 6191.0], [42.4, 6250.0], [42.5, 6259.0], [42.6, 6267.0], [42.7, 6280.0], [42.8, 6283.0], [42.9, 6289.0], [43.0, 6296.0], [43.1, 6301.0], [43.2, 6305.0], [43.3, 6309.0], [43.4, 6321.0], [43.5, 6327.0], [43.6, 6330.0], [43.7, 6343.0], [43.8, 6353.0], [43.9, 6372.0], [44.0, 6384.0], [44.1, 6385.0], [44.2, 6386.0], [44.3, 6406.0], [44.4, 6436.0], [44.5, 6445.0], [44.6, 6452.0], [44.7, 6457.0], [44.8, 6459.0], [44.9, 6475.0], [45.0, 6484.0], [45.1, 6488.0], [45.2, 6502.0], [45.3, 6511.0], [45.4, 6515.0], [45.5, 6520.0], [45.6, 6521.0], [45.7, 6527.0], [45.8, 6542.0], [45.9, 6552.0], [46.0, 6557.0], [46.1, 6560.0], [46.2, 6578.0], [46.3, 6591.0], [46.4, 6633.0], [46.5, 6648.0], [46.6, 6665.0], [46.7, 6685.0], [46.8, 6690.0], [46.9, 6710.0], [47.0, 6720.0], [47.1, 6744.0], [47.2, 6756.0], [47.3, 6760.0], [47.4, 6764.0], [47.5, 6767.0], [47.6, 6767.0], [47.7, 6776.0], [47.8, 6777.0], [47.9, 6781.0], [48.0, 6788.0], [48.1, 6788.0], [48.2, 6793.0], [48.3, 6795.0], [48.4, 6812.0], [48.5, 6829.0], [48.6, 6839.0], [48.7, 6849.0], [48.8, 6854.0], [48.9, 6875.0], [49.0, 6880.0], [49.1, 6883.0], [49.2, 6887.0], [49.3, 6887.0], [49.4, 6894.0], [49.5, 6908.0], [49.6, 6910.0], [49.7, 6929.0], [49.8, 6951.0], [49.9, 6973.0], [50.0, 6980.0], [50.1, 6983.0], [50.2, 6989.0], [50.3, 6990.0], [50.4, 6997.0], [50.5, 7000.0], [50.6, 7005.0], [50.7, 7009.0], [50.8, 7011.0], [50.9, 7020.0], [51.0, 7022.0], [51.1, 7026.0], [51.2, 7032.0], [51.3, 7032.0], [51.4, 7068.0], [51.5, 7075.0], [51.6, 7077.0], [51.7, 7088.0], [51.8, 7091.0], [51.9, 7093.0], [52.0, 7096.0], [52.1, 7096.0], [52.2, 7102.0], [52.3, 7105.0], [52.4, 7109.0], [52.5, 7116.0], [52.6, 7127.0], [52.7, 7128.0], [52.8, 7131.0], [52.9, 7132.0], [53.0, 7134.0], [53.1, 7134.0], [53.2, 7134.0], [53.3, 7136.0], [53.4, 7164.0], [53.5, 7180.0], [53.6, 7180.0], [53.7, 7181.0], [53.8, 7187.0], [53.9, 7189.0], [54.0, 7194.0], [54.1, 7196.0], [54.2, 7205.0], [54.3, 7208.0], [54.4, 7217.0], [54.5, 7220.0], [54.6, 7221.0], [54.7, 7225.0], [54.8, 7231.0], [54.9, 7238.0], [55.0, 7239.0], [55.1, 7239.0], [55.2, 7247.0], [55.3, 7248.0], [55.4, 7254.0], [55.5, 7256.0], [55.6, 7260.0], [55.7, 7263.0], [55.8, 7265.0], [55.9, 7281.0], [56.0, 7292.0], [56.1, 7305.0], [56.2, 7310.0], [56.3, 7317.0], [56.4, 7365.0], [56.5, 7384.0], [56.6, 7390.0], [56.7, 7396.0], [56.8, 7397.0], [56.9, 7402.0], [57.0, 7409.0], [57.1, 7435.0], [57.2, 7442.0], [57.3, 7486.0], [57.4, 7494.0], [57.5, 7498.0], [57.6, 7503.0], [57.7, 7507.0], [57.8, 7512.0], [57.9, 7535.0], [58.0, 7542.0], [58.1, 7550.0], [58.2, 7570.0], [58.3, 7571.0], [58.4, 7573.0], [58.5, 7577.0], [58.6, 7579.0], [58.7, 7589.0], [58.8, 7589.0], [58.9, 7604.0], [59.0, 7617.0], [59.1, 7618.0], [59.2, 7624.0], [59.3, 7633.0], [59.4, 7638.0], [59.5, 7663.0], [59.6, 7672.0], [59.7, 7686.0], [59.8, 7699.0], [59.9, 7718.0], [60.0, 7734.0], [60.1, 7734.0], [60.2, 7746.0], [60.3, 7751.0], [60.4, 7758.0], [60.5, 7759.0], [60.6, 7762.0], [60.7, 7764.0], [60.8, 7769.0], [60.9, 7770.0], [61.0, 7772.0], [61.1, 7774.0], [61.2, 7797.0], [61.3, 7800.0], [61.4, 7814.0], [61.5, 7826.0], [61.6, 7832.0], [61.7, 7843.0], [61.8, 7855.0], [61.9, 7861.0], [62.0, 7877.0], [62.1, 7883.0], [62.2, 7917.0], [62.3, 7933.0], [62.4, 7952.0], [62.5, 7959.0], [62.6, 7963.0], [62.7, 7977.0], [62.8, 7988.0], [62.9, 8007.0], [63.0, 8009.0], [63.1, 8023.0], [63.2, 8028.0], [63.3, 8029.0], [63.4, 8033.0], [63.5, 8038.0], [63.6, 8047.0], [63.7, 8053.0], [63.8, 8054.0], [63.9, 8061.0], [64.0, 8074.0], [64.1, 8074.0], [64.2, 8078.0], [64.3, 8093.0], [64.4, 8101.0], [64.5, 8106.0], [64.6, 8107.0], [64.7, 8108.0], [64.8, 8110.0], [64.9, 8111.0], [65.0, 8118.0], [65.1, 8126.0], [65.2, 8140.0], [65.3, 8146.0], [65.4, 8162.0], [65.5, 8172.0], [65.6, 8173.0], [65.7, 8178.0], [65.8, 8185.0], [65.9, 8193.0], [66.0, 8199.0], [66.1, 8200.0], [66.2, 8209.0], [66.3, 8216.0], [66.4, 8218.0], [66.5, 8226.0], [66.6, 8226.0], [66.7, 8235.0], [66.8, 8236.0], [66.9, 8242.0], [67.0, 8247.0], [67.1, 8248.0], [67.2, 8269.0], [67.3, 8273.0], [67.4, 8284.0], [67.5, 8299.0], [67.6, 8307.0], [67.7, 8317.0], [67.8, 8319.0], [67.9, 8333.0], [68.0, 8352.0], [68.1, 8353.0], [68.2, 8377.0], [68.3, 8381.0], [68.4, 8394.0], [68.5, 8397.0], [68.6, 8405.0], [68.7, 8408.0], [68.8, 8410.0], [68.9, 8418.0], [69.0, 8428.0], [69.1, 8448.0], [69.2, 8485.0], [69.3, 8488.0], [69.4, 8530.0], [69.5, 8540.0], [69.6, 8543.0], [69.7, 8555.0], [69.8, 8564.0], [69.9, 8587.0], [70.0, 8605.0], [70.1, 8606.0], [70.2, 8627.0], [70.3, 8631.0], [70.4, 8636.0], [70.5, 8658.0], [70.6, 8658.0], [70.7, 8662.0], [70.8, 8664.0], [70.9, 8674.0], [71.0, 8683.0], [71.1, 8687.0], [71.2, 8692.0], [71.3, 8703.0], [71.4, 8718.0], [71.5, 8745.0], [71.6, 8746.0], [71.7, 8750.0], [71.8, 8763.0], [71.9, 8781.0], [72.0, 8790.0], [72.1, 8791.0], [72.2, 8796.0], [72.3, 8799.0], [72.4, 8804.0], [72.5, 8832.0], [72.6, 8833.0], [72.7, 8842.0], [72.8, 8859.0], [72.9, 8874.0], [73.0, 8881.0], [73.1, 8889.0], [73.2, 8940.0], [73.3, 8949.0], [73.4, 8965.0], [73.5, 9005.0], [73.6, 9016.0], [73.7, 9031.0], [73.8, 9037.0], [73.9, 9042.0], [74.0, 9057.0], [74.1, 9066.0], [74.2, 9071.0], [74.3, 9079.0], [74.4, 9089.0], [74.5, 9109.0], [74.6, 9135.0], [74.7, 9142.0], [74.8, 9148.0], [74.9, 9227.0], [75.0, 9244.0], [75.1, 9257.0], [75.2, 9285.0], [75.3, 9300.0], [75.4, 9321.0], [75.5, 9335.0], [75.6, 9347.0], [75.7, 9372.0], [75.8, 9411.0], [75.9, 9432.0], [76.0, 9478.0], [76.1, 9487.0], [76.2, 9493.0], [76.3, 9499.0], [76.4, 9511.0], [76.5, 9522.0], [76.6, 9535.0], [76.7, 9663.0], [76.8, 9666.0], [76.9, 9696.0], [77.0, 9706.0], [77.1, 9733.0], [77.2, 9770.0], [77.3, 9774.0], [77.4, 9829.0], [77.5, 9844.0], [77.6, 9847.0], [77.7, 9885.0], [77.8, 9891.0], [77.9, 9893.0], [78.0, 9920.0], [78.1, 9934.0], [78.2, 9940.0], [78.3, 9953.0], [78.4, 9965.0], [78.5, 9967.0], [78.6, 9973.0], [78.7, 10017.0], [78.8, 10026.0], [78.9, 10040.0], [79.0, 10050.0], [79.1, 10055.0], [79.2, 10088.0], [79.3, 10090.0], [79.4, 10109.0], [79.5, 10126.0], [79.6, 10162.0], [79.7, 10180.0], [79.8, 10180.0], [79.9, 10206.0], [80.0, 10216.0], [80.1, 10219.0], [80.2, 10309.0], [80.3, 10315.0], [80.4, 10361.0], [80.5, 10401.0], [80.6, 10416.0], [80.7, 10444.0], [80.8, 10450.0], [80.9, 10474.0], [81.0, 10501.0], [81.1, 10522.0], [81.2, 10551.0], [81.3, 10556.0], [81.4, 10573.0], [81.5, 10576.0], [81.6, 10583.0], [81.7, 10648.0], [81.8, 10660.0], [81.9, 10711.0], [82.0, 10714.0], [82.1, 10716.0], [82.2, 10769.0], [82.3, 10770.0], [82.4, 10809.0], [82.5, 10837.0], [82.6, 10843.0], [82.7, 10880.0], [82.8, 10884.0], [82.9, 10902.0], [83.0, 10910.0], [83.1, 10913.0], [83.2, 10977.0], [83.3, 10984.0], [83.4, 11011.0], [83.5, 11073.0], [83.6, 11087.0], [83.7, 11105.0], [83.8, 11121.0], [83.9, 11258.0], [84.0, 11284.0], [84.1, 11319.0], [84.2, 11411.0], [84.3, 11423.0], [84.4, 11467.0], [84.5, 11489.0], [84.6, 11521.0], [84.7, 11565.0], [84.8, 11583.0], [84.9, 11594.0], [85.0, 11661.0], [85.1, 11678.0], [85.2, 11697.0], [85.3, 11770.0], [85.4, 11793.0], [85.5, 11838.0], [85.6, 11847.0], [85.7, 11864.0], [85.8, 11949.0], [85.9, 12011.0], [86.0, 12053.0], [86.1, 12263.0], [86.2, 12316.0], [86.3, 12390.0], [86.4, 13491.0], [86.5, 14361.0], [86.6, 14458.0], [86.7, 14582.0], [86.8, 14645.0], [86.9, 15140.0], [87.0, 15146.0], [87.1, 15147.0], [87.2, 15149.0], [87.3, 15149.0], [87.4, 15150.0], [87.5, 15152.0], [87.6, 15152.0], [87.7, 15153.0], [87.8, 15153.0], [87.9, 15154.0], [88.0, 15154.0], [88.1, 15154.0], [88.2, 15155.0], [88.3, 15155.0], [88.4, 15155.0], [88.5, 15156.0], [88.6, 15157.0], [88.7, 15158.0], [88.8, 15158.0], [88.9, 15159.0], [89.0, 15160.0], [89.1, 15160.0], [89.2, 15160.0], [89.3, 15160.0], [89.4, 15161.0], [89.5, 15161.0], [89.6, 15161.0], [89.7, 15162.0], [89.8, 15162.0], [89.9, 15162.0], [90.0, 15162.0], [90.1, 15162.0], [90.2, 15162.0], [90.3, 15163.0], [90.4, 15163.0], [90.5, 15165.0], [90.6, 15165.0], [90.7, 15165.0], [90.8, 15166.0], [90.9, 15166.0], [91.0, 15167.0], [91.1, 15167.0], [91.2, 15169.0], [91.3, 15169.0], [91.4, 15171.0], [91.5, 15171.0], [91.6, 15171.0], [91.7, 15171.0], [91.8, 15172.0], [91.9, 15172.0], [92.0, 15173.0], [92.1, 15173.0], [92.2, 15174.0], [92.3, 15174.0], [92.4, 15176.0], [92.5, 15176.0], [92.6, 15176.0], [92.7, 15179.0], [92.8, 15180.0], [92.9, 15181.0], [93.0, 15184.0], [93.1, 15184.0], [93.2, 15186.0], [93.3, 15186.0], [93.4, 15188.0], [93.5, 15201.0], [93.6, 15252.0], [93.7, 15571.0], [93.8, 15689.0], [93.9, 16220.0], [94.0, 16252.0], [94.1, 16262.0], [94.2, 16265.0], [94.3, 16266.0], [94.4, 16375.0], [94.5, 16381.0], [94.6, 16396.0], [94.7, 16406.0], [94.8, 16406.0], [94.9, 16431.0], [95.0, 16458.0], [95.1, 16458.0], [95.2, 16510.0], [95.3, 16515.0], [95.4, 16521.0], [95.5, 16598.0], [95.6, 16607.0], [95.7, 16627.0], [95.8, 16638.0], [95.9, 16702.0], [96.0, 16729.0], [96.1, 16736.0], [96.2, 16755.0], [96.3, 16756.0], [96.4, 16775.0], [96.5, 16907.0], [96.6, 16999.0], [96.7, 17041.0], [96.8, 17054.0], [96.9, 17095.0], [97.0, 17320.0], [97.1, 17325.0], [97.2, 17337.0], [97.3, 17343.0], [97.4, 17378.0], [97.5, 17431.0], [97.6, 17431.0], [97.7, 17451.0], [97.8, 17452.0], [97.9, 17456.0], [98.0, 17471.0], [98.1, 17474.0], [98.2, 17479.0], [98.3, 17480.0], [98.4, 17486.0], [98.5, 17515.0], [98.6, 17517.0], [98.7, 17522.0], [98.8, 17527.0], [98.9, 17538.0], [99.0, 17547.0], [99.1, 17564.0], [99.2, 17572.0], [99.3, 17572.0], [99.4, 17606.0], [99.5, 17612.0], [99.6, 17616.0], [99.7, 17622.0], [99.8, 17627.0], [99.9, 18124.0]], "isOverall": false, "label": "register", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 665.0, "series": [{"data": [[0.0, 497.0], [8400.0, 2.0], [600.0, 10.0], [700.0, 12.0], [800.0, 9.0], [900.0, 5.0], [1000.0, 3.0], [1100.0, 1.0], [1200.0, 18.0], [1300.0, 15.0], [1400.0, 2.0], [1500.0, 1.0], [100.0, 558.0], [1600.0, 2.0], [1700.0, 5.0], [1800.0, 21.0], [1900.0, 33.0], [2000.0, 21.0], [2100.0, 3.0], [2300.0, 2.0], [2200.0, 2.0], [2400.0, 29.0], [2500.0, 17.0], [2600.0, 12.0], [2800.0, 8.0], [2700.0, 19.0], [2900.0, 4.0], [3000.0, 3.0], [200.0, 29.0], [3500.0, 2.0], [300.0, 72.0], [4700.0, 3.0], [4900.0, 1.0], [5100.0, 4.0], [5200.0, 2.0], [5300.0, 2.0], [6000.0, 1.0], [400.0, 120.0], [6900.0, 1.0], [7500.0, 1.0], [500.0, 48.0]], "isOverall": false, "label": "getUser", "isController": false}, {"data": [[0.0, 665.0], [600.0, 53.0], [10700.0, 1.0], [10500.0, 1.0], [700.0, 34.0], [11200.0, 1.0], [11100.0, 1.0], [11300.0, 1.0], [11700.0, 1.0], [12700.0, 1.0], [800.0, 35.0], [900.0, 6.0], [1100.0, 3.0], [1200.0, 1.0], [1300.0, 8.0], [1400.0, 4.0], [100.0, 459.0], [2200.0, 4.0], [2400.0, 6.0], [2500.0, 2.0], [2700.0, 1.0], [200.0, 55.0], [300.0, 88.0], [4800.0, 1.0], [4900.0, 1.0], [5200.0, 15.0], [5300.0, 2.0], [5600.0, 1.0], [5500.0, 19.0], [5400.0, 5.0], [5800.0, 1.0], [6100.0, 4.0], [6000.0, 2.0], [5900.0, 2.0], [6200.0, 1.0], [400.0, 67.0], [6400.0, 2.0], [6900.0, 3.0], [6700.0, 4.0], [6800.0, 2.0], [7100.0, 2.0], [7000.0, 2.0], [7200.0, 1.0], [7300.0, 3.0], [500.0, 29.0]], "isOverall": false, "label": "getListOfUser", "isController": false}, {"data": [[500.0, 2.0], [600.0, 76.0], [700.0, 16.0], [800.0, 4.0], [900.0, 14.0], [1000.0, 12.0], [1100.0, 11.0], [1200.0, 14.0], [1300.0, 8.0], [1400.0, 5.0], [1500.0, 9.0], [1600.0, 17.0], [1700.0, 13.0], [1800.0, 13.0], [1900.0, 4.0], [2000.0, 16.0], [2100.0, 7.0], [2200.0, 12.0], [2300.0, 3.0], [2500.0, 6.0], [2600.0, 2.0], [2800.0, 6.0], [2700.0, 5.0], [2900.0, 6.0], [3000.0, 7.0], [3100.0, 3.0], [3300.0, 13.0], [3200.0, 12.0], [3400.0, 10.0], [3500.0, 8.0], [3600.0, 17.0], [3700.0, 14.0], [3800.0, 12.0], [3900.0, 8.0], [4000.0, 7.0], [4300.0, 3.0], [4200.0, 6.0], [4100.0, 2.0], [4500.0, 11.0], [4400.0, 8.0], [4600.0, 4.0], [4700.0, 9.0], [4800.0, 7.0], [4900.0, 13.0], [5100.0, 15.0], [5000.0, 7.0], [5300.0, 20.0], [5200.0, 7.0], [5600.0, 31.0], [5500.0, 26.0], [5400.0, 21.0], [5700.0, 19.0], [5800.0, 23.0], [5900.0, 20.0], [6000.0, 21.0], [6100.0, 12.0], [6300.0, 19.0], [6200.0, 12.0], [6500.0, 19.0], [6600.0, 8.0], [6400.0, 14.0], [6700.0, 24.0], [6900.0, 16.0], [6800.0, 19.0], [7100.0, 32.0], [7000.0, 27.0], [7200.0, 30.0], [7400.0, 11.0], [7300.0, 13.0], [7600.0, 16.0], [7500.0, 20.0], [7900.0, 11.0], [7700.0, 23.0], [7800.0, 15.0], [8000.0, 23.0], [8100.0, 28.0], [8500.0, 11.0], [8700.0, 17.0], [8400.0, 12.0], [8300.0, 16.0], [8200.0, 24.0], [8600.0, 20.0], [8900.0, 6.0], [8800.0, 13.0], [9000.0, 15.0], [9200.0, 7.0], [9100.0, 6.0], [9700.0, 7.0], [9500.0, 5.0], [9600.0, 5.0], [9300.0, 8.0], [9400.0, 9.0], [10000.0, 11.0], [9900.0, 11.0], [9800.0, 10.0], [10100.0, 8.0], [10200.0, 5.0], [10700.0, 8.0], [10300.0, 5.0], [10500.0, 10.0], [10600.0, 4.0], [10400.0, 8.0], [11100.0, 2.0], [10800.0, 8.0], [10900.0, 8.0], [11200.0, 4.0], [11000.0, 5.0], [11400.0, 6.0], [11500.0, 6.0], [11600.0, 5.0], [11300.0, 2.0], [11700.0, 4.0], [11800.0, 4.0], [11900.0, 2.0], [12000.0, 3.0], [12200.0, 1.0], [12400.0, 1.0], [12300.0, 3.0], [13400.0, 1.0], [13800.0, 1.0], [14300.0, 1.0], [14400.0, 1.0], [14600.0, 1.0], [14500.0, 2.0], [14700.0, 1.0], [15100.0, 106.0], [15200.0, 2.0], [15500.0, 2.0], [15600.0, 1.0], [16300.0, 4.0], [16200.0, 8.0], [16100.0, 1.0], [16600.0, 5.0], [16700.0, 9.0], [16800.0, 1.0], [17000.0, 5.0], [16500.0, 6.0], [16400.0, 9.0], [17100.0, 1.0], [16900.0, 2.0], [17300.0, 7.0], [17400.0, 16.0], [17900.0, 1.0], [17500.0, 15.0], [17600.0, 7.0], [18100.0, 1.0], [19300.0, 1.0]], "isOverall": false, "label": "register", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 19300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 210.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2612.0, "series": [{"data": [[0.0, 2612.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 456.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1522.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 210.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 848.6456249999954, "minX": 1.6674792E12, "maxY": 848.6456249999954, "series": [{"data": [[1.6674792E12, 848.6456249999954]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6674792E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 72.0, "minX": 1.0, "maxY": 17905.0, "series": [{"data": [[2.0, 8499.0], [3.0, 8490.0], [12.0, 1408.3333333333333], [18.0, 1286.6666666666665], [23.0, 1836.0], [30.0, 623.0], [31.0, 610.0], [33.0, 1648.0], [45.0, 3071.0], [48.0, 3068.0], [51.0, 1713.6666666666665], [52.0, 557.0], [58.0, 2924.0], [61.0, 1551.0], [63.0, 352.0], [67.0, 300.85714285714283], [66.0, 328.235294117647], [65.0, 345.0], [71.0, 281.5], [70.0, 289.0], [69.0, 287.0], [68.0, 300.0], [74.0, 3002.0], [77.0, 304.0], [76.0, 666.0], [86.0, 1376.0], [85.0, 275.0], [84.0, 2898.0], [89.0, 2086.0], [98.0, 2253.769230769231], [97.0, 1890.875], [102.0, 2509.0], [111.0, 1728.3333333333333], [109.0, 7586.0], [114.0, 2160.0], [113.0, 239.0], [119.0, 2429.0], [118.0, 2620.0], [117.0, 2038.0], [116.0, 2681.0], [123.0, 2692.0], [121.0, 1851.5], [125.0, 1063.0], [133.0, 943.0], [131.0, 2725.5], [130.0, 2584.0], [129.0, 2747.0], [128.0, 1878.0], [142.0, 2553.5], [141.0, 1948.5], [140.0, 2602.0], [139.0, 2558.0], [137.0, 2705.0], [136.0, 2548.0], [151.0, 2201.0], [148.0, 1988.0], [147.0, 2063.5], [158.0, 1871.0], [157.0, 1959.25], [152.0, 2128.0], [167.0, 1944.5], [164.0, 1871.375], [163.0, 2045.0], [174.0, 2008.5], [173.0, 731.0], [172.0, 1928.0], [170.0, 1971.0], [169.0, 2034.0], [168.0, 2029.0], [183.0, 1947.6666666666667], [182.0, 1918.3333333333333], [180.0, 1954.0], [177.0, 1900.0], [189.0, 1930.0], [187.0, 1923.0], [197.0, 1951.0], [196.0, 1913.0], [194.0, 1957.0], [206.0, 1897.0], [201.0, 1858.0], [215.0, 1909.0], [211.0, 1894.5], [223.0, 520.4], [221.0, 2055.5], [218.0, 1828.0], [229.0, 492.0], [228.0, 1326.4], [226.0, 1894.0], [225.0, 511.6666666666667], [239.0, 470.0], [237.0, 479.0], [245.0, 495.25000000000006], [243.0, 1739.0], [242.0, 453.0], [241.0, 457.0], [240.0, 1811.0], [255.0, 2495.0], [248.0, 1750.0], [264.0, 5310.0], [262.0, 5188.666666666667], [261.0, 5179.0], [260.0, 4613.8], [259.0, 2483.0], [257.0, 2603.0], [256.0, 2612.0], [276.0, 5298.0], [273.0, 5341.0], [319.0, 2473.0], [318.0, 2475.7999999999997], [317.0, 2429.1333333333337], [312.0, 2838.0000000000005], [311.0, 6512.0], [333.0, 1225.0], [331.0, 1303.0], [329.0, 1376.0], [328.0, 1385.0], [327.0, 1385.5], [326.0, 1390.75], [325.0, 1918.625], [323.0, 2473.0], [321.0, 2478.0], [347.0, 389.0], [345.0, 600.6666666666666], [343.0, 580.0], [338.0, 672.0], [365.0, 127.0], [360.0, 133.0], [357.0, 118.0], [356.0, 133.5], [355.0, 176.16666666666666], [354.0, 206.0], [381.0, 103.0], [379.0, 99.5], [377.0, 120.5], [372.0, 122.0], [371.0, 130.0], [394.0, 124.0], [392.0, 122.44444444444444], [391.0, 123.0], [390.0, 120.66666666666667], [389.0, 118.8], [388.0, 124.08333333333331], [386.0, 97.33333333333333], [411.0, 587.6], [410.0, 482.6666666666667], [409.0, 450.6666666666667], [442.0, 331.3333333333333], [440.0, 345.0], [439.0, 349.25], [438.0, 328.6666666666667], [437.0, 273.3333333333333], [436.0, 206.8181818181818], [455.0, 161.0], [453.0, 162.66666666666666], [452.0, 185.74999999999997], [451.0, 172.16666666666666], [450.0, 204.5], [449.0, 361.0], [475.0, 86.2], [474.0, 92.47368421052632], [494.0, 80.0], [510.0, 96.0], [498.0, 94.0], [497.0, 95.0], [496.0, 86.05263157894738], [540.0, 81.0], [538.0, 76.0], [534.0, 92.0], [532.0, 82.0], [530.0, 89.0], [529.0, 84.0], [528.0, 82.5], [518.0, 76.0], [515.0, 84.8125], [514.0, 113.0], [558.0, 91.5], [571.0, 87.0], [569.0, 80.0], [550.0, 77.0], [549.0, 85.5], [547.0, 94.0], [565.0, 88.0], [562.0, 83.0], [556.0, 95.625], [555.0, 95.5], [554.0, 96.5], [552.0, 80.5], [581.0, 83.0], [591.0, 89.0], [592.0, 90.0], [588.0, 113.3076923076923], [587.0, 94.66666666666666], [584.0, 81.0], [583.0, 83.0], [582.0, 81.0], [579.0, 92.0], [578.0, 81.0], [636.0, 82.5], [638.0, 88.0], [635.0, 80.0], [633.0, 76.5], [632.0, 80.66666666666667], [617.0, 109.0], [623.0, 93.5], [631.0, 79.5], [630.0, 82.8], [628.0, 86.0], [627.0, 96.0], [665.0, 465.0], [664.0, 125.0], [647.0, 101.0], [646.0, 102.0], [641.0, 106.0], [662.0, 500.25], [661.0, 130.0], [659.0, 82.0], [658.0, 93.0], [655.0, 86.0], [649.0, 90.0], [648.0, 92.5], [695.0, 83.0], [691.0, 79.0], [719.0, 701.0], [718.0, 734.0], [717.0, 736.0], [762.0, 467.0], [759.0, 609.0], [752.0, 505.0], [750.0, 621.0], [744.0, 514.5], [738.0, 529.0], [796.0, 399.0], [798.0, 437.0], [794.0, 403.0], [793.0, 397.0], [790.0, 387.5], [789.0, 407.0], [787.0, 414.0], [784.0, 469.5], [783.0, 467.8], [769.0, 462.0], [772.0, 590.0], [771.0, 465.0], [775.0, 451.6666666666667], [774.0, 451.0], [782.0, 452.8571428571429], [781.0, 400.0], [780.0, 484.0], [778.0, 409.0], [777.0, 429.0], [815.0, 428.0], [812.0, 458.0], [811.0, 422.5], [810.0, 419.0], [806.0, 445.6666666666667], [803.0, 407.0], [801.0, 512.0], [861.0, 137.14285714285714], [862.0, 131.0], [859.0, 144.2], [858.0, 136.33333333333334], [857.0, 135.0], [847.0, 130.08333333333331], [845.0, 131.4], [844.0, 129.25], [843.0, 130.81818181818184], [854.0, 141.66666666666666], [853.0, 139.0], [852.0, 131.0], [848.0, 131.625], [884.0, 83.53333333333333], [894.0, 127.0], [881.0, 102.14285714285715], [893.0, 128.0], [890.0, 80.5], [889.0, 216.33333333333331], [879.0, 110.0], [866.0, 134.5], [864.0, 135.5], [869.0, 127.0], [867.0, 124.0], [878.0, 109.0], [877.0, 108.28571428571428], [876.0, 114.0], [873.0, 117.5], [887.0, 82.83870967741937], [886.0, 79.5], [885.0, 83.0], [883.0, 86.16666666666667], [882.0, 94.33333333333333], [921.0, 394.0], [919.0, 396.0], [900.0, 171.0], [897.0, 280.5], [991.0, 87.0], [990.0, 83.0], [989.0, 79.0], [988.0, 98.6], [981.0, 89.0], [971.0, 81.0], [1012.0, 98.0], [1020.0, 92.0], [1017.0, 99.75], [996.0, 85.5], [992.0, 90.0], [1007.0, 99.0], [1006.0, 99.57894736842107], [1005.0, 105.33333333333333], [1004.0, 93.54545454545455], [1003.0, 80.0], [1002.0, 81.33333333333333], [1001.0, 88.5], [1015.0, 96.0], [1014.0, 99.0], [1013.0, 96.0], [1011.0, 97.33333333333333], [1009.0, 98.0], [1008.0, 97.42857142857143], [1074.0, 80.0], [1082.0, 94.0], [1081.0, 93.8], [1079.0, 88.66666666666667], [1073.0, 80.8], [1039.0, 89.0], [1038.0, 88.08333333333333], [1035.0, 119.0], [1034.0, 109.0], [1064.0, 92.2], [1054.0, 98.0], [1051.0, 99.375], [1049.0, 97.0], [1048.0, 99.0], [1047.0, 101.0], [1044.0, 98.66666666666667], [1043.0, 94.0], [1143.0, 82.3684210526316], [1151.0, 79.5], [1142.0, 89.0], [1141.0, 83.33333333333333], [1140.0, 93.0], [1102.0, 100.0], [1100.0, 77.0], [1098.0, 91.0], [1097.0, 85.0], [1096.0, 88.33333333333333], [1094.0, 87.0], [1116.0, 92.0], [1115.0, 85.0], [1114.0, 84.0], [1111.0, 80.0], [1107.0, 81.0], [1106.0, 81.0], [1104.0, 85.33333333333333], [1131.0, 90.0], [1126.0, 83.0], [1123.0, 82.0], [1121.0, 83.0], [1192.0, 100.33333333333333], [1213.0, 512.75], [1181.0, 245.4], [1154.0, 81.0], [1153.0, 82.0], [1160.0, 84.0], [1156.0, 80.0], [1167.0, 139.0], [1165.0, 81.0], [1185.0, 98.0], [1195.0, 104.0], [1194.0, 101.0], [1193.0, 98.0], [1189.0, 101.0], [1188.0, 99.0], [1187.0, 100.5], [1186.0, 94.0], [1270.0, 106.0], [1275.0, 688.0], [1279.0, 116.0], [1250.0, 200.33333333333334], [1249.0, 367.5], [1252.0, 117.0], [1251.0, 200.0], [1263.0, 509.6666666666667], [1259.0, 110.0], [1278.0, 102.0], [1277.0, 107.5], [1274.0, 97.0], [1273.0, 105.0], [1272.0, 392.0], [1267.0, 207.0], [1266.0, 677.0], [1245.0, 117.0], [1218.0, 119.5], [1226.0, 734.0], [1219.0, 891.0], [1228.0, 726.0], [1227.0, 123.0], [1231.0, 124.33333333333333], [1230.0, 115.0], [1244.0, 609.5], [1243.0, 691.0], [1242.0, 824.0], [1239.0, 257.5], [1235.0, 133.0], [1341.0, 401.3333333333333], [1342.0, 720.5], [1340.0, 581.0], [1332.0, 130.0], [1321.0, 490.0], [1319.0, 136.0], [1313.0, 556.0], [1307.0, 238.0], [1280.0, 579.5], [1287.0, 119.0], [1281.0, 111.0], [1295.0, 123.0], [1290.0, 117.0], [1305.0, 121.0], [1302.0, 122.0], [1384.0, 106.5], [1388.0, 128.0], [1395.0, 186.0], [1392.0, 133.0], [1358.0, 451.0], [1357.0, 377.0], [1355.0, 453.25], [1353.0, 508.0], [1352.0, 126.0], [1351.0, 491.0], [1350.0, 477.0], [1349.0, 283.5], [1348.0, 416.8], [1345.0, 376.33333333333337], [1375.0, 388.75], [1374.0, 427.0], [1372.0, 408.6666666666667], [1371.0, 396.0], [1370.0, 380.7272727272727], [1369.0, 253.5], [1368.0, 424.0], [1367.0, 361.2], [1366.0, 514.0], [1365.0, 409.0], [1364.0, 267.5], [1363.0, 472.0], [1360.0, 396.3333333333333], [1391.0, 140.0], [1390.0, 133.33333333333334], [1389.0, 138.0], [1387.0, 132.0], [1386.0, 123.0], [1385.0, 121.0], [1383.0, 201.0], [1382.0, 99.0], [1381.0, 113.0], [1378.0, 252.5], [1377.0, 212.6], [1376.0, 555.5], [1461.0, 111.33333333333333], [1471.0, 392.0], [1441.0, 236.5], [1440.0, 136.5], [1444.0, 151.5909090909091], [1443.0, 133.2], [1450.0, 208.5], [1449.0, 152.47058823529412], [1452.0, 300.6], [1451.0, 132.0], [1455.0, 107.71428571428571], [1453.0, 146.64285714285714], [1466.0, 79.0], [1462.0, 177.0], [1460.0, 83.0], [1459.0, 107.4], [1458.0, 89.0], [1457.0, 94.0], [1456.0, 100.0], [1438.0, 505.0], [1411.0, 141.0], [1409.0, 145.0], [1413.0, 154.33333333333334], [1412.0, 134.0], [1414.0, 125.0], [1510.0, 105.0], [1517.0, 103.0], [1515.0, 101.0], [1512.0, 107.0], [1507.0, 96.0], [1505.0, 101.0], [1504.0, 101.0], [1483.0, 99.0], [1479.0, 82.0], [1478.0, 83.5], [1477.0, 79.0], [1474.0, 87.0], [1473.0, 73.0], [1503.0, 109.0], [1498.0, 101.0], [1496.0, 118.5], [1494.0, 106.66666666666667], [1493.0, 110.0], [1492.0, 107.5], [1489.0, 103.66666666666667], [1559.0, 110.0], [1558.0, 92.0], [1549.0, 95.0], [1540.0, 96.0], [1537.0, 96.0], [1600.0, 116.00000000000003]], "isOverall": false, "label": "getUser", "isController": false}, {"data": [[852.2837500000021, 514.9231249999998]], "isOverall": false, "label": "getUser-Aggregated", "isController": false}, {"data": [[2.0, 81.0], [3.0, 80.0], [4.0, 11775.0], [5.0, 10545.0], [6.0, 11181.0], [7.0, 11337.0], [8.0, 11263.0], [9.0, 10756.0], [10.0, 197.0], [11.0, 100.0], [12.0, 97.0], [14.0, 82.5], [15.0, 85.0], [16.0, 87.0], [17.0, 90.0], [18.0, 92.0], [19.0, 4891.0], [20.0, 543.0], [21.0, 482.0], [22.0, 96.0], [23.0, 339.0], [24.0, 200.0], [25.0, 100.0], [26.0, 95.0], [27.0, 96.0], [28.0, 100.0], [29.0, 91.0], [30.0, 89.0], [31.0, 81.0], [33.0, 88.0], [32.0, 83.0], [35.0, 84.0], [34.0, 92.0], [41.0, 507.0], [40.0, 85.0], [43.0, 85.0], [42.0, 298.25], [45.0, 84.0], [46.0, 84.0], [49.0, 83.5], [48.0, 82.0], [51.0, 81.0], [50.0, 81.0], [53.0, 81.0], [52.0, 81.0], [55.0, 81.5], [57.0, 83.0], [59.0, 77.0], [58.0, 76.0], [61.0, 77.0], [60.0, 77.0], [63.0, 80.0], [67.0, 93.0], [66.0, 75.0], [65.0, 76.0], [64.0, 85.0], [71.0, 105.0], [70.0, 86.0], [69.0, 91.0], [68.0, 92.0], [75.0, 123.0], [74.0, 119.0], [73.0, 106.5], [79.0, 112.0], [78.0, 122.0], [77.0, 114.0], [76.0, 118.0], [83.0, 93.0], [82.0, 103.0], [81.0, 103.0], [80.0, 96.0], [86.0, 93.0], [85.0, 91.0], [84.0, 95.0], [91.0, 117.0], [89.0, 91.0], [88.0, 104.0], [95.0, 111.66666666666667], [93.0, 110.0], [98.0, 96.0], [97.0, 229.0], [96.0, 129.0], [103.0, 988.0], [102.0, 543.5], [100.0, 90.0], [107.0, 87.0], [106.0, 82.0], [105.0, 89.0], [111.0, 82.0], [110.0, 74.0], [109.0, 88.0], [108.0, 80.0], [115.0, 79.0], [114.0, 77.0], [113.0, 81.0], [112.0, 75.0], [119.0, 98.0], [118.0, 81.0], [117.0, 81.0], [116.0, 77.0], [123.0, 85.0], [122.0, 78.0], [121.0, 72.0], [120.0, 83.0], [127.0, 78.0], [126.0, 92.0], [125.0, 85.0], [124.0, 117.0], [135.0, 78.0], [133.0, 79.0], [132.0, 98.0], [131.0, 78.0], [130.0, 83.0], [129.0, 75.0], [128.0, 81.0], [143.0, 75.0], [142.0, 77.0], [141.0, 78.0], [140.0, 76.0], [139.0, 78.0], [137.0, 74.0], [136.0, 76.0], [151.0, 78.0], [150.0, 83.0], [149.0, 78.0], [148.0, 79.0], [147.0, 82.0], [145.0, 80.5], [159.0, 78.0], [158.0, 82.0], [157.0, 73.0], [156.0, 76.0], [155.0, 84.0], [154.0, 86.0], [153.0, 85.0], [152.0, 78.0], [167.0, 77.5], [166.0, 79.0], [164.0, 90.5], [162.0, 77.0], [161.0, 81.5], [175.0, 85.0], [174.0, 81.0], [173.0, 85.0], [172.0, 85.0], [171.0, 76.0], [170.0, 75.0], [169.0, 568.0], [168.0, 86.0], [183.0, 73.0], [182.0, 80.0], [181.0, 95.0], [180.0, 77.0], [179.0, 79.0], [178.0, 87.0], [177.0, 77.0], [176.0, 93.0], [191.0, 93.0], [189.0, 86.5], [187.0, 92.5], [185.0, 3115.0], [198.0, 553.0], [197.0, 83.0], [196.0, 79.0], [195.0, 81.0], [194.0, 84.0], [193.0, 571.0], [192.0, 7090.0], [206.0, 86.0], [204.0, 3119.0], [202.0, 78.0], [201.0, 85.0], [200.0, 75.5], [215.0, 3725.5], [213.0, 6833.0], [212.0, 81.0], [211.0, 87.0], [210.0, 7023.0], [209.0, 78.66666666666667], [223.0, 84.0], [222.0, 80.0], [221.0, 81.0], [220.0, 3086.5], [218.0, 6825.0], [217.0, 496.0], [216.0, 75.0], [231.0, 85.5], [229.0, 76.0], [228.0, 86.0], [227.0, 6781.0], [226.0, 86.0], [225.0, 87.0], [224.0, 72.0], [239.0, 7392.0], [238.0, 436.0], [237.0, 80.0], [236.0, 88.0], [235.0, 435.0], [234.0, 7300.0], [233.0, 79.0], [247.0, 7194.0], [246.0, 331.0], [245.0, 97.0], [244.0, 86.0], [242.0, 86.0], [241.0, 7292.0], [240.0, 421.0], [255.0, 329.0], [254.0, 4033.6666666666665], [251.0, 312.0], [250.0, 310.0], [249.0, 7186.0], [248.0, 316.0], [268.0, 5256.0], [270.0, 5257.0], [271.0, 5247.0], [269.0, 5258.0], [266.0, 5301.0], [264.0, 5258.0], [263.0, 5235.0], [257.0, 6166.0], [256.0, 5906.0], [259.0, 859.5], [258.0, 6440.0], [262.0, 5244.0], [261.0, 5237.0], [285.0, 5527.333333333333], [284.0, 5510.0], [282.0, 5512.0], [281.0, 5470.0], [278.0, 5519.0], [277.0, 5494.0], [276.0, 5293.0], [275.0, 5269.5], [273.0, 5285.666666666667], [302.0, 6246.0], [301.0, 5596.333333333333], [298.0, 5528.0], [296.0, 5518.0], [295.0, 5532.0], [292.0, 5519.6], [290.0, 5513.0], [288.0, 5516.0], [318.0, 2445.0], [319.0, 2532.0], [317.0, 2796.0], [316.0, 2256.0], [315.0, 2256.5], [314.0, 2258.0], [312.0, 4955.0], [311.0, 6935.0], [307.0, 6762.0], [305.0, 6414.0], [304.0, 6113.0], [309.0, 6821.0], [334.0, 1178.0], [335.0, 1174.0], [333.0, 1265.0], [332.0, 1306.0], [331.0, 1402.0], [330.0, 1378.0], [329.0, 1390.0], [328.0, 1386.0], [327.0, 1391.0], [320.0, 2500.0], [323.0, 2484.0], [321.0, 2492.0], [326.0, 1421.0], [325.0, 2478.0], [324.0, 2479.0], [350.0, 281.0], [351.0, 280.0], [349.0, 311.0], [348.0, 309.0], [347.0, 530.0], [346.0, 571.0], [345.0, 595.0], [342.0, 756.0], [337.0, 846.0], [336.0, 1170.0], [339.0, 658.0], [338.0, 812.0], [341.0, 649.0], [340.0, 656.0], [365.0, 135.5], [366.0, 135.0], [364.0, 123.0], [355.0, 200.0], [354.0, 273.0], [353.0, 280.0], [352.0, 284.0], [362.0, 128.0], [361.0, 133.0], [360.0, 140.5], [358.0, 150.0], [357.0, 874.0], [356.0, 128.0], [381.0, 100.0], [383.0, 104.0], [380.0, 111.0], [379.0, 109.0], [377.0, 121.0], [376.0, 123.66666666666667], [375.0, 134.0], [372.0, 129.0], [371.0, 137.0], [370.0, 129.0], [368.0, 126.5], [397.0, 746.0], [398.0, 734.0], [396.0, 137.0], [387.0, 809.0], [386.0, 838.0], [385.0, 104.5], [394.0, 134.0], [393.0, 143.0], [392.0, 117.0], [391.0, 137.0], [390.0, 119.0], [389.0, 119.0], [388.0, 814.0], [414.0, 140.0], [415.0, 106.0], [413.0, 615.0], [412.0, 252.0], [411.0, 596.0], [410.0, 347.0], [409.0, 326.0], [408.0, 373.0], [407.0, 122.0], [401.0, 140.0], [400.0, 137.5], [406.0, 130.5], [405.0, 136.0], [404.0, 132.0], [430.0, 512.0], [431.0, 107.0], [429.0, 108.0], [428.0, 106.0], [427.0, 107.0], [425.0, 111.0], [424.0, 108.0], [423.0, 108.0], [419.0, 105.5], [418.0, 95.0], [416.0, 106.0], [422.0, 110.0], [446.0, 327.0], [447.0, 350.0], [445.0, 322.0], [444.0, 353.5], [442.0, 354.0], [441.0, 344.0], [440.0, 349.0], [439.0, 355.0], [435.0, 105.0], [434.0, 99.0], [438.0, 360.0], [437.0, 233.0], [436.0, 101.0], [462.0, 81.0], [463.0, 78.0], [461.0, 82.0], [460.0, 79.0], [459.0, 88.0], [458.0, 95.0], [457.0, 89.0], [456.0, 180.0], [455.0, 189.0], [449.0, 337.0], [448.0, 345.0], [451.0, 253.0], [450.0, 357.0], [454.0, 200.0], [453.0, 216.0], [452.0, 245.0], [478.0, 103.0], [479.0, 85.0], [477.0, 92.0], [476.0, 84.0], [475.0, 94.0], [474.0, 81.0], [473.0, 78.0], [472.0, 82.0], [471.0, 84.66666666666667], [467.0, 80.0], [465.0, 74.0], [464.0, 76.0], [468.0, 83.0], [493.0, 83.0], [494.0, 80.0], [492.0, 84.0], [483.0, 93.0], [482.0, 88.0], [480.0, 82.0], [491.0, 90.0], [490.0, 85.0], [489.0, 88.0], [488.0, 87.0], [487.0, 87.5], [485.0, 91.0], [510.0, 83.0], [511.0, 87.0], [509.0, 101.0], [508.0, 87.0], [507.0, 93.0], [506.0, 95.0], [505.0, 103.0], [504.0, 88.0], [503.0, 102.0], [497.0, 107.0], [496.0, 83.0], [499.0, 83.0], [498.0, 83.0], [502.0, 106.0], [501.0, 100.0], [540.0, 76.0], [543.0, 81.0], [528.0, 84.0], [530.0, 86.0], [529.0, 83.0], [532.0, 86.0], [531.0, 89.0], [542.0, 80.0], [541.0, 83.0], [539.0, 82.0], [538.0, 82.0], [537.0, 81.0], [536.0, 108.0], [527.0, 81.0], [513.0, 86.5], [515.0, 87.0], [514.0, 82.0], [517.0, 94.0], [516.0, 84.0], [519.0, 1382.0], [518.0, 99.0], [526.0, 78.0], [525.0, 78.0], [524.0, 90.0], [523.0, 95.0], [522.0, 85.0], [521.0, 87.0], [520.0, 81.0], [535.0, 108.0], [534.0, 107.5], [568.0, 84.0], [573.0, 85.0], [574.0, 80.0], [561.0, 88.0], [560.0, 86.0], [563.0, 82.0], [562.0, 93.0], [572.0, 85.0], [571.0, 82.0], [569.0, 81.0], [559.0, 89.0], [545.0, 78.0], [544.0, 82.0], [547.0, 81.0], [546.0, 83.0], [549.0, 76.0], [548.0, 81.0], [551.0, 79.0], [550.0, 81.0], [558.0, 96.0], [557.0, 100.0], [556.0, 95.0], [555.0, 100.0], [554.0, 85.5], [552.0, 620.0], [567.0, 82.0], [566.0, 83.0], [565.0, 89.0], [564.0, 91.0], [600.0, 91.0], [605.0, 82.0], [606.0, 82.0], [592.0, 99.5], [594.0, 83.0], [593.0, 82.0], [604.0, 76.0], [603.0, 76.0], [601.0, 79.0], [590.0, 804.5], [577.0, 87.0], [576.0, 79.5], [579.0, 79.0], [578.0, 79.0], [581.0, 81.0], [580.0, 85.0], [583.0, 83.0], [582.0, 74.0], [588.0, 94.0], [587.0, 90.0], [586.0, 79.0], [585.0, 81.0], [599.0, 78.0], [597.0, 78.0], [596.0, 81.0], [595.0, 862.0], [636.0, 78.0], [639.0, 99.0], [624.0, 456.0], [626.0, 807.0], [625.0, 91.0], [628.0, 86.0], [627.0, 763.0], [638.0, 92.0], [637.0, 87.0], [635.0, 84.0], [634.0, 83.0], [633.0, 750.0], [632.0, 767.0], [623.0, 103.0], [610.0, 721.5], [608.0, 183.0], [615.0, 1399.0], [614.0, 803.0], [622.0, 85.0], [621.0, 91.0], [620.0, 836.0], [619.0, 99.0], [617.0, 314.3333333333333], [616.0, 459.5], [631.0, 707.0], [630.0, 780.5], [664.0, 764.0], [668.0, 701.0], [671.0, 84.0], [657.0, 544.0], [656.0, 86.0], [659.0, 82.0], [658.0, 92.0], [670.0, 860.0], [669.0, 401.0], [667.0, 94.0], [666.0, 960.0], [665.0, 744.0], [655.0, 88.0], [640.0, 94.0], [645.0, 672.0], [643.0, 633.0], [647.0, 105.0], [646.0, 673.3333333333334], [654.0, 77.0], [653.0, 79.0], [652.0, 603.0], [651.0, 612.0], [650.0, 89.0], [649.0, 81.0], [648.0, 109.0], [663.0, 864.5], [662.0, 807.0], [661.0, 779.0], [702.0, 650.0], [692.0, 670.0], [703.0, 130.0], [688.0, 896.0], [691.0, 866.0], [689.0, 866.0], [701.0, 681.5], [699.0, 99.66666666666667], [697.0, 99.0], [678.0, 793.0], [677.0, 636.5], [675.0, 878.0], [674.0, 404.0], [673.0, 797.0], [672.0, 385.0], [687.0, 789.3333333333334], [684.0, 632.3333333333334], [681.0, 698.0], [680.0, 766.5], [695.0, 577.0], [694.0, 243.0], [693.0, 90.0], [728.0, 128.0], [734.0, 242.0], [735.0, 130.0], [721.0, 351.5], [723.0, 676.0], [722.0, 683.0], [733.0, 660.0], [732.0, 137.0], [730.0, 128.0], [719.0, 658.0], [705.0, 123.0], [704.0, 276.0], [707.0, 147.0], [706.0, 779.0], [709.0, 753.0], [708.0, 119.0], [711.0, 759.0], [710.0, 756.0], [718.0, 724.0], [717.0, 609.5], [715.0, 490.0], [714.0, 488.0], [713.0, 123.5], [727.0, 438.0], [726.0, 453.0], [725.0, 134.0], [724.0, 464.0], [760.0, 116.0], [765.0, 111.0], [767.0, 111.0], [753.0, 401.0], [752.0, 497.5], [764.0, 496.0], [762.0, 118.0], [761.0, 496.0], [750.0, 431.0], [736.0, 139.0], [738.0, 438.0], [737.0, 474.0], [742.0, 531.0], [741.0, 639.3333333333334], [749.0, 426.0], [748.0, 433.0], [747.0, 407.0], [746.0, 420.5], [744.0, 538.0], [759.0, 540.0], [758.0, 370.5], [756.0, 558.5], [755.0, 625.0], [775.0, 299.0], [797.0, 300.0], [798.0, 324.0], [796.0, 306.0], [793.0, 321.0], [792.0, 309.0], [774.0, 98.0], [773.0, 99.0], [772.0, 105.0], [771.0, 104.0], [770.0, 427.0], [769.0, 111.0], [768.0, 434.5], [783.0, 269.0], [782.0, 570.0], [781.0, 284.0], [780.0, 936.0], [779.0, 559.0], [778.0, 307.0], [777.0, 308.0], [776.0, 107.0], [791.0, 335.0], [790.0, 291.0], [787.0, 255.66666666666666], [784.0, 373.0], [830.0, 239.5], [820.0, 249.5], [831.0, 148.0], [816.0, 324.0], [819.0, 186.0], [817.0, 174.0], [828.0, 281.0], [827.0, 326.0], [825.0, 195.0], [806.0, 274.0], [805.0, 297.0], [803.0, 393.3333333333333], [802.0, 260.0], [801.0, 422.0], [800.0, 304.6666666666667], [815.0, 345.0], [813.0, 319.0], [812.0, 430.0], [811.0, 478.0], [810.0, 457.0], [809.0, 378.3333333333333], [823.0, 390.0], [822.0, 374.0], [821.0, 371.0], [857.0, 144.0], [861.0, 144.0], [863.0, 138.0], [848.0, 133.0], [851.0, 131.5], [849.0, 139.0], [853.0, 145.0], [852.0, 129.0], [860.0, 141.0], [859.0, 133.0], [858.0, 136.0], [856.0, 132.0], [839.0, 328.0], [838.0, 332.0], [837.0, 314.6666666666667], [834.0, 318.0], [833.0, 326.0], [832.0, 338.0], [847.0, 129.0], [845.0, 128.0], [844.0, 134.0], [843.0, 225.5], [841.0, 313.0], [840.0, 135.0], [855.0, 143.0], [854.0, 141.0], [889.0, 236.0], [893.0, 122.0], [894.0, 306.0], [881.0, 100.0], [883.0, 100.0], [882.0, 91.0], [892.0, 136.0], [891.0, 115.0], [890.0, 82.0], [879.0, 105.0], [866.0, 131.0], [864.0, 140.0], [869.0, 122.5], [867.0, 127.0], [871.0, 125.0], [870.0, 122.0], [878.0, 108.0], [877.0, 114.0], [876.0, 117.0], [875.0, 109.5], [873.0, 123.0], [872.0, 123.0], [887.0, 83.0], [886.0, 78.0], [885.0, 82.0], [884.0, 82.0], [921.0, 109.0], [926.0, 88.0], [927.0, 89.0], [915.0, 119.0], [913.0, 115.5], [925.0, 101.0], [924.0, 100.0], [922.0, 95.0], [920.0, 102.0], [902.0, 111.0], [901.0, 135.0], [900.0, 116.0], [899.0, 116.5], [897.0, 121.0], [896.0, 123.0], [911.0, 112.0], [910.0, 117.0], [909.0, 112.0], [908.0, 116.0], [907.0, 195.5], [906.0, 116.0], [904.0, 112.0], [919.0, 105.0], [917.0, 115.66666666666667], [958.0, 82.0], [959.0, 79.0], [944.0, 89.0], [956.0, 89.0], [955.0, 90.0], [954.0, 81.5], [952.0, 91.0], [943.0, 85.66666666666667], [932.0, 85.0], [929.0, 81.0], [940.0, 81.8], [939.0, 91.0], [937.0, 91.5], [936.0, 90.0], [951.0, 89.0], [950.0, 83.0], [948.0, 95.5], [946.0, 88.0], [988.0, 80.0], [991.0, 86.0], [987.0, 76.0], [986.0, 156.33333333333331], [985.0, 79.5], [965.0, 81.0], [962.0, 75.0], [975.0, 82.0], [974.0, 83.0], [973.0, 84.0], [972.0, 85.0], [970.0, 86.0], [981.0, 79.0], [980.0, 89.0], [979.0, 86.0], [977.0, 80.0], [1019.0, 86.0], [1012.0, 95.0], [1021.0, 93.0], [1022.0, 89.0], [1011.0, 103.0], [1008.0, 308.0], [1020.0, 93.0], [1017.0, 99.5], [999.0, 220.0], [998.0, 82.0], [996.0, 80.5], [995.0, 83.5], [993.0, 78.0], [992.0, 75.0], [1007.0, 92.0], [1006.0, 110.0], [1003.0, 77.0], [1002.0, 83.0], [1001.0, 88.0], [1015.0, 90.0], [1014.0, 95.0], [1013.0, 97.0], [1082.0, 762.0], [1060.0, 93.0], [1058.0, 104.0], [1064.0, 92.0], [1062.0, 97.0], [1066.0, 91.0], [1070.0, 79.5], [1068.0, 82.0], [1086.0, 81.0], [1080.0, 811.0], [1076.0, 344.0], [1038.0, 90.0], [1036.0, 94.0], [1034.0, 95.0], [1032.0, 101.0], [1030.0, 117.5], [1024.0, 90.0], [1054.0, 98.0], [1052.0, 98.0], [1050.0, 95.0], [1048.0, 94.0], [1044.0, 97.0], [1042.0, 89.0], [1040.0, 89.5], [1142.0, 82.0], [1148.0, 81.0], [1122.0, 721.0], [1126.0, 85.0], [1130.0, 701.0], [1132.0, 83.0], [1134.0, 76.0], [1150.0, 931.0], [1144.0, 85.0], [1140.0, 678.0], [1138.0, 729.0], [1136.0, 80.0], [1118.0, 79.0], [1090.0, 80.0], [1094.0, 81.0], [1092.0, 81.0], [1096.0, 81.0], [1098.0, 79.0], [1102.0, 91.5], [1100.0, 92.0], [1116.0, 81.5], [1114.0, 433.0], [1110.0, 89.0], [1106.0, 82.0], [1104.0, 94.5], [1206.0, 107.0], [1184.0, 104.0], [1186.0, 106.0], [1188.0, 846.0], [1192.0, 818.0], [1194.0, 811.0], [1196.0, 104.0], [1214.0, 126.0], [1208.0, 115.5], [1204.0, 102.5], [1202.0, 106.5], [1200.0, 99.66666666666667], [1166.0, 869.0], [1164.0, 84.0], [1162.0, 87.0], [1160.0, 83.5], [1158.0, 76.5], [1156.0, 101.0], [1154.0, 85.5], [1152.0, 89.0], [1174.0, 99.5], [1172.0, 84.5], [1170.0, 86.0], [1272.0, 394.0], [1248.0, 698.0], [1250.0, 421.0], [1254.0, 98.0], [1258.0, 615.6666666666666], [1260.0, 333.0], [1262.0, 107.0], [1278.0, 296.0], [1274.0, 106.0], [1270.0, 101.0], [1266.0, 418.0], [1264.0, 107.0], [1230.0, 425.0], [1228.0, 125.0], [1226.0, 122.5], [1224.0, 291.5], [1222.0, 454.0], [1220.0, 124.0], [1218.0, 121.0], [1216.0, 133.0], [1244.0, 436.0], [1242.0, 108.0], [1238.0, 107.0], [1234.0, 117.0], [1232.0, 111.0], [1336.0, 468.0], [1340.0, 137.0], [1312.0, 122.0], [1316.0, 201.0], [1314.0, 126.0], [1318.0, 134.0], [1324.0, 129.0], [1322.0, 469.0], [1342.0, 442.0], [1338.0, 126.0], [1332.0, 132.0], [1328.0, 128.0], [1280.0, 310.0], [1282.0, 302.0], [1284.0, 468.0], [1286.0, 125.0], [1290.0, 112.0], [1292.0, 365.0], [1294.0, 119.0], [1306.0, 125.0], [1304.0, 263.0], [1302.0, 190.0], [1300.0, 117.0], [1298.0, 205.0], [1296.0, 132.0], [1400.0, 147.0], [1394.0, 135.0], [1404.0, 142.0], [1378.0, 99.5], [1376.0, 267.0], [1382.0, 108.0], [1384.0, 104.0], [1386.0, 315.0], [1388.0, 294.0], [1390.0, 307.0], [1406.0, 294.0], [1402.0, 144.0], [1392.0, 146.0], [1344.0, 433.0], [1346.0, 128.0], [1348.0, 445.0], [1350.0, 132.0], [1352.0, 126.0], [1354.0, 129.0], [1358.0, 433.0], [1372.0, 396.0], [1370.0, 424.0], [1366.0, 113.0], [1364.0, 428.0], [1362.0, 125.0], [1360.0, 129.5], [1456.0, 104.0], [1440.0, 129.0], [1450.0, 132.0], [1444.0, 141.0], [1452.0, 121.0], [1466.0, 78.5], [1462.0, 84.0], [1460.0, 84.0], [1458.0, 86.0], [1422.0, 134.0], [1420.0, 122.0], [1416.0, 123.0], [1414.0, 126.0], [1412.0, 136.0], [1410.0, 126.0], [1408.0, 143.0], [1438.0, 153.0], [1436.0, 134.0], [1434.0, 130.5], [1432.0, 126.0], [1430.0, 131.0], [1428.0, 131.0], [1426.0, 129.0], [1424.0, 132.0], [1486.0, 95.0], [1504.0, 98.0], [1506.0, 110.0], [1510.0, 100.0], [1514.0, 108.0], [1512.0, 103.0], [1534.0, 102.0], [1530.0, 102.0], [1524.0, 104.5], [1522.0, 102.0], [1482.0, 97.0], [1478.0, 85.5], [1476.0, 84.0], [1474.0, 78.85714285714285], [1502.0, 104.0], [1500.0, 132.0], [1498.0, 101.0], [1496.0, 109.0], [1494.0, 104.0], [1492.0, 108.5], [1544.0, 95.66666666666667], [1598.0, 94.0], [1596.0, 96.25], [1546.0, 97.33333333333333], [1540.0, 94.25], [1562.0, 102.0], [1558.0, 98.33333333333333], [1556.0, 96.0], [1554.0, 96.5], [1600.0, 100.89285714285711], [1083.0, 87.0], [1087.0, 90.0], [1057.0, 93.5], [1059.0, 100.0], [1061.0, 97.0], [1067.0, 87.5], [1081.0, 88.0], [1079.0, 84.0], [1073.0, 353.0], [1037.0, 89.0], [1035.0, 93.0], [1027.0, 89.0], [1055.0, 100.0], [1053.0, 101.0], [1051.0, 96.0], [1049.0, 96.0], [1047.0, 98.0], [1043.0, 89.0], [1149.0, 82.0], [1151.0, 374.5], [1121.0, 307.0], [1125.0, 83.5], [1123.0, 82.0], [1127.0, 80.0], [1129.0, 75.5], [1131.0, 633.0], [1133.0, 699.0], [1145.0, 80.0], [1143.0, 83.0], [1141.0, 81.0], [1139.0, 607.0], [1137.0, 82.5], [1089.0, 446.0], [1091.0, 86.0], [1095.0, 80.0], [1097.0, 77.0], [1113.0, 734.0], [1111.0, 80.0], [1107.0, 81.0], [1105.0, 785.0], [1211.0, 121.0], [1189.0, 562.0], [1215.0, 121.0], [1185.0, 98.0], [1187.0, 99.0], [1191.0, 98.5], [1193.0, 103.0], [1195.0, 109.0], [1197.0, 104.0], [1213.0, 119.0], [1209.0, 116.0], [1205.0, 118.0], [1167.0, 114.0], [1165.0, 77.0], [1155.0, 104.0], [1183.0, 342.0], [1181.0, 709.0], [1179.0, 577.6666666666666], [1177.0, 589.0], [1175.0, 98.0], [1169.0, 470.0], [1249.0, 339.0], [1271.0, 99.0], [1253.0, 375.0], [1275.0, 687.0], [1279.0, 98.0], [1251.0, 437.0], [1255.0, 561.0], [1259.0, 408.0], [1263.0, 618.0], [1277.0, 663.5], [1273.0, 652.0], [1269.0, 672.5], [1267.0, 395.0], [1231.0, 114.0], [1227.0, 392.0], [1221.0, 827.5], [1217.0, 117.0], [1245.0, 662.0], [1239.0, 110.0], [1235.0, 738.0], [1337.0, 126.0], [1343.0, 404.0], [1313.0, 121.0], [1317.0, 275.0], [1321.0, 144.5], [1319.0, 125.0], [1327.0, 364.5], [1325.0, 136.0], [1341.0, 128.0], [1339.0, 149.0], [1335.0, 130.0], [1333.0, 444.0], [1331.0, 195.0], [1329.0, 131.0], [1311.0, 213.0], [1281.0, 113.0], [1285.0, 265.0], [1287.0, 114.0], [1289.0, 215.5], [1293.0, 316.0], [1295.0, 127.0], [1309.0, 122.5], [1307.0, 123.0], [1305.0, 302.0], [1299.0, 126.0], [1405.0, 143.0], [1407.0, 159.0], [1381.0, 314.0], [1379.0, 107.0], [1383.0, 103.0], [1385.0, 249.0], [1387.0, 301.0], [1389.0, 310.0], [1391.0, 285.0], [1403.0, 142.0], [1401.0, 144.0], [1399.0, 142.5], [1397.0, 163.5], [1395.0, 147.0], [1393.0, 145.0], [1375.0, 298.0], [1345.0, 134.0], [1347.0, 384.0], [1349.0, 126.0], [1351.0, 428.0], [1353.0, 433.0], [1355.0, 443.0], [1357.0, 437.0], [1373.0, 382.0], [1371.0, 398.0], [1369.0, 359.5], [1367.0, 302.0], [1365.0, 123.0], [1363.0, 121.0], [1361.0, 130.0], [1461.0, 81.0], [1423.0, 122.0], [1465.0, 82.0], [1471.0, 83.5], [1443.0, 131.5], [1441.0, 134.0], [1451.0, 124.0], [1455.0, 113.5], [1453.0, 119.0], [1469.0, 80.0], [1463.0, 85.0], [1457.0, 104.0], [1421.0, 123.0], [1419.0, 121.0], [1417.0, 128.0], [1415.0, 131.0], [1413.0, 124.0], [1411.0, 131.0], [1409.0, 136.0], [1439.0, 128.0], [1437.0, 144.0], [1429.0, 129.0], [1425.0, 135.0], [1525.0, 105.0], [1531.0, 98.0], [1535.0, 98.0], [1505.0, 98.0], [1507.0, 109.0], [1509.0, 99.5], [1519.0, 106.0], [1515.0, 107.5], [1533.0, 97.0], [1527.0, 100.75], [1523.0, 101.0], [1521.0, 119.0], [1483.0, 94.0], [1479.0, 158.0], [1473.0, 80.5], [1503.0, 100.0], [1501.0, 112.0], [1495.0, 105.0], [1489.0, 139.0], [1499.0, 104.0], [1537.0, 97.0], [1567.0, 103.0], [1549.0, 98.66666666666667], [1575.0, 95.0], [1569.0, 91.0], [1561.0, 99.0], [1559.0, 103.0], [1553.0, 97.0], [1555.0, 101.0], [1.0, 12760.0]], "isOverall": false, "label": "getListOfUser", "isController": false}, {"data": [[801.6518750000015, 538.2912499999999]], "isOverall": false, "label": "getListOfUser-Aggregated", "isController": false}, {"data": [[98.0, 17516.649999999998], [113.0, 17355.5], [123.0, 16431.0], [122.0, 16900.5], [124.0, 17378.0], [158.0, 17905.0], [157.0, 17320.0], [278.0, 16584.25], [274.0, 16775.0], [302.0, 16735.090909090908], [292.0, 16430.5], [312.0, 12125.000000000002], [311.0, 15154.777777777772], [305.0, 16683.0], [325.0, 10040.0], [350.0, 8172.0], [349.0, 8179.75], [348.0, 8101.0], [347.0, 8695.78947368421], [345.0, 8578.25], [338.0, 8606.0], [336.0, 9793.5], [363.0, 7800.0], [358.0, 8406.0], [355.0, 8152.041666666666], [354.0, 8106.0], [353.0, 8488.0], [380.0, 7867.0], [371.0, 7772.0], [368.0, 8587.0], [387.0, 7796.5], [398.0, 7679.0], [396.0, 7696.0], [395.0, 7734.0], [392.0, 8028.0], [390.0, 7746.0], [389.0, 7886.666666666667], [388.0, 7976.428571428572], [386.0, 8125.700000000001], [385.0, 7882.0], [410.0, 7593.285714285715], [409.0, 8141.125], [401.0, 7843.0], [461.0, 7221.0], [460.0, 7588.0], [459.0, 7238.0], [458.0, 7214.75], [456.0, 7405.875], [455.0, 7208.0], [451.0, 7422.25], [450.0, 7240.486486486486], [479.0, 6951.0], [476.0, 6973.0], [474.0, 7484.5], [468.0, 7042.0], [467.0, 7187.0], [465.0, 7324.333333333333], [494.0, 6989.0], [493.0, 7097.166666666666], [491.0, 6922.4], [489.0, 6854.0], [488.0, 6951.0], [487.0, 7075.0], [482.0, 6637.0], [480.0, 7590.0], [485.0, 7577.0], [509.0, 7032.0], [508.0, 7068.0], [507.0, 7030.0], [506.0, 7076.75], [505.0, 7119.0], [502.0, 7134.0], [501.0, 7071.0], [500.0, 6980.0], [498.0, 7164.0], [496.0, 7051.0], [539.0, 6524.0], [543.0, 6511.5], [542.0, 6520.0], [541.0, 6502.0], [538.0, 6518.0], [518.0, 6900.5], [515.0, 9300.0], [514.0, 7022.0], [513.0, 6997.0], [527.0, 6797.000000000001], [525.0, 6820.0], [524.0, 6842.6], [522.0, 6880.0], [572.0, 6406.0], [573.0, 6730.5], [571.0, 6215.0], [568.0, 6515.0], [567.0, 6312.0], [564.0, 6296.0], [560.0, 6343.5], [558.0, 6372.333333333333], [546.0, 6484.0], [550.0, 6463.5], [548.0, 6497.0], [555.0, 6154.0], [554.0, 6409.0], [601.0, 6290.0], [604.0, 6267.0], [600.0, 6761.0], [583.0, 5989.0], [581.0, 6894.0], [580.0, 6899.0], [578.0, 6140.333333333333], [577.0, 6620.333333333333], [597.0, 5855.0], [594.0, 6258.5], [593.0, 5844.0], [592.0, 6639.5], [591.0, 5890.0], [590.0, 5931.333333333333], [588.0, 5950.0], [587.0, 6061.0], [636.0, 5725.333333333333], [639.0, 6050.8], [638.0, 5877.5], [637.0, 5666.0], [624.0, 5800.0], [617.0, 6070.0], [616.0, 5786.0], [610.0, 6001.666666666667], [608.0, 6163.0], [668.0, 5359.0], [665.0, 5415.0], [647.0, 5594.5], [646.0, 5700.714285714285], [640.0, 6004.0], [662.0, 5471.0], [660.0, 5501.0], [659.0, 5490.5], [658.0, 5498.0], [656.0, 5543.0], [655.0, 5561.5], [649.0, 5552.0], [648.0, 5583.0], [702.0, 5225.0], [688.0, 5341.0], [684.0, 5320.0], [674.0, 5346.0], [715.0, 5634.0], [754.0, 2712.0], [751.0, 1281.5], [760.0, 2872.0], [761.0, 1336.0], [762.0, 1191.0], [763.0, 2796.0], [764.0, 2791.0], [765.0, 1998.9999999999998], [766.0, 2383.5], [767.0, 4839.0], [752.0, 1160.8999999999999], [753.0, 942.0], [755.0, 2719.0], [756.0, 1124.0], [757.0, 1161.0], [758.0, 1141.0], [759.0, 1162.0], [771.0, 2895.0], [768.0, 2621.5], [783.0, 4592.625], [780.0, 3557.0], [781.0, 5506.5], [782.0, 4639.5], [778.0, 2576.0], [779.0, 2701.9594594594587], [769.0, 2821.0], [770.0, 4851.0], [772.0, 2956.0], [773.0, 3849.0], [774.0, 2564.0], [775.0, 2566.0], [786.0, 4201.333333333333], [796.0, 4310.25], [792.0, 4933.0], [793.0, 3750.0], [788.0, 4437.8823529411775], [791.0, 4849.0], [776.0, 2559.0], [777.0, 1812.0], [800.0, 3837.0], [814.0, 1928.0], [805.0, 4976.0], [815.0, 4105.0], [822.0, 3951.894736842105], [823.0, 5067.0], [831.0, 6250.0], [839.0, 622.0], [856.0, 6042.5], [843.0, 3810.5], [861.0, 6648.0], [855.0, 4598.0], [860.0, 6685.0], [858.0, 5479.0], [857.0, 3588.6666666666665], [844.0, 602.0], [846.0, 5235.0], [895.0, 4089.0], [893.0, 4318.0], [868.0, 2191.8333333333335], [866.0, 3192.1818181818185], [886.0, 1736.0], [885.0, 3898.0], [881.0, 3380.9223300970893], [880.0, 3063.1333333333337], [879.0, 5782.0], [877.0, 2567.6666666666665], [876.0, 4602.0], [874.0, 6990.0], [873.0, 4615.461538461538], [872.0, 5445.444444444444], [897.0, 3178.428571428571], [926.0, 5955.0], [896.0, 3279.0], [1279.0, 8193.0], [1278.0, 9669.0], [1249.0, 11489.0], [1293.0, 8662.0], [1358.0, 8448.0], [1378.0, 11065.0], [1386.0, 11392.666666666666], [1376.0, 12390.0], [1373.0, 8460.5], [1371.0, 8394.0], [1370.0, 7753.8], [1362.0, 9493.0], [1355.0, 8377.0], [1349.0, 10541.0], [1344.0, 10573.0], [1438.0, 11011.0], [1466.0, 10629.5], [1465.0, 8961.0], [1453.0, 6948.0], [1437.0, 11251.0], [1436.0, 9957.0], [1434.0, 11105.0], [1426.0, 7612.0], [1422.0, 10551.0], [1486.0, 11259.0], [1514.0, 8745.0], [1534.0, 11583.0], [1515.0, 8874.0], [1519.0, 10309.0], [1494.0, 12011.0], [1492.0, 7935.0], [1488.0, 9533.666666666666], [1476.0, 10993.0], [1474.0, 12053.0], [1599.0, 4340.640000000001], [1562.0, 7855.0], [1561.0, 8877.0], [1559.0, 11548.0], [1558.0, 10964.0], [1550.0, 10716.0], [1549.0, 10576.0], [1548.0, 12039.0], [1537.0, 8861.0], [1600.0, 7124.997596153849]], "isOverall": false, "label": "register", "isController": false}, {"data": [[892.0006249999996, 7324.978125000004]], "isOverall": false, "label": "register-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1600.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 15010.0, "minX": 1.6674792E12, "maxY": 98513.21666666666, "series": [{"data": [[1.6674792E12, 98513.21666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6674792E12, 15010.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6674792E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 514.9231249999998, "minX": 1.6674792E12, "maxY": 7324.978125000004, "series": [{"data": [[1.6674792E12, 514.9231249999998]], "isOverall": false, "label": "getUser", "isController": false}, {"data": [[1.6674792E12, 538.2912499999999]], "isOverall": false, "label": "getListOfUser", "isController": false}, {"data": [[1.6674792E12, 7324.978125000004]], "isOverall": false, "label": "register", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6674792E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 495.98250000000013, "minX": 1.6674792E12, "maxY": 5177.875625000001, "series": [{"data": [[1.6674792E12, 513.8831250000003]], "isOverall": false, "label": "getUser", "isController": false}, {"data": [[1.6674792E12, 495.98250000000013]], "isOverall": false, "label": "getListOfUser", "isController": false}, {"data": [[1.6674792E12, 5177.875625000001]], "isOverall": false, "label": "register", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6674792E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6674792E12, "maxY": 6266.051875000002, "series": [{"data": [[1.6674792E12, 180.51812500000003]], "isOverall": false, "label": "getUser", "isController": false}, {"data": [[1.6674792E12, 0.0]], "isOverall": false, "label": "getListOfUser", "isController": false}, {"data": [[1.6674792E12, 6266.051875000002]], "isOverall": false, "label": "register", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6674792E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 72.0, "minX": 1.6674792E12, "maxY": 14791.0, "series": [{"data": [[1.6674792E12, 14791.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6674792E12, 72.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6674792E12, 7589.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6674792E12, 11370.050000000007]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6674792E12, 313.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.6674792E12, 8878.8]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6674792E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 95.0, "minX": 1.0, "maxY": 17513.0, "series": [{"data": [[33.0, 1738.0], [2.0, 10995.0], [35.0, 1174.0], [679.0, 95.0], [47.0, 1162.0], [49.0, 5497.0], [797.0, 126.0], [3.0, 12019.0], [71.0, 2485.0], [72.0, 3437.0], [5.0, 11181.0], [87.0, 4598.0], [106.0, 6034.0], [119.0, 5495.0], [130.0, 5092.5], [136.0, 3369.0], [183.0, 5643.0], [177.0, 3063.0], [11.0, 14515.0], [1.0, 12760.0], [293.0, 165.0], [317.0, 457.5], [20.0, 909.0], [362.0, 358.0], [396.0, 100.0], [487.0, 134.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[317.0, 17513.0], [11.0, 15180.0], [177.0, 17444.0], [106.0, 15163.0], [119.0, 16517.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 797.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 14515.0, "series": [{"data": [[33.0, 1738.0], [2.0, 10995.0], [35.0, 1174.0], [679.0, 95.0], [47.0, 1162.0], [49.0, 5497.0], [797.0, 125.0], [3.0, 12019.0], [71.0, 2485.0], [72.0, 3437.0], [5.0, 11181.0], [87.0, 4598.0], [106.0, 6034.0], [119.0, 5495.0], [130.0, 5092.5], [136.0, 3368.5], [183.0, 5314.0], [177.0, 3063.0], [11.0, 14515.0], [1.0, 12760.0], [293.0, 165.0], [317.0, 457.0], [20.0, 736.0], [362.0, 356.5], [396.0, 100.0], [487.0, 133.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[317.0, 0.0], [11.0, 0.0], [177.0, 0.0], [106.0, 0.0], [119.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 797.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 80.0, "minX": 1.6674792E12, "maxY": 80.0, "series": [{"data": [[1.6674792E12, 80.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6674792E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.5333333333333334, "minX": 1.6674792E12, "maxY": 76.5, "series": [{"data": [[1.6674792E12, 76.5]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6674792E12, 1.9666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.6674792E12, 1.5333333333333334]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6674792E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 3.5, "minX": 1.6674792E12, "maxY": 26.666666666666668, "series": [{"data": [[1.6674792E12, 3.5]], "isOverall": false, "label": "register-failure", "isController": false}, {"data": [[1.6674792E12, 23.166666666666668]], "isOverall": false, "label": "register-success", "isController": false}, {"data": [[1.6674792E12, 26.666666666666668]], "isOverall": false, "label": "getUser-success", "isController": false}, {"data": [[1.6674792E12, 26.666666666666668]], "isOverall": false, "label": "getListOfUser-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6674792E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 3.5, "minX": 1.6674792E12, "maxY": 76.5, "series": [{"data": [[1.6674792E12, 76.5]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6674792E12, 3.5]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6674792E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

